{
  "version": 3,
  "sources": ["../../chroma-js/chroma.js"],
  "sourcesContent": ["/**\r\n * chroma.js - JavaScript library for color conversions\r\n *\r\n * Copyright (c) 2011-2019, Gregor Aisch\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice, this\r\n * list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n * this list of conditions and the following disclaimer in the documentation\r\n * and/or other materials provided with the distribution.\r\n *\r\n * 3. The name Gregor Aisch may not be used to endorse or promote products\r\n * derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\r\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\r\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * -------------------------------------------------------\r\n *\r\n * chroma.js includes colors from colorbrewer2.org, which are released under\r\n * the following license:\r\n *\r\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\r\n * and The Pennsylvania State University.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\r\n * either express or implied. See the License for the specific\r\n * language governing permissions and limitations under the License.\r\n *\r\n * ------------------------------------------------------\r\n *\r\n * Named colors are taken from X11 Color Names.\r\n * http://www.w3.org/TR/css3-color/#svg-color\r\n *\r\n * @preserve\r\n */\r\n\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\r\n})(this, (function () { 'use strict';\r\n\r\n    var limit$2 = function (x, min, max) {\r\n        if ( min === void 0 ) min=0;\r\n        if ( max === void 0 ) max=1;\r\n\r\n        return x < min ? min : x > max ? max : x;\r\n    };\r\n\r\n    var limit$1 = limit$2;\r\n\r\n    var clip_rgb$3 = function (rgb) {\r\n        rgb._clipped = false;\r\n        rgb._unclipped = rgb.slice(0);\r\n        for (var i=0; i<=3; i++) {\r\n            if (i < 3) {\r\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\r\n                rgb[i] = limit$1(rgb[i], 0, 255);\r\n            } else if (i === 3) {\r\n                rgb[i] = limit$1(rgb[i], 0, 1);\r\n            }\r\n        }\r\n        return rgb;\r\n    };\r\n\r\n    // ported from jQuery's $.type\r\n    var classToType = {};\r\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\r\n        var name = list$1[i$1];\r\n\r\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\r\n    }\r\n    var type$p = function(obj) {\r\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\r\n    };\r\n\r\n    var type$o = type$p;\r\n\r\n    var unpack$B = function (args, keyOrder) {\r\n        if ( keyOrder === void 0 ) keyOrder=null;\r\n\r\n    \t// if called with more than 3 arguments, we return the arguments\r\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\r\n        // with less than 3 args we check if first arg is object\r\n        // and use the keyOrder string to extract and sort properties\r\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\r\n    \t\treturn keyOrder.split('')\r\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\r\n    \t\t\t.map(function (k) { return args[0][k]; });\r\n    \t}\r\n    \t// otherwise we just return the first argument\r\n    \t// (which we suppose is an array of args)\r\n        return args[0];\r\n    };\r\n\r\n    var type$n = type$p;\r\n\r\n    var last$4 = function (args) {\r\n        if (args.length < 2) { return null; }\r\n        var l = args.length-1;\r\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\r\n        return null;\r\n    };\r\n\r\n    var PI$2 = Math.PI;\r\n\r\n    var utils = {\r\n    \tclip_rgb: clip_rgb$3,\r\n    \tlimit: limit$2,\r\n    \ttype: type$p,\r\n    \tunpack: unpack$B,\r\n    \tlast: last$4,\r\n    \tPI: PI$2,\r\n    \tTWOPI: PI$2*2,\r\n    \tPITHIRD: PI$2/3,\r\n    \tDEG2RAD: PI$2 / 180,\r\n    \tRAD2DEG: 180 / PI$2\r\n    };\r\n\r\n    var input$h = {\r\n    \tformat: {},\r\n    \tautodetect: []\r\n    };\r\n\r\n    var last$3 = utils.last;\r\n    var clip_rgb$2 = utils.clip_rgb;\r\n    var type$m = utils.type;\r\n    var _input = input$h;\r\n\r\n    var Color$D = function Color() {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var me = this;\r\n        if (type$m(args[0]) === 'object' &&\r\n            args[0].constructor &&\r\n            args[0].constructor === this.constructor) {\r\n            // the argument is already a Color instance\r\n            return args[0];\r\n        }\r\n\r\n        // last argument could be the mode\r\n        var mode = last$3(args);\r\n        var autodetect = false;\r\n\r\n        if (!mode) {\r\n            autodetect = true;\r\n            if (!_input.sorted) {\r\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\r\n                _input.sorted = true;\r\n            }\r\n            // auto-detect format\r\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\r\n                var chk = list[i];\r\n\r\n                mode = chk.test.apply(chk, args);\r\n                if (mode) { break; }\r\n            }\r\n        }\r\n\r\n        if (_input.format[mode]) {\r\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\r\n            me._rgb = clip_rgb$2(rgb);\r\n        } else {\r\n            throw new Error('unknown format: '+args);\r\n        }\r\n\r\n        // add alpha channel\r\n        if (me._rgb.length === 3) { me._rgb.push(1); }\r\n    };\r\n\r\n    Color$D.prototype.toString = function toString () {\r\n        if (type$m(this.hex) == 'function') { return this.hex(); }\r\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\r\n    };\r\n\r\n    var Color_1 = Color$D;\r\n\r\n    var chroma$k = function () {\r\n    \tvar args = [], len = arguments.length;\r\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\r\n    };\r\n\r\n    chroma$k.Color = Color_1;\r\n    chroma$k.version = '2.4.2';\r\n\r\n    var chroma_1 = chroma$k;\r\n\r\n    var unpack$A = utils.unpack;\r\n    var max$2 = Math.max;\r\n\r\n    var rgb2cmyk$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$A(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        r = r / 255;\r\n        g = g / 255;\r\n        b = b / 255;\r\n        var k = 1 - max$2(r,max$2(g,b));\r\n        var f = k < 1 ? 1 / (1-k) : 0;\r\n        var c = (1-r-k) * f;\r\n        var m = (1-g-k) * f;\r\n        var y = (1-b-k) * f;\r\n        return [c,m,y,k];\r\n    };\r\n\r\n    var rgb2cmyk_1 = rgb2cmyk$1;\r\n\r\n    var unpack$z = utils.unpack;\r\n\r\n    var cmyk2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack$z(args, 'cmyk');\r\n        var c = args[0];\r\n        var m = args[1];\r\n        var y = args[2];\r\n        var k = args[3];\r\n        var alpha = args.length > 4 ? args[4] : 1;\r\n        if (k === 1) { return [0,0,0,alpha]; }\r\n        return [\r\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\r\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\r\n            alpha\r\n        ];\r\n    };\r\n\r\n    var cmyk2rgb_1 = cmyk2rgb;\r\n\r\n    var chroma$j = chroma_1;\r\n    var Color$C = Color_1;\r\n    var input$g = input$h;\r\n    var unpack$y = utils.unpack;\r\n    var type$l = utils.type;\r\n\r\n    var rgb2cmyk = rgb2cmyk_1;\r\n\r\n    Color$C.prototype.cmyk = function() {\r\n        return rgb2cmyk(this._rgb);\r\n    };\r\n\r\n    chroma$j.cmyk = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\r\n    };\r\n\r\n    input$g.format.cmyk = cmyk2rgb_1;\r\n\r\n    input$g.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$y(args, 'cmyk');\r\n            if (type$l(args) === 'array' && args.length === 4) {\r\n                return 'cmyk';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$x = utils.unpack;\r\n    var last$2 = utils.last;\r\n    var rnd = function (a) { return Math.round(a*100)/100; };\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - hsl2css(h,s,l)\r\n     * - hsl2css(h,s,l,a)\r\n     * - hsl2css([h,s,l], mode)\r\n     * - hsl2css([h,s,l,a], mode)\r\n     * - hsl2css({h,s,l,a}, mode)\r\n     */\r\n    var hsl2css$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var hsla = unpack$x(args, 'hsla');\r\n        var mode = last$2(args) || 'lsa';\r\n        hsla[0] = rnd(hsla[0] || 0);\r\n        hsla[1] = rnd(hsla[1]*100) + '%';\r\n        hsla[2] = rnd(hsla[2]*100) + '%';\r\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\r\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\r\n            mode = 'hsla';\r\n        } else {\r\n            hsla.length = 3;\r\n        }\r\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\r\n    };\r\n\r\n    var hsl2css_1 = hsl2css$1;\r\n\r\n    var unpack$w = utils.unpack;\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - rgb2hsl(r,g,b)\r\n     * - rgb2hsl(r,g,b,a)\r\n     * - rgb2hsl([r,g,b])\r\n     * - rgb2hsl([r,g,b,a])\r\n     * - rgb2hsl({r,g,b,a})\r\n     */\r\n    var rgb2hsl$3 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack$w(args, 'rgba');\r\n        var r = args[0];\r\n        var g = args[1];\r\n        var b = args[2];\r\n\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n\r\n        var min = Math.min(r, g, b);\r\n        var max = Math.max(r, g, b);\r\n\r\n        var l = (max + min) / 2;\r\n        var s, h;\r\n\r\n        if (max === min){\r\n            s = 0;\r\n            h = Number.NaN;\r\n        } else {\r\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\r\n        }\r\n\r\n        if (r == max) { h = (g - b) / (max - min); }\r\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\r\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\r\n\r\n        h *= 60;\r\n        if (h < 0) { h += 360; }\r\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\r\n        return [h,s,l];\r\n    };\r\n\r\n    var rgb2hsl_1 = rgb2hsl$3;\r\n\r\n    var unpack$v = utils.unpack;\r\n    var last$1 = utils.last;\r\n    var hsl2css = hsl2css_1;\r\n    var rgb2hsl$2 = rgb2hsl_1;\r\n    var round$6 = Math.round;\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - rgb2css(r,g,b)\r\n     * - rgb2css(r,g,b,a)\r\n     * - rgb2css([r,g,b], mode)\r\n     * - rgb2css([r,g,b,a], mode)\r\n     * - rgb2css({r,g,b,a}, mode)\r\n     */\r\n    var rgb2css$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgba = unpack$v(args, 'rgba');\r\n        var mode = last$1(args) || 'rgb';\r\n        if (mode.substr(0,3) == 'hsl') {\r\n            return hsl2css(rgb2hsl$2(rgba), mode);\r\n        }\r\n        rgba[0] = round$6(rgba[0]);\r\n        rgba[1] = round$6(rgba[1]);\r\n        rgba[2] = round$6(rgba[2]);\r\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\r\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\r\n            mode = 'rgba';\r\n        }\r\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\r\n    };\r\n\r\n    var rgb2css_1 = rgb2css$1;\r\n\r\n    var unpack$u = utils.unpack;\r\n    var round$5 = Math.round;\r\n\r\n    var hsl2rgb$1 = function () {\r\n        var assign;\r\n\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n        args = unpack$u(args, 'hsl');\r\n        var h = args[0];\r\n        var s = args[1];\r\n        var l = args[2];\r\n        var r,g,b;\r\n        if (s === 0) {\r\n            r = g = b = l*255;\r\n        } else {\r\n            var t3 = [0,0,0];\r\n            var c = [0,0,0];\r\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\r\n            var t1 = 2 * l - t2;\r\n            var h_ = h / 360;\r\n            t3[0] = h_ + 1/3;\r\n            t3[1] = h_;\r\n            t3[2] = h_ - 1/3;\r\n            for (var i=0; i<3; i++) {\r\n                if (t3[i] < 0) { t3[i] += 1; }\r\n                if (t3[i] > 1) { t3[i] -= 1; }\r\n                if (6 * t3[i] < 1)\r\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\r\n                else if (2 * t3[i] < 1)\r\n                    { c[i] = t2; }\r\n                else if (3 * t3[i] < 2)\r\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\r\n                else\r\n                    { c[i] = t1; }\r\n            }\r\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\r\n        }\r\n        if (args.length > 3) {\r\n            // keep alpha channel\r\n            return [r,g,b,args[3]];\r\n        }\r\n        return [r,g,b,1];\r\n    };\r\n\r\n    var hsl2rgb_1 = hsl2rgb$1;\r\n\r\n    var hsl2rgb = hsl2rgb_1;\r\n    var input$f = input$h;\r\n\r\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\r\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\r\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\r\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\r\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\r\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\r\n\r\n    var round$4 = Math.round;\r\n\r\n    var css2rgb$1 = function (css) {\r\n        css = css.toLowerCase().trim();\r\n        var m;\r\n\r\n        if (input$f.format.named) {\r\n            try {\r\n                return input$f.format.named(css);\r\n            } catch (e) {\r\n                // eslint-disable-next-line\r\n            }\r\n        }\r\n\r\n        // rgb(250,20,0)\r\n        if ((m = css.match(RE_RGB))) {\r\n            var rgb = m.slice(1,4);\r\n            for (var i=0; i<3; i++) {\r\n                rgb[i] = +rgb[i];\r\n            }\r\n            rgb[3] = 1;  // default alpha\r\n            return rgb;\r\n        }\r\n\r\n        // rgba(250,20,0,0.4)\r\n        if ((m = css.match(RE_RGBA))) {\r\n            var rgb$1 = m.slice(1,5);\r\n            for (var i$1=0; i$1<4; i$1++) {\r\n                rgb$1[i$1] = +rgb$1[i$1];\r\n            }\r\n            return rgb$1;\r\n        }\r\n\r\n        // rgb(100%,0%,0%)\r\n        if ((m = css.match(RE_RGB_PCT))) {\r\n            var rgb$2 = m.slice(1,4);\r\n            for (var i$2=0; i$2<3; i$2++) {\r\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\r\n            }\r\n            rgb$2[3] = 1;  // default alpha\r\n            return rgb$2;\r\n        }\r\n\r\n        // rgba(100%,0%,0%,0.4)\r\n        if ((m = css.match(RE_RGBA_PCT))) {\r\n            var rgb$3 = m.slice(1,5);\r\n            for (var i$3=0; i$3<3; i$3++) {\r\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\r\n            }\r\n            rgb$3[3] = +rgb$3[3];\r\n            return rgb$3;\r\n        }\r\n\r\n        // hsl(0,100%,50%)\r\n        if ((m = css.match(RE_HSL))) {\r\n            var hsl = m.slice(1,4);\r\n            hsl[1] *= 0.01;\r\n            hsl[2] *= 0.01;\r\n            var rgb$4 = hsl2rgb(hsl);\r\n            rgb$4[3] = 1;\r\n            return rgb$4;\r\n        }\r\n\r\n        // hsla(0,100%,50%,0.5)\r\n        if ((m = css.match(RE_HSLA))) {\r\n            var hsl$1 = m.slice(1,4);\r\n            hsl$1[1] *= 0.01;\r\n            hsl$1[2] *= 0.01;\r\n            var rgb$5 = hsl2rgb(hsl$1);\r\n            rgb$5[3] = +m[4];  // default alpha = 1\r\n            return rgb$5;\r\n        }\r\n    };\r\n\r\n    css2rgb$1.test = function (s) {\r\n        return RE_RGB.test(s) ||\r\n            RE_RGBA.test(s) ||\r\n            RE_RGB_PCT.test(s) ||\r\n            RE_RGBA_PCT.test(s) ||\r\n            RE_HSL.test(s) ||\r\n            RE_HSLA.test(s);\r\n    };\r\n\r\n    var css2rgb_1 = css2rgb$1;\r\n\r\n    var chroma$i = chroma_1;\r\n    var Color$B = Color_1;\r\n    var input$e = input$h;\r\n    var type$k = utils.type;\r\n\r\n    var rgb2css = rgb2css_1;\r\n    var css2rgb = css2rgb_1;\r\n\r\n    Color$B.prototype.css = function(mode) {\r\n        return rgb2css(this._rgb, mode);\r\n    };\r\n\r\n    chroma$i.css = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\r\n    };\r\n\r\n    input$e.format.css = css2rgb;\r\n\r\n    input$e.autodetect.push({\r\n        p: 5,\r\n        test: function (h) {\r\n            var rest = [], len = arguments.length - 1;\r\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\r\n                return 'css';\r\n            }\r\n        }\r\n    });\r\n\r\n    var Color$A = Color_1;\r\n    var chroma$h = chroma_1;\r\n    var input$d = input$h;\r\n    var unpack$t = utils.unpack;\r\n\r\n    input$d.format.gl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgb = unpack$t(args, 'rgba');\r\n        rgb[0] *= 255;\r\n        rgb[1] *= 255;\r\n        rgb[2] *= 255;\r\n        return rgb;\r\n    };\r\n\r\n    chroma$h.gl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\r\n    };\r\n\r\n    Color$A.prototype.gl = function() {\r\n        var rgb = this._rgb;\r\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\r\n    };\r\n\r\n    var unpack$s = utils.unpack;\r\n\r\n    var rgb2hcg$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$s(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var min = Math.min(r, g, b);\r\n        var max = Math.max(r, g, b);\r\n        var delta = max - min;\r\n        var c = delta * 100 / 255;\r\n        var _g = min / (255 - delta) * 100;\r\n        var h;\r\n        if (delta === 0) {\r\n            h = Number.NaN;\r\n        } else {\r\n            if (r === max) { h = (g - b) / delta; }\r\n            if (g === max) { h = 2+(b - r) / delta; }\r\n            if (b === max) { h = 4+(r - g) / delta; }\r\n            h *= 60;\r\n            if (h < 0) { h += 360; }\r\n        }\r\n        return [h, c, _g];\r\n    };\r\n\r\n    var rgb2hcg_1 = rgb2hcg$1;\r\n\r\n    var unpack$r = utils.unpack;\r\n    var floor$3 = Math.floor;\r\n\r\n    /*\r\n     * this is basically just HSV with some minor tweaks\r\n     *\r\n     * hue.. [0..360]\r\n     * chroma .. [0..1]\r\n     * grayness .. [0..1]\r\n     */\r\n\r\n    var hcg2rgb = function () {\r\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\r\n\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n        args = unpack$r(args, 'hcg');\r\n        var h = args[0];\r\n        var c = args[1];\r\n        var _g = args[2];\r\n        var r,g,b;\r\n        _g = _g * 255;\r\n        var _c = c * 255;\r\n        if (c === 0) {\r\n            r = g = b = _g;\r\n        } else {\r\n            if (h === 360) { h = 0; }\r\n            if (h > 360) { h -= 360; }\r\n            if (h < 0) { h += 360; }\r\n            h /= 60;\r\n            var i = floor$3(h);\r\n            var f = h - i;\r\n            var p = _g * (1 - c);\r\n            var q = p + _c * (1 - f);\r\n            var t = p + _c * f;\r\n            var v = p + _c;\r\n            switch (i) {\r\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\r\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\r\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\r\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\r\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\r\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\r\n            }\r\n        }\r\n        return [r, g, b, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var hcg2rgb_1 = hcg2rgb;\r\n\r\n    var unpack$q = utils.unpack;\r\n    var type$j = utils.type;\r\n    var chroma$g = chroma_1;\r\n    var Color$z = Color_1;\r\n    var input$c = input$h;\r\n\r\n    var rgb2hcg = rgb2hcg_1;\r\n\r\n    Color$z.prototype.hcg = function() {\r\n        return rgb2hcg(this._rgb);\r\n    };\r\n\r\n    chroma$g.hcg = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\r\n    };\r\n\r\n    input$c.format.hcg = hcg2rgb_1;\r\n\r\n    input$c.autodetect.push({\r\n        p: 1,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$q(args, 'hcg');\r\n            if (type$j(args) === 'array' && args.length === 3) {\r\n                return 'hcg';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$p = utils.unpack;\r\n    var last = utils.last;\r\n    var round$3 = Math.round;\r\n\r\n    var rgb2hex$2 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$p(args, 'rgba');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var a = ref[3];\r\n        var mode = last(args) || 'auto';\r\n        if (a === undefined) { a = 1; }\r\n        if (mode === 'auto') {\r\n            mode = a < 1 ? 'rgba' : 'rgb';\r\n        }\r\n        r = round$3(r);\r\n        g = round$3(g);\r\n        b = round$3(b);\r\n        var u = r << 16 | g << 8 | b;\r\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\r\n        str = str.substr(str.length - 6);\r\n        var hxa = '0' + round$3(a * 255).toString(16);\r\n        hxa = hxa.substr(hxa.length - 2);\r\n        switch (mode.toLowerCase()) {\r\n            case 'rgba': return (\"#\" + str + hxa);\r\n            case 'argb': return (\"#\" + hxa + str);\r\n            default: return (\"#\" + str);\r\n        }\r\n    };\r\n\r\n    var rgb2hex_1 = rgb2hex$2;\r\n\r\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\r\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\r\n\r\n    var hex2rgb$1 = function (hex) {\r\n        if (hex.match(RE_HEX)) {\r\n            // remove optional leading #\r\n            if (hex.length === 4 || hex.length === 7) {\r\n                hex = hex.substr(1);\r\n            }\r\n            // expand short-notation to full six-digit\r\n            if (hex.length === 3) {\r\n                hex = hex.split('');\r\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\r\n            }\r\n            var u = parseInt(hex, 16);\r\n            var r = u >> 16;\r\n            var g = u >> 8 & 0xFF;\r\n            var b = u & 0xFF;\r\n            return [r,g,b,1];\r\n        }\r\n\r\n        // match rgba hex format, eg #FF000077\r\n        if (hex.match(RE_HEXA)) {\r\n            if (hex.length === 5 || hex.length === 9) {\r\n                // remove optional leading #\r\n                hex = hex.substr(1);\r\n            }\r\n            // expand short-notation to full eight-digit\r\n            if (hex.length === 4) {\r\n                hex = hex.split('');\r\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\r\n            }\r\n            var u$1 = parseInt(hex, 16);\r\n            var r$1 = u$1 >> 24 & 0xFF;\r\n            var g$1 = u$1 >> 16 & 0xFF;\r\n            var b$1 = u$1 >> 8 & 0xFF;\r\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\r\n            return [r$1,g$1,b$1,a];\r\n        }\r\n\r\n        // we used to check for css colors here\r\n        // if _input.css? and rgb = _input.css hex\r\n        //     return rgb\r\n\r\n        throw new Error((\"unknown hex color: \" + hex));\r\n    };\r\n\r\n    var hex2rgb_1 = hex2rgb$1;\r\n\r\n    var chroma$f = chroma_1;\r\n    var Color$y = Color_1;\r\n    var type$i = utils.type;\r\n    var input$b = input$h;\r\n\r\n    var rgb2hex$1 = rgb2hex_1;\r\n\r\n    Color$y.prototype.hex = function(mode) {\r\n        return rgb2hex$1(this._rgb, mode);\r\n    };\r\n\r\n    chroma$f.hex = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\r\n    };\r\n\r\n    input$b.format.hex = hex2rgb_1;\r\n    input$b.autodetect.push({\r\n        p: 4,\r\n        test: function (h) {\r\n            var rest = [], len = arguments.length - 1;\r\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\r\n                return 'hex';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$o = utils.unpack;\r\n    var TWOPI$2 = utils.TWOPI;\r\n    var min$2 = Math.min;\r\n    var sqrt$4 = Math.sqrt;\r\n    var acos = Math.acos;\r\n\r\n    var rgb2hsi$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        /*\r\n        borrowed from here:\r\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\r\n        */\r\n        var ref = unpack$o(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        var h;\r\n        var min_ = min$2(r,g,b);\r\n        var i = (r+g+b) / 3;\r\n        var s = i > 0 ? 1 - min_/i : 0;\r\n        if (s === 0) {\r\n            h = NaN;\r\n        } else {\r\n            h = ((r-g)+(r-b)) / 2;\r\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\r\n            h = acos(h);\r\n            if (b > g) {\r\n                h = TWOPI$2 - h;\r\n            }\r\n            h /= TWOPI$2;\r\n        }\r\n        return [h*360,s,i];\r\n    };\r\n\r\n    var rgb2hsi_1 = rgb2hsi$1;\r\n\r\n    var unpack$n = utils.unpack;\r\n    var limit = utils.limit;\r\n    var TWOPI$1 = utils.TWOPI;\r\n    var PITHIRD = utils.PITHIRD;\r\n    var cos$4 = Math.cos;\r\n\r\n    /*\r\n     * hue [0..360]\r\n     * saturation [0..1]\r\n     * intensity [0..1]\r\n     */\r\n    var hsi2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        /*\r\n        borrowed from here:\r\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\r\n        */\r\n        args = unpack$n(args, 'hsi');\r\n        var h = args[0];\r\n        var s = args[1];\r\n        var i = args[2];\r\n        var r,g,b;\r\n\r\n        if (isNaN(h)) { h = 0; }\r\n        if (isNaN(s)) { s = 0; }\r\n        // normalize hue\r\n        if (h > 360) { h -= 360; }\r\n        if (h < 0) { h += 360; }\r\n        h /= 360;\r\n        if (h < 1/3) {\r\n            b = (1-s)/3;\r\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\r\n            g = 1 - (b+r);\r\n        } else if (h < 2/3) {\r\n            h -= 1/3;\r\n            r = (1-s)/3;\r\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\r\n            b = 1 - (r+g);\r\n        } else {\r\n            h -= 2/3;\r\n            g = (1-s)/3;\r\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\r\n            r = 1 - (g+b);\r\n        }\r\n        r = limit(i*r*3);\r\n        g = limit(i*g*3);\r\n        b = limit(i*b*3);\r\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var hsi2rgb_1 = hsi2rgb;\r\n\r\n    var unpack$m = utils.unpack;\r\n    var type$h = utils.type;\r\n    var chroma$e = chroma_1;\r\n    var Color$x = Color_1;\r\n    var input$a = input$h;\r\n\r\n    var rgb2hsi = rgb2hsi_1;\r\n\r\n    Color$x.prototype.hsi = function() {\r\n        return rgb2hsi(this._rgb);\r\n    };\r\n\r\n    chroma$e.hsi = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\r\n    };\r\n\r\n    input$a.format.hsi = hsi2rgb_1;\r\n\r\n    input$a.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$m(args, 'hsi');\r\n            if (type$h(args) === 'array' && args.length === 3) {\r\n                return 'hsi';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$l = utils.unpack;\r\n    var type$g = utils.type;\r\n    var chroma$d = chroma_1;\r\n    var Color$w = Color_1;\r\n    var input$9 = input$h;\r\n\r\n    var rgb2hsl$1 = rgb2hsl_1;\r\n\r\n    Color$w.prototype.hsl = function() {\r\n        return rgb2hsl$1(this._rgb);\r\n    };\r\n\r\n    chroma$d.hsl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\r\n    };\r\n\r\n    input$9.format.hsl = hsl2rgb_1;\r\n\r\n    input$9.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$l(args, 'hsl');\r\n            if (type$g(args) === 'array' && args.length === 3) {\r\n                return 'hsl';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$k = utils.unpack;\r\n    var min$1 = Math.min;\r\n    var max$1 = Math.max;\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - rgb2hsv(r,g,b)\r\n     * - rgb2hsv([r,g,b])\r\n     * - rgb2hsv({r,g,b})\r\n     */\r\n    var rgb2hsl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack$k(args, 'rgb');\r\n        var r = args[0];\r\n        var g = args[1];\r\n        var b = args[2];\r\n        var min_ = min$1(r, g, b);\r\n        var max_ = max$1(r, g, b);\r\n        var delta = max_ - min_;\r\n        var h,s,v;\r\n        v = max_ / 255.0;\r\n        if (max_ === 0) {\r\n            h = Number.NaN;\r\n            s = 0;\r\n        } else {\r\n            s = delta / max_;\r\n            if (r === max_) { h = (g - b) / delta; }\r\n            if (g === max_) { h = 2+(b - r) / delta; }\r\n            if (b === max_) { h = 4+(r - g) / delta; }\r\n            h *= 60;\r\n            if (h < 0) { h += 360; }\r\n        }\r\n        return [h, s, v]\r\n    };\r\n\r\n    var rgb2hsv$1 = rgb2hsl;\r\n\r\n    var unpack$j = utils.unpack;\r\n    var floor$2 = Math.floor;\r\n\r\n    var hsv2rgb = function () {\r\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\r\n\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n        args = unpack$j(args, 'hsv');\r\n        var h = args[0];\r\n        var s = args[1];\r\n        var v = args[2];\r\n        var r,g,b;\r\n        v *= 255;\r\n        if (s === 0) {\r\n            r = g = b = v;\r\n        } else {\r\n            if (h === 360) { h = 0; }\r\n            if (h > 360) { h -= 360; }\r\n            if (h < 0) { h += 360; }\r\n            h /= 60;\r\n\r\n            var i = floor$2(h);\r\n            var f = h - i;\r\n            var p = v * (1 - s);\r\n            var q = v * (1 - s * f);\r\n            var t = v * (1 - s * (1 - f));\r\n\r\n            switch (i) {\r\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\r\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\r\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\r\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\r\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\r\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\r\n            }\r\n        }\r\n        return [r,g,b,args.length > 3?args[3]:1];\r\n    };\r\n\r\n    var hsv2rgb_1 = hsv2rgb;\r\n\r\n    var unpack$i = utils.unpack;\r\n    var type$f = utils.type;\r\n    var chroma$c = chroma_1;\r\n    var Color$v = Color_1;\r\n    var input$8 = input$h;\r\n\r\n    var rgb2hsv = rgb2hsv$1;\r\n\r\n    Color$v.prototype.hsv = function() {\r\n        return rgb2hsv(this._rgb);\r\n    };\r\n\r\n    chroma$c.hsv = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\r\n    };\r\n\r\n    input$8.format.hsv = hsv2rgb_1;\r\n\r\n    input$8.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$i(args, 'hsv');\r\n            if (type$f(args) === 'array' && args.length === 3) {\r\n                return 'hsv';\r\n            }\r\n        }\r\n    });\r\n\r\n    var labConstants = {\r\n        // Corresponds roughly to RGB brighter/darker\r\n        Kn: 18,\r\n\r\n        // D65 standard referent\r\n        Xn: 0.950470,\r\n        Yn: 1,\r\n        Zn: 1.088830,\r\n\r\n        t0: 0.137931034,  // 4 / 29\r\n        t1: 0.206896552,  // 6 / 29\r\n        t2: 0.12841855,   // 3 * t1 * t1\r\n        t3: 0.008856452,  // t1 * t1 * t1\r\n    };\r\n\r\n    var LAB_CONSTANTS$3 = labConstants;\r\n    var unpack$h = utils.unpack;\r\n    var pow$a = Math.pow;\r\n\r\n    var rgb2lab$2 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$h(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = rgb2xyz(r,g,b);\r\n        var x = ref$1[0];\r\n        var y = ref$1[1];\r\n        var z = ref$1[2];\r\n        var l = 116 * y - 16;\r\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\r\n    };\r\n\r\n    var rgb_xyz = function (r) {\r\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\r\n        return pow$a((r + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    var xyz_lab = function (t) {\r\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\r\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\r\n    };\r\n\r\n    var rgb2xyz = function (r,g,b) {\r\n        r = rgb_xyz(r);\r\n        g = rgb_xyz(g);\r\n        b = rgb_xyz(b);\r\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\r\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\r\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\r\n        return [x,y,z];\r\n    };\r\n\r\n    var rgb2lab_1 = rgb2lab$2;\r\n\r\n    var LAB_CONSTANTS$2 = labConstants;\r\n    var unpack$g = utils.unpack;\r\n    var pow$9 = Math.pow;\r\n\r\n    /*\r\n     * L* [0..100]\r\n     * a [-100..100]\r\n     * b [-100..100]\r\n     */\r\n    var lab2rgb$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack$g(args, 'lab');\r\n        var l = args[0];\r\n        var a = args[1];\r\n        var b = args[2];\r\n        var x,y,z, r,g,b_;\r\n\r\n        y = (l + 16) / 116;\r\n        x = isNaN(a) ? y : y + a / 500;\r\n        z = isNaN(b) ? y : y - b / 200;\r\n\r\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\r\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\r\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\r\n\r\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\r\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\r\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\r\n\r\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var xyz_rgb = function (r) {\r\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\r\n    };\r\n\r\n    var lab_xyz = function (t) {\r\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\r\n    };\r\n\r\n    var lab2rgb_1 = lab2rgb$1;\r\n\r\n    var unpack$f = utils.unpack;\r\n    var type$e = utils.type;\r\n    var chroma$b = chroma_1;\r\n    var Color$u = Color_1;\r\n    var input$7 = input$h;\r\n\r\n    var rgb2lab$1 = rgb2lab_1;\r\n\r\n    Color$u.prototype.lab = function() {\r\n        return rgb2lab$1(this._rgb);\r\n    };\r\n\r\n    chroma$b.lab = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\r\n    };\r\n\r\n    input$7.format.lab = lab2rgb_1;\r\n\r\n    input$7.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$f(args, 'lab');\r\n            if (type$e(args) === 'array' && args.length === 3) {\r\n                return 'lab';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$e = utils.unpack;\r\n    var RAD2DEG = utils.RAD2DEG;\r\n    var sqrt$3 = Math.sqrt;\r\n    var atan2$2 = Math.atan2;\r\n    var round$2 = Math.round;\r\n\r\n    var lab2lch$2 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$e(args, 'lab');\r\n        var l = ref[0];\r\n        var a = ref[1];\r\n        var b = ref[2];\r\n        var c = sqrt$3(a * a + b * b);\r\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\r\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\r\n        return [l, c, h];\r\n    };\r\n\r\n    var lab2lch_1 = lab2lch$2;\r\n\r\n    var unpack$d = utils.unpack;\r\n    var rgb2lab = rgb2lab_1;\r\n    var lab2lch$1 = lab2lch_1;\r\n\r\n    var rgb2lch$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$d(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = rgb2lab(r,g,b);\r\n        var l = ref$1[0];\r\n        var a = ref$1[1];\r\n        var b_ = ref$1[2];\r\n        return lab2lch$1(l,a,b_);\r\n    };\r\n\r\n    var rgb2lch_1 = rgb2lch$1;\r\n\r\n    var unpack$c = utils.unpack;\r\n    var DEG2RAD = utils.DEG2RAD;\r\n    var sin$3 = Math.sin;\r\n    var cos$3 = Math.cos;\r\n\r\n    var lch2lab$2 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        /*\r\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\r\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\r\n        out of gamut if the parameters are in the range 0-1.\r\n\r\n        A saturation multiplier was added by Gregor Aisch\r\n        */\r\n        var ref = unpack$c(args, 'lch');\r\n        var l = ref[0];\r\n        var c = ref[1];\r\n        var h = ref[2];\r\n        if (isNaN(h)) { h = 0; }\r\n        h = h * DEG2RAD;\r\n        return [l, cos$3(h) * c, sin$3(h) * c]\r\n    };\r\n\r\n    var lch2lab_1 = lch2lab$2;\r\n\r\n    var unpack$b = utils.unpack;\r\n    var lch2lab$1 = lch2lab_1;\r\n    var lab2rgb = lab2rgb_1;\r\n\r\n    var lch2rgb$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack$b(args, 'lch');\r\n        var l = args[0];\r\n        var c = args[1];\r\n        var h = args[2];\r\n        var ref = lch2lab$1 (l,c,h);\r\n        var L = ref[0];\r\n        var a = ref[1];\r\n        var b_ = ref[2];\r\n        var ref$1 = lab2rgb (L,a,b_);\r\n        var r = ref$1[0];\r\n        var g = ref$1[1];\r\n        var b = ref$1[2];\r\n        return [r, g, b, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var lch2rgb_1 = lch2rgb$1;\r\n\r\n    var unpack$a = utils.unpack;\r\n    var lch2rgb = lch2rgb_1;\r\n\r\n    var hcl2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var hcl = unpack$a(args, 'hcl').reverse();\r\n        return lch2rgb.apply(void 0, hcl);\r\n    };\r\n\r\n    var hcl2rgb_1 = hcl2rgb;\r\n\r\n    var unpack$9 = utils.unpack;\r\n    var type$d = utils.type;\r\n    var chroma$a = chroma_1;\r\n    var Color$t = Color_1;\r\n    var input$6 = input$h;\r\n\r\n    var rgb2lch = rgb2lch_1;\r\n\r\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\r\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\r\n\r\n    chroma$a.lch = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\r\n    };\r\n    chroma$a.hcl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\r\n    };\r\n\r\n    input$6.format.lch = lch2rgb_1;\r\n    input$6.format.hcl = hcl2rgb_1;\r\n\r\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$9(args, m);\r\n            if (type$d(args) === 'array' && args.length === 3) {\r\n                return m;\r\n            }\r\n        }\r\n    }); });\r\n\r\n    /**\r\n    \tX11 color names\r\n\r\n    \thttp://www.w3.org/TR/css3-color/#svg-color\r\n    */\r\n\r\n    var w3cx11$1 = {\r\n        aliceblue: '#f0f8ff',\r\n        antiquewhite: '#faebd7',\r\n        aqua: '#00ffff',\r\n        aquamarine: '#7fffd4',\r\n        azure: '#f0ffff',\r\n        beige: '#f5f5dc',\r\n        bisque: '#ffe4c4',\r\n        black: '#000000',\r\n        blanchedalmond: '#ffebcd',\r\n        blue: '#0000ff',\r\n        blueviolet: '#8a2be2',\r\n        brown: '#a52a2a',\r\n        burlywood: '#deb887',\r\n        cadetblue: '#5f9ea0',\r\n        chartreuse: '#7fff00',\r\n        chocolate: '#d2691e',\r\n        coral: '#ff7f50',\r\n        cornflower: '#6495ed',\r\n        cornflowerblue: '#6495ed',\r\n        cornsilk: '#fff8dc',\r\n        crimson: '#dc143c',\r\n        cyan: '#00ffff',\r\n        darkblue: '#00008b',\r\n        darkcyan: '#008b8b',\r\n        darkgoldenrod: '#b8860b',\r\n        darkgray: '#a9a9a9',\r\n        darkgreen: '#006400',\r\n        darkgrey: '#a9a9a9',\r\n        darkkhaki: '#bdb76b',\r\n        darkmagenta: '#8b008b',\r\n        darkolivegreen: '#556b2f',\r\n        darkorange: '#ff8c00',\r\n        darkorchid: '#9932cc',\r\n        darkred: '#8b0000',\r\n        darksalmon: '#e9967a',\r\n        darkseagreen: '#8fbc8f',\r\n        darkslateblue: '#483d8b',\r\n        darkslategray: '#2f4f4f',\r\n        darkslategrey: '#2f4f4f',\r\n        darkturquoise: '#00ced1',\r\n        darkviolet: '#9400d3',\r\n        deeppink: '#ff1493',\r\n        deepskyblue: '#00bfff',\r\n        dimgray: '#696969',\r\n        dimgrey: '#696969',\r\n        dodgerblue: '#1e90ff',\r\n        firebrick: '#b22222',\r\n        floralwhite: '#fffaf0',\r\n        forestgreen: '#228b22',\r\n        fuchsia: '#ff00ff',\r\n        gainsboro: '#dcdcdc',\r\n        ghostwhite: '#f8f8ff',\r\n        gold: '#ffd700',\r\n        goldenrod: '#daa520',\r\n        gray: '#808080',\r\n        green: '#008000',\r\n        greenyellow: '#adff2f',\r\n        grey: '#808080',\r\n        honeydew: '#f0fff0',\r\n        hotpink: '#ff69b4',\r\n        indianred: '#cd5c5c',\r\n        indigo: '#4b0082',\r\n        ivory: '#fffff0',\r\n        khaki: '#f0e68c',\r\n        laserlemon: '#ffff54',\r\n        lavender: '#e6e6fa',\r\n        lavenderblush: '#fff0f5',\r\n        lawngreen: '#7cfc00',\r\n        lemonchiffon: '#fffacd',\r\n        lightblue: '#add8e6',\r\n        lightcoral: '#f08080',\r\n        lightcyan: '#e0ffff',\r\n        lightgoldenrod: '#fafad2',\r\n        lightgoldenrodyellow: '#fafad2',\r\n        lightgray: '#d3d3d3',\r\n        lightgreen: '#90ee90',\r\n        lightgrey: '#d3d3d3',\r\n        lightpink: '#ffb6c1',\r\n        lightsalmon: '#ffa07a',\r\n        lightseagreen: '#20b2aa',\r\n        lightskyblue: '#87cefa',\r\n        lightslategray: '#778899',\r\n        lightslategrey: '#778899',\r\n        lightsteelblue: '#b0c4de',\r\n        lightyellow: '#ffffe0',\r\n        lime: '#00ff00',\r\n        limegreen: '#32cd32',\r\n        linen: '#faf0e6',\r\n        magenta: '#ff00ff',\r\n        maroon: '#800000',\r\n        maroon2: '#7f0000',\r\n        maroon3: '#b03060',\r\n        mediumaquamarine: '#66cdaa',\r\n        mediumblue: '#0000cd',\r\n        mediumorchid: '#ba55d3',\r\n        mediumpurple: '#9370db',\r\n        mediumseagreen: '#3cb371',\r\n        mediumslateblue: '#7b68ee',\r\n        mediumspringgreen: '#00fa9a',\r\n        mediumturquoise: '#48d1cc',\r\n        mediumvioletred: '#c71585',\r\n        midnightblue: '#191970',\r\n        mintcream: '#f5fffa',\r\n        mistyrose: '#ffe4e1',\r\n        moccasin: '#ffe4b5',\r\n        navajowhite: '#ffdead',\r\n        navy: '#000080',\r\n        oldlace: '#fdf5e6',\r\n        olive: '#808000',\r\n        olivedrab: '#6b8e23',\r\n        orange: '#ffa500',\r\n        orangered: '#ff4500',\r\n        orchid: '#da70d6',\r\n        palegoldenrod: '#eee8aa',\r\n        palegreen: '#98fb98',\r\n        paleturquoise: '#afeeee',\r\n        palevioletred: '#db7093',\r\n        papayawhip: '#ffefd5',\r\n        peachpuff: '#ffdab9',\r\n        peru: '#cd853f',\r\n        pink: '#ffc0cb',\r\n        plum: '#dda0dd',\r\n        powderblue: '#b0e0e6',\r\n        purple: '#800080',\r\n        purple2: '#7f007f',\r\n        purple3: '#a020f0',\r\n        rebeccapurple: '#663399',\r\n        red: '#ff0000',\r\n        rosybrown: '#bc8f8f',\r\n        royalblue: '#4169e1',\r\n        saddlebrown: '#8b4513',\r\n        salmon: '#fa8072',\r\n        sandybrown: '#f4a460',\r\n        seagreen: '#2e8b57',\r\n        seashell: '#fff5ee',\r\n        sienna: '#a0522d',\r\n        silver: '#c0c0c0',\r\n        skyblue: '#87ceeb',\r\n        slateblue: '#6a5acd',\r\n        slategray: '#708090',\r\n        slategrey: '#708090',\r\n        snow: '#fffafa',\r\n        springgreen: '#00ff7f',\r\n        steelblue: '#4682b4',\r\n        tan: '#d2b48c',\r\n        teal: '#008080',\r\n        thistle: '#d8bfd8',\r\n        tomato: '#ff6347',\r\n        turquoise: '#40e0d0',\r\n        violet: '#ee82ee',\r\n        wheat: '#f5deb3',\r\n        white: '#ffffff',\r\n        whitesmoke: '#f5f5f5',\r\n        yellow: '#ffff00',\r\n        yellowgreen: '#9acd32'\r\n    };\r\n\r\n    var w3cx11_1 = w3cx11$1;\r\n\r\n    var Color$s = Color_1;\r\n    var input$5 = input$h;\r\n    var type$c = utils.type;\r\n\r\n    var w3cx11 = w3cx11_1;\r\n    var hex2rgb = hex2rgb_1;\r\n    var rgb2hex = rgb2hex_1;\r\n\r\n    Color$s.prototype.name = function() {\r\n        var hex = rgb2hex(this._rgb, 'rgb');\r\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\r\n            var n = list[i];\r\n\r\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\r\n        }\r\n        return hex;\r\n    };\r\n\r\n    input$5.format.named = function (name) {\r\n        name = name.toLowerCase();\r\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\r\n        throw new Error('unknown color name: '+name);\r\n    };\r\n\r\n    input$5.autodetect.push({\r\n        p: 5,\r\n        test: function (h) {\r\n            var rest = [], len = arguments.length - 1;\r\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\r\n                return 'named';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$8 = utils.unpack;\r\n\r\n    var rgb2num$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$8(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        return (r << 16) + (g << 8) + b;\r\n    };\r\n\r\n    var rgb2num_1 = rgb2num$1;\r\n\r\n    var type$b = utils.type;\r\n\r\n    var num2rgb = function (num) {\r\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\r\n            var r = num >> 16;\r\n            var g = (num >> 8) & 0xFF;\r\n            var b = num & 0xFF;\r\n            return [r,g,b,1];\r\n        }\r\n        throw new Error(\"unknown num color: \"+num);\r\n    };\r\n\r\n    var num2rgb_1 = num2rgb;\r\n\r\n    var chroma$9 = chroma_1;\r\n    var Color$r = Color_1;\r\n    var input$4 = input$h;\r\n    var type$a = utils.type;\r\n\r\n    var rgb2num = rgb2num_1;\r\n\r\n    Color$r.prototype.num = function() {\r\n        return rgb2num(this._rgb);\r\n    };\r\n\r\n    chroma$9.num = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\r\n    };\r\n\r\n    input$4.format.num = num2rgb_1;\r\n\r\n    input$4.autodetect.push({\r\n        p: 5,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\r\n                return 'num';\r\n            }\r\n        }\r\n    });\r\n\r\n    var chroma$8 = chroma_1;\r\n    var Color$q = Color_1;\r\n    var input$3 = input$h;\r\n    var unpack$7 = utils.unpack;\r\n    var type$9 = utils.type;\r\n    var round$1 = Math.round;\r\n\r\n    Color$q.prototype.rgb = function(rnd) {\r\n        if ( rnd === void 0 ) rnd=true;\r\n\r\n        if (rnd === false) { return this._rgb.slice(0,3); }\r\n        return this._rgb.slice(0,3).map(round$1);\r\n    };\r\n\r\n    Color$q.prototype.rgba = function(rnd) {\r\n        if ( rnd === void 0 ) rnd=true;\r\n\r\n        return this._rgb.slice(0,4).map(function (v,i) {\r\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\r\n        });\r\n    };\r\n\r\n    chroma$8.rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\r\n    };\r\n\r\n    input$3.format.rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgba = unpack$7(args, 'rgba');\r\n        if (rgba[3] === undefined) { rgba[3] = 1; }\r\n        return rgba;\r\n    };\r\n\r\n    input$3.autodetect.push({\r\n        p: 3,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$7(args, 'rgba');\r\n            if (type$9(args) === 'array' && (args.length === 3 ||\r\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\r\n                return 'rgb';\r\n            }\r\n        }\r\n    });\r\n\r\n    /*\r\n     * Based on implementation by Neil Bartlett\r\n     * https://github.com/neilbartlett/color-temperature\r\n     */\r\n\r\n    var log$1 = Math.log;\r\n\r\n    var temperature2rgb$1 = function (kelvin) {\r\n        var temp = kelvin / 100;\r\n        var r,g,b;\r\n        if (temp < 66) {\r\n            r = 255;\r\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\r\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\r\n        } else {\r\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\r\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\r\n            b = 255;\r\n        }\r\n        return [r,g,b,1];\r\n    };\r\n\r\n    var temperature2rgb_1 = temperature2rgb$1;\r\n\r\n    /*\r\n     * Based on implementation by Neil Bartlett\r\n     * https://github.com/neilbartlett/color-temperature\r\n     **/\r\n\r\n    var temperature2rgb = temperature2rgb_1;\r\n    var unpack$6 = utils.unpack;\r\n    var round = Math.round;\r\n\r\n    var rgb2temperature$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgb = unpack$6(args, 'rgb');\r\n        var r = rgb[0], b = rgb[2];\r\n        var minTemp = 1000;\r\n        var maxTemp = 40000;\r\n        var eps = 0.4;\r\n        var temp;\r\n        while (maxTemp - minTemp > eps) {\r\n            temp = (maxTemp + minTemp) * 0.5;\r\n            var rgb$1 = temperature2rgb(temp);\r\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\r\n                maxTemp = temp;\r\n            } else {\r\n                minTemp = temp;\r\n            }\r\n        }\r\n        return round(temp);\r\n    };\r\n\r\n    var rgb2temperature_1 = rgb2temperature$1;\r\n\r\n    var chroma$7 = chroma_1;\r\n    var Color$p = Color_1;\r\n    var input$2 = input$h;\r\n\r\n    var rgb2temperature = rgb2temperature_1;\r\n\r\n    Color$p.prototype.temp =\r\n    Color$p.prototype.kelvin =\r\n    Color$p.prototype.temperature = function() {\r\n        return rgb2temperature(this._rgb);\r\n    };\r\n\r\n    chroma$7.temp =\r\n    chroma$7.kelvin =\r\n    chroma$7.temperature = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\r\n    };\r\n\r\n    input$2.format.temp =\r\n    input$2.format.kelvin =\r\n    input$2.format.temperature = temperature2rgb_1;\r\n\r\n    var unpack$5 = utils.unpack;\r\n    var cbrt = Math.cbrt;\r\n    var pow$8 = Math.pow;\r\n    var sign$1 = Math.sign;\r\n\r\n    var rgb2oklab$2 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        // OKLab color space implementation taken from\r\n        // https://bottosson.github.io/posts/oklab/\r\n        var ref = unpack$5(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\r\n        var lr = ref$1[0];\r\n        var lg = ref$1[1];\r\n        var lb = ref$1[2];\r\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\r\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\r\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\r\n\r\n        return [\r\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\r\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\r\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\r\n        ];\r\n    };\r\n\r\n    var rgb2oklab_1 = rgb2oklab$2;\r\n\r\n    function rgb2lrgb(c) {\r\n        var abs = Math.abs(c);\r\n        if (abs < 0.04045) {\r\n            return c / 12.92;\r\n        }\r\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\r\n    }\r\n\r\n    var unpack$4 = utils.unpack;\r\n    var pow$7 = Math.pow;\r\n    var sign = Math.sign;\r\n\r\n    /*\r\n     * L* [0..100]\r\n     * a [-100..100]\r\n     * b [-100..100]\r\n     */\r\n    var oklab2rgb$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack$4(args, 'lab');\r\n        var L = args[0];\r\n        var a = args[1];\r\n        var b = args[2];\r\n\r\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\r\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\r\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\r\n\r\n        return [\r\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\r\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\r\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\r\n            args.length > 3 ? args[3] : 1\r\n        ];\r\n    };\r\n\r\n    var oklab2rgb_1 = oklab2rgb$1;\r\n\r\n    function lrgb2rgb(c) {\r\n        var abs = Math.abs(c);\r\n        if (abs > 0.0031308) {\r\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\r\n        }\r\n        return c * 12.92;\r\n    }\r\n\r\n    var unpack$3 = utils.unpack;\r\n    var type$8 = utils.type;\r\n    var chroma$6 = chroma_1;\r\n    var Color$o = Color_1;\r\n    var input$1 = input$h;\r\n\r\n    var rgb2oklab$1 = rgb2oklab_1;\r\n\r\n    Color$o.prototype.oklab = function () {\r\n        return rgb2oklab$1(this._rgb);\r\n    };\r\n\r\n    chroma$6.oklab = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\r\n    };\r\n\r\n    input$1.format.oklab = oklab2rgb_1;\r\n\r\n    input$1.autodetect.push({\r\n        p: 3,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack$3(args, 'oklab');\r\n            if (type$8(args) === 'array' && args.length === 3) {\r\n                return 'oklab';\r\n            }\r\n        }\r\n    });\r\n\r\n    var unpack$2 = utils.unpack;\r\n    var rgb2oklab = rgb2oklab_1;\r\n    var lab2lch = lab2lch_1;\r\n\r\n    var rgb2oklch$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack$2(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = rgb2oklab(r, g, b);\r\n        var l = ref$1[0];\r\n        var a = ref$1[1];\r\n        var b_ = ref$1[2];\r\n        return lab2lch(l, a, b_);\r\n    };\r\n\r\n    var rgb2oklch_1 = rgb2oklch$1;\r\n\r\n    var unpack$1 = utils.unpack;\r\n    var lch2lab = lch2lab_1;\r\n    var oklab2rgb = oklab2rgb_1;\r\n\r\n    var oklch2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack$1(args, 'lch');\r\n        var l = args[0];\r\n        var c = args[1];\r\n        var h = args[2];\r\n        var ref = lch2lab(l, c, h);\r\n        var L = ref[0];\r\n        var a = ref[1];\r\n        var b_ = ref[2];\r\n        var ref$1 = oklab2rgb(L, a, b_);\r\n        var r = ref$1[0];\r\n        var g = ref$1[1];\r\n        var b = ref$1[2];\r\n        return [r, g, b, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var oklch2rgb_1 = oklch2rgb;\r\n\r\n    var unpack = utils.unpack;\r\n    var type$7 = utils.type;\r\n    var chroma$5 = chroma_1;\r\n    var Color$n = Color_1;\r\n    var input = input$h;\r\n\r\n    var rgb2oklch = rgb2oklch_1;\r\n\r\n    Color$n.prototype.oklch = function () {\r\n        return rgb2oklch(this._rgb);\r\n    };\r\n\r\n    chroma$5.oklch = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\r\n    };\r\n\r\n    input.format.oklch = oklch2rgb_1;\r\n\r\n    input.autodetect.push({\r\n        p: 3,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'oklch');\r\n            if (type$7(args) === 'array' && args.length === 3) {\r\n                return 'oklch';\r\n            }\r\n        }\r\n    });\r\n\r\n    var Color$m = Color_1;\r\n    var type$6 = utils.type;\r\n\r\n    Color$m.prototype.alpha = function(a, mutate) {\r\n        if ( mutate === void 0 ) mutate=false;\r\n\r\n        if (a !== undefined && type$6(a) === 'number') {\r\n            if (mutate) {\r\n                this._rgb[3] = a;\r\n                return this;\r\n            }\r\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\r\n        }\r\n        return this._rgb[3];\r\n    };\r\n\r\n    var Color$l = Color_1;\r\n\r\n    Color$l.prototype.clipped = function() {\r\n        return this._rgb._clipped || false;\r\n    };\r\n\r\n    var Color$k = Color_1;\r\n    var LAB_CONSTANTS$1 = labConstants;\r\n\r\n    Color$k.prototype.darken = function(amount) {\r\n    \tif ( amount === void 0 ) amount=1;\r\n\r\n    \tvar me = this;\r\n    \tvar lab = me.lab();\r\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\r\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\r\n    };\r\n\r\n    Color$k.prototype.brighten = function(amount) {\r\n    \tif ( amount === void 0 ) amount=1;\r\n\r\n    \treturn this.darken(-amount);\r\n    };\r\n\r\n    Color$k.prototype.darker = Color$k.prototype.darken;\r\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\r\n\r\n    var Color$j = Color_1;\r\n\r\n    Color$j.prototype.get = function (mc) {\r\n        var ref = mc.split('.');\r\n        var mode = ref[0];\r\n        var channel = ref[1];\r\n        var src = this[mode]();\r\n        if (channel) {\r\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\r\n            if (i > -1) { return src[i]; }\r\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\r\n        } else {\r\n            return src;\r\n        }\r\n    };\r\n\r\n    var Color$i = Color_1;\r\n    var type$5 = utils.type;\r\n    var pow$6 = Math.pow;\r\n\r\n    var EPS = 1e-7;\r\n    var MAX_ITER = 20;\r\n\r\n    Color$i.prototype.luminance = function(lum) {\r\n        if (lum !== undefined && type$5(lum) === 'number') {\r\n            if (lum === 0) {\r\n                // return pure black\r\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\r\n            }\r\n            if (lum === 1) {\r\n                // return pure white\r\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\r\n            }\r\n            // compute new color using...\r\n            var cur_lum = this.luminance();\r\n            var mode = 'rgb';\r\n            var max_iter = MAX_ITER;\r\n\r\n            var test = function (low, high) {\r\n                var mid = low.interpolate(high, 0.5, mode);\r\n                var lm = mid.luminance();\r\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\r\n                    // close enough\r\n                    return mid;\r\n                }\r\n                return lm > lum ? test(low, mid) : test(mid, high);\r\n            };\r\n\r\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\r\n            return new Color$i(rgb.concat( [this._rgb[3]]));\r\n        }\r\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\r\n    };\r\n\r\n\r\n    var rgb2luminance = function (r,g,b) {\r\n        // relative luminance\r\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n        r = luminance_x(r);\r\n        g = luminance_x(g);\r\n        b = luminance_x(b);\r\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    };\r\n\r\n    var luminance_x = function (x) {\r\n        x /= 255;\r\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\r\n    };\r\n\r\n    var interpolator$1 = {};\r\n\r\n    var Color$h = Color_1;\r\n    var type$4 = utils.type;\r\n    var interpolator = interpolator$1;\r\n\r\n    var mix$1 = function (col1, col2, f) {\r\n        if ( f === void 0 ) f=0.5;\r\n        var rest = [], len = arguments.length - 3;\r\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\r\n\r\n        var mode = rest[0] || 'lrgb';\r\n        if (!interpolator[mode] && !rest.length) {\r\n            // fall back to the first supported mode\r\n            mode = Object.keys(interpolator)[0];\r\n        }\r\n        if (!interpolator[mode]) {\r\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\r\n        }\r\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\r\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\r\n        return interpolator[mode](col1, col2, f)\r\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\r\n    };\r\n\r\n    var Color$g = Color_1;\r\n    var mix = mix$1;\r\n\r\n    Color$g.prototype.mix =\r\n    Color$g.prototype.interpolate = function(col2, f) {\r\n    \tif ( f === void 0 ) f=0.5;\r\n    \tvar rest = [], len = arguments.length - 2;\r\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\r\n\r\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\r\n    };\r\n\r\n    var Color$f = Color_1;\r\n\r\n    Color$f.prototype.premultiply = function(mutate) {\r\n    \tif ( mutate === void 0 ) mutate=false;\r\n\r\n    \tvar rgb = this._rgb;\r\n    \tvar a = rgb[3];\r\n    \tif (mutate) {\r\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\r\n    \t\treturn this;\r\n    \t} else {\r\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\r\n    \t}\r\n    };\r\n\r\n    var Color$e = Color_1;\r\n    var LAB_CONSTANTS = labConstants;\r\n\r\n    Color$e.prototype.saturate = function(amount) {\r\n    \tif ( amount === void 0 ) amount=1;\r\n\r\n    \tvar me = this;\r\n    \tvar lch = me.lch();\r\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\r\n    \tif (lch[1] < 0) { lch[1] = 0; }\r\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\r\n    };\r\n\r\n    Color$e.prototype.desaturate = function(amount) {\r\n    \tif ( amount === void 0 ) amount=1;\r\n\r\n    \treturn this.saturate(-amount);\r\n    };\r\n\r\n    var Color$d = Color_1;\r\n    var type$3 = utils.type;\r\n\r\n    Color$d.prototype.set = function (mc, value, mutate) {\r\n        if ( mutate === void 0 ) mutate = false;\r\n\r\n        var ref = mc.split('.');\r\n        var mode = ref[0];\r\n        var channel = ref[1];\r\n        var src = this[mode]();\r\n        if (channel) {\r\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\r\n            if (i > -1) {\r\n                if (type$3(value) == 'string') {\r\n                    switch (value.charAt(0)) {\r\n                        case '+':\r\n                            src[i] += +value;\r\n                            break;\r\n                        case '-':\r\n                            src[i] += +value;\r\n                            break;\r\n                        case '*':\r\n                            src[i] *= +value.substr(1);\r\n                            break;\r\n                        case '/':\r\n                            src[i] /= +value.substr(1);\r\n                            break;\r\n                        default:\r\n                            src[i] = +value;\r\n                    }\r\n                } else if (type$3(value) === 'number') {\r\n                    src[i] = value;\r\n                } else {\r\n                    throw new Error(\"unsupported value for Color.set\");\r\n                }\r\n                var out = new Color$d(src, mode);\r\n                if (mutate) {\r\n                    this._rgb = out._rgb;\r\n                    return this;\r\n                }\r\n                return out;\r\n            }\r\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\r\n        } else {\r\n            return src;\r\n        }\r\n    };\r\n\r\n    var Color$c = Color_1;\r\n\r\n    var rgb = function (col1, col2, f) {\r\n        var xyz0 = col1._rgb;\r\n        var xyz1 = col2._rgb;\r\n        return new Color$c(\r\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\r\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\r\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\r\n            'rgb'\r\n        )\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.rgb = rgb;\r\n\r\n    var Color$b = Color_1;\r\n    var sqrt$2 = Math.sqrt;\r\n    var pow$5 = Math.pow;\r\n\r\n    var lrgb = function (col1, col2, f) {\r\n        var ref = col1._rgb;\r\n        var x1 = ref[0];\r\n        var y1 = ref[1];\r\n        var z1 = ref[2];\r\n        var ref$1 = col2._rgb;\r\n        var x2 = ref$1[0];\r\n        var y2 = ref$1[1];\r\n        var z2 = ref$1[2];\r\n        return new Color$b(\r\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\r\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\r\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\r\n            'rgb'\r\n        )\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.lrgb = lrgb;\r\n\r\n    var Color$a = Color_1;\r\n\r\n    var lab = function (col1, col2, f) {\r\n        var xyz0 = col1.lab();\r\n        var xyz1 = col2.lab();\r\n        return new Color$a(\r\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\r\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\r\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\r\n            'lab'\r\n        )\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.lab = lab;\r\n\r\n    var Color$9 = Color_1;\r\n\r\n    var _hsx = function (col1, col2, f, m) {\r\n        var assign, assign$1;\r\n\r\n        var xyz0, xyz1;\r\n        if (m === 'hsl') {\r\n            xyz0 = col1.hsl();\r\n            xyz1 = col2.hsl();\r\n        } else if (m === 'hsv') {\r\n            xyz0 = col1.hsv();\r\n            xyz1 = col2.hsv();\r\n        } else if (m === 'hcg') {\r\n            xyz0 = col1.hcg();\r\n            xyz1 = col2.hcg();\r\n        } else if (m === 'hsi') {\r\n            xyz0 = col1.hsi();\r\n            xyz1 = col2.hsi();\r\n        } else if (m === 'lch' || m === 'hcl') {\r\n            m = 'hcl';\r\n            xyz0 = col1.hcl();\r\n            xyz1 = col2.hcl();\r\n        } else if (m === 'oklch') {\r\n            xyz0 = col1.oklch().reverse();\r\n            xyz1 = col2.oklch().reverse();\r\n        }\r\n\r\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\r\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\r\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\r\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\r\n        }\r\n\r\n        var sat, hue, lbv, dh;\r\n\r\n        if (!isNaN(hue0) && !isNaN(hue1)) {\r\n            // both colors have hue\r\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\r\n                dh = hue1 - (hue0 + 360);\r\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\r\n                dh = hue1 + 360 - hue0;\r\n            } else {\r\n                dh = hue1 - hue0;\r\n            }\r\n            hue = hue0 + f * dh;\r\n        } else if (!isNaN(hue0)) {\r\n            hue = hue0;\r\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\r\n        } else if (!isNaN(hue1)) {\r\n            hue = hue1;\r\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\r\n        } else {\r\n            hue = Number.NaN;\r\n        }\r\n\r\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\r\n        lbv = lbv0 + f * (lbv1 - lbv0);\r\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\r\n    };\r\n\r\n    var interpolate_hsx$5 = _hsx;\r\n\r\n    var lch = function (col1, col2, f) {\r\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.lch = lch;\r\n    interpolator$1.hcl = lch;\r\n\r\n    var Color$8 = Color_1;\r\n\r\n    var num = function (col1, col2, f) {\r\n        var c1 = col1.num();\r\n        var c2 = col2.num();\r\n        return new Color$8(c1 + f * (c2-c1), 'num')\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.num = num;\r\n\r\n    var interpolate_hsx$4 = _hsx;\r\n\r\n    var hcg = function (col1, col2, f) {\r\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.hcg = hcg;\r\n\r\n    var interpolate_hsx$3 = _hsx;\r\n\r\n    var hsi = function (col1, col2, f) {\r\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.hsi = hsi;\r\n\r\n    var interpolate_hsx$2 = _hsx;\r\n\r\n    var hsl = function (col1, col2, f) {\r\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.hsl = hsl;\r\n\r\n    var interpolate_hsx$1 = _hsx;\r\n\r\n    var hsv = function (col1, col2, f) {\r\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.hsv = hsv;\r\n\r\n    var Color$7 = Color_1;\r\n\r\n    var oklab = function (col1, col2, f) {\r\n        var xyz0 = col1.oklab();\r\n        var xyz1 = col2.oklab();\r\n        return new Color$7(\r\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\r\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\r\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\r\n            'oklab'\r\n        );\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.oklab = oklab;\r\n\r\n    var interpolate_hsx = _hsx;\r\n\r\n    var oklch = function (col1, col2, f) {\r\n        return interpolate_hsx(col1, col2, f, 'oklch');\r\n    };\r\n\r\n    // register interpolator\r\n    interpolator$1.oklch = oklch;\r\n\r\n    var Color$6 = Color_1;\r\n    var clip_rgb$1 = utils.clip_rgb;\r\n    var pow$4 = Math.pow;\r\n    var sqrt$1 = Math.sqrt;\r\n    var PI$1 = Math.PI;\r\n    var cos$2 = Math.cos;\r\n    var sin$2 = Math.sin;\r\n    var atan2$1 = Math.atan2;\r\n\r\n    var average = function (colors, mode, weights) {\r\n        if ( mode === void 0 ) mode='lrgb';\r\n        if ( weights === void 0 ) weights=null;\r\n\r\n        var l = colors.length;\r\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\r\n        // normalize weights\r\n        var k = l / weights.reduce(function(a, b) { return a + b; });\r\n        weights.forEach(function (w,i) { weights[i] *= k; });\r\n        // convert colors to Color objects\r\n        colors = colors.map(function (c) { return new Color$6(c); });\r\n        if (mode === 'lrgb') {\r\n            return _average_lrgb(colors, weights)\r\n        }\r\n        var first = colors.shift();\r\n        var xyz = first.get(mode);\r\n        var cnt = [];\r\n        var dx = 0;\r\n        var dy = 0;\r\n        // initial color\r\n        for (var i=0; i<xyz.length; i++) {\r\n            xyz[i] = (xyz[i] || 0) * weights[0];\r\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\r\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\r\n                var A = xyz[i] / 180 * PI$1;\r\n                dx += cos$2(A) * weights[0];\r\n                dy += sin$2(A) * weights[0];\r\n            }\r\n        }\r\n\r\n        var alpha = first.alpha() * weights[0];\r\n        colors.forEach(function (c,ci) {\r\n            var xyz2 = c.get(mode);\r\n            alpha += c.alpha() * weights[ci+1];\r\n            for (var i=0; i<xyz.length; i++) {\r\n                if (!isNaN(xyz2[i])) {\r\n                    cnt[i] += weights[ci+1];\r\n                    if (mode.charAt(i) === 'h') {\r\n                        var A = xyz2[i] / 180 * PI$1;\r\n                        dx += cos$2(A) * weights[ci+1];\r\n                        dy += sin$2(A) * weights[ci+1];\r\n                    } else {\r\n                        xyz[i] += xyz2[i] * weights[ci+1];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        for (var i$1=0; i$1<xyz.length; i$1++) {\r\n            if (mode.charAt(i$1) === 'h') {\r\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\r\n                while (A$1 < 0) { A$1 += 360; }\r\n                while (A$1 >= 360) { A$1 -= 360; }\r\n                xyz[i$1] = A$1;\r\n            } else {\r\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\r\n            }\r\n        }\r\n        alpha /= l;\r\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\r\n    };\r\n\r\n\r\n    var _average_lrgb = function (colors, weights) {\r\n        var l = colors.length;\r\n        var xyz = [0,0,0,0];\r\n        for (var i=0; i < colors.length; i++) {\r\n            var col = colors[i];\r\n            var f = weights[i] / l;\r\n            var rgb = col._rgb;\r\n            xyz[0] += pow$4(rgb[0],2) * f;\r\n            xyz[1] += pow$4(rgb[1],2) * f;\r\n            xyz[2] += pow$4(rgb[2],2) * f;\r\n            xyz[3] += rgb[3] * f;\r\n        }\r\n        xyz[0] = sqrt$1(xyz[0]);\r\n        xyz[1] = sqrt$1(xyz[1]);\r\n        xyz[2] = sqrt$1(xyz[2]);\r\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\r\n        return new Color$6(clip_rgb$1(xyz));\r\n    };\r\n\r\n    // minimal multi-purpose interface\r\n\r\n    // @requires utils color analyze\r\n\r\n    var chroma$4 = chroma_1;\r\n    var type$2 = utils.type;\r\n\r\n    var pow$3 = Math.pow;\r\n\r\n    var scale$2 = function(colors) {\r\n\r\n        // constructor\r\n        var _mode = 'rgb';\r\n        var _nacol = chroma$4('#ccc');\r\n        var _spread = 0;\r\n        // const _fixed = false;\r\n        var _domain = [0, 1];\r\n        var _pos = [];\r\n        var _padding = [0,0];\r\n        var _classes = false;\r\n        var _colors = [];\r\n        var _out = false;\r\n        var _min = 0;\r\n        var _max = 1;\r\n        var _correctLightness = false;\r\n        var _colorCache = {};\r\n        var _useCache = true;\r\n        var _gamma = 1;\r\n\r\n        // private methods\r\n\r\n        var setColors = function(colors) {\r\n            colors = colors || ['#fff', '#000'];\r\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\r\n                chroma$4.brewer[colors.toLowerCase()]) {\r\n                colors = chroma$4.brewer[colors.toLowerCase()];\r\n            }\r\n            if (type$2(colors) === 'array') {\r\n                // handle single color\r\n                if (colors.length === 1) {\r\n                    colors = [colors[0], colors[0]];\r\n                }\r\n                // make a copy of the colors\r\n                colors = colors.slice(0);\r\n                // convert to chroma classes\r\n                for (var c=0; c<colors.length; c++) {\r\n                    colors[c] = chroma$4(colors[c]);\r\n                }\r\n                // auto-fill color position\r\n                _pos.length = 0;\r\n                for (var c$1=0; c$1<colors.length; c$1++) {\r\n                    _pos.push(c$1/(colors.length-1));\r\n                }\r\n            }\r\n            resetCache();\r\n            return _colors = colors;\r\n        };\r\n\r\n        var getClass = function(value) {\r\n            if (_classes != null) {\r\n                var n = _classes.length-1;\r\n                var i = 0;\r\n                while (i < n && value >= _classes[i]) {\r\n                    i++;\r\n                }\r\n                return i-1;\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        var tMapLightness = function (t) { return t; };\r\n        var tMapDomain = function (t) { return t; };\r\n\r\n        // const classifyValue = function(value) {\r\n        //     let val = value;\r\n        //     if (_classes.length > 2) {\r\n        //         const n = _classes.length-1;\r\n        //         const i = getClass(value);\r\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\r\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\r\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\r\n        //     }\r\n        //     return val;\r\n        // };\r\n\r\n        var getColor = function(val, bypassMap) {\r\n            var col, t;\r\n            if (bypassMap == null) { bypassMap = false; }\r\n            if (isNaN(val) || (val === null)) { return _nacol; }\r\n            if (!bypassMap) {\r\n                if (_classes && (_classes.length > 2)) {\r\n                    // find the class\r\n                    var c = getClass(val);\r\n                    t = c / (_classes.length-2);\r\n                } else if (_max !== _min) {\r\n                    // just interpolate between min/max\r\n                    t = (val - _min) / (_max - _min);\r\n                } else {\r\n                    t = 1;\r\n                }\r\n            } else {\r\n                t = val;\r\n            }\r\n\r\n            // domain map\r\n            t = tMapDomain(t);\r\n\r\n            if (!bypassMap) {\r\n                t = tMapLightness(t);  // lightness correction\r\n            }\r\n\r\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\r\n\r\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\r\n\r\n            t = Math.min(1, Math.max(0, t));\r\n\r\n            var k = Math.floor(t * 10000);\r\n\r\n            if (_useCache && _colorCache[k]) {\r\n                col = _colorCache[k];\r\n            } else {\r\n                if (type$2(_colors) === 'array') {\r\n                    //for i in [0.._pos.length-1]\r\n                    for (var i=0; i<_pos.length; i++) {\r\n                        var p = _pos[i];\r\n                        if (t <= p) {\r\n                            col = _colors[i];\r\n                            break;\r\n                        }\r\n                        if ((t >= p) && (i === (_pos.length-1))) {\r\n                            col = _colors[i];\r\n                            break;\r\n                        }\r\n                        if (t > p && t < _pos[i+1]) {\r\n                            t = (t-p)/(_pos[i+1]-p);\r\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\r\n                            break;\r\n                        }\r\n                    }\r\n                } else if (type$2(_colors) === 'function') {\r\n                    col = _colors(t);\r\n                }\r\n                if (_useCache) { _colorCache[k] = col; }\r\n            }\r\n            return col;\r\n        };\r\n\r\n        var resetCache = function () { return _colorCache = {}; };\r\n\r\n        setColors(colors);\r\n\r\n        // public interface\r\n\r\n        var f = function(v) {\r\n            var c = chroma$4(getColor(v));\r\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\r\n        };\r\n\r\n        f.classes = function(classes) {\r\n            if (classes != null) {\r\n                if (type$2(classes) === 'array') {\r\n                    _classes = classes;\r\n                    _domain = [classes[0], classes[classes.length-1]];\r\n                } else {\r\n                    var d = chroma$4.analyze(_domain);\r\n                    if (classes === 0) {\r\n                        _classes = [d.min, d.max];\r\n                    } else {\r\n                        _classes = chroma$4.limits(d, 'e', classes);\r\n                    }\r\n                }\r\n                return f;\r\n            }\r\n            return _classes;\r\n        };\r\n\r\n\r\n        f.domain = function(domain) {\r\n            if (!arguments.length) {\r\n                return _domain;\r\n            }\r\n            _min = domain[0];\r\n            _max = domain[domain.length-1];\r\n            _pos = [];\r\n            var k = _colors.length;\r\n            if ((domain.length === k) && (_min !== _max)) {\r\n                // update positions\r\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\r\n                    var d = list[i];\r\n\r\n                  _pos.push((d-_min) / (_max-_min));\r\n                }\r\n            } else {\r\n                for (var c=0; c<k; c++) {\r\n                    _pos.push(c/(k-1));\r\n                }\r\n                if (domain.length > 2) {\r\n                    // set domain map\r\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\r\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\r\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\r\n                        tMapDomain = function (t) {\r\n                            if (t <= 0 || t >= 1) { return t; }\r\n                            var i = 0;\r\n                            while (t >= tBreaks[i+1]) { i++; }\r\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\r\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\r\n                            return out;\r\n                        };\r\n                    }\r\n\r\n                }\r\n            }\r\n            _domain = [_min, _max];\r\n            return f;\r\n        };\r\n\r\n        f.mode = function(_m) {\r\n            if (!arguments.length) {\r\n                return _mode;\r\n            }\r\n            _mode = _m;\r\n            resetCache();\r\n            return f;\r\n        };\r\n\r\n        f.range = function(colors, _pos) {\r\n            setColors(colors);\r\n            return f;\r\n        };\r\n\r\n        f.out = function(_o) {\r\n            _out = _o;\r\n            return f;\r\n        };\r\n\r\n        f.spread = function(val) {\r\n            if (!arguments.length) {\r\n                return _spread;\r\n            }\r\n            _spread = val;\r\n            return f;\r\n        };\r\n\r\n        f.correctLightness = function(v) {\r\n            if (v == null) { v = true; }\r\n            _correctLightness = v;\r\n            resetCache();\r\n            if (_correctLightness) {\r\n                tMapLightness = function(t) {\r\n                    var L0 = getColor(0, true).lab()[0];\r\n                    var L1 = getColor(1, true).lab()[0];\r\n                    var pol = L0 > L1;\r\n                    var L_actual = getColor(t, true).lab()[0];\r\n                    var L_ideal = L0 + ((L1 - L0) * t);\r\n                    var L_diff = L_actual - L_ideal;\r\n                    var t0 = 0;\r\n                    var t1 = 1;\r\n                    var max_iter = 20;\r\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\r\n                        (function() {\r\n                            if (pol) { L_diff *= -1; }\r\n                            if (L_diff < 0) {\r\n                                t0 = t;\r\n                                t += (t1 - t) * 0.5;\r\n                            } else {\r\n                                t1 = t;\r\n                                t += (t0 - t) * 0.5;\r\n                            }\r\n                            L_actual = getColor(t, true).lab()[0];\r\n                            return L_diff = L_actual - L_ideal;\r\n                        })();\r\n                    }\r\n                    return t;\r\n                };\r\n            } else {\r\n                tMapLightness = function (t) { return t; };\r\n            }\r\n            return f;\r\n        };\r\n\r\n        f.padding = function(p) {\r\n            if (p != null) {\r\n                if (type$2(p) === 'number') {\r\n                    p = [p,p];\r\n                }\r\n                _padding = p;\r\n                return f;\r\n            } else {\r\n                return _padding;\r\n            }\r\n        };\r\n\r\n        f.colors = function(numColors, out) {\r\n            // If no arguments are given, return the original colors that were provided\r\n            if (arguments.length < 2) { out = 'hex'; }\r\n            var result = [];\r\n\r\n            if (arguments.length === 0) {\r\n                result = _colors.slice(0);\r\n\r\n            } else if (numColors === 1) {\r\n                result = [f(0.5)];\r\n\r\n            } else if (numColors > 1) {\r\n                var dm = _domain[0];\r\n                var dd = _domain[1] - dm;\r\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\r\n\r\n            } else { // returns all colors based on the defined classes\r\n                colors = [];\r\n                var samples = [];\r\n                if (_classes && (_classes.length > 2)) {\r\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\r\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\r\n                    }\r\n                } else {\r\n                    samples = _domain;\r\n                }\r\n                result = samples.map(function (v) { return f(v); });\r\n            }\r\n\r\n            if (chroma$4[out]) {\r\n                result = result.map(function (c) { return c[out](); });\r\n            }\r\n            return result;\r\n        };\r\n\r\n        f.cache = function(c) {\r\n            if (c != null) {\r\n                _useCache = c;\r\n                return f;\r\n            } else {\r\n                return _useCache;\r\n            }\r\n        };\r\n\r\n        f.gamma = function(g) {\r\n            if (g != null) {\r\n                _gamma = g;\r\n                return f;\r\n            } else {\r\n                return _gamma;\r\n            }\r\n        };\r\n\r\n        f.nodata = function(d) {\r\n            if (d != null) {\r\n                _nacol = chroma$4(d);\r\n                return f;\r\n            } else {\r\n                return _nacol;\r\n            }\r\n        };\r\n\r\n        return f;\r\n    };\r\n\r\n    function __range__(left, right, inclusive) {\r\n      var range = [];\r\n      var ascending = left < right;\r\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\r\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\r\n        range.push(i);\r\n      }\r\n      return range;\r\n    }\r\n\r\n    //\r\n    // interpolates between a set of colors uzing a bezier spline\r\n    //\r\n\r\n    // @requires utils lab\r\n    var Color$5 = Color_1;\r\n\r\n    var scale$1 = scale$2;\r\n\r\n    // nth row of the pascal triangle\r\n    var binom_row = function(n) {\r\n        var row = [1, 1];\r\n        for (var i = 1; i < n; i++) {\r\n            var newrow = [1];\r\n            for (var j = 1; j <= row.length; j++) {\r\n                newrow[j] = (row[j] || 0) + row[j - 1];\r\n            }\r\n            row = newrow;\r\n        }\r\n        return row;\r\n    };\r\n\r\n    var bezier = function(colors) {\r\n        var assign, assign$1, assign$2;\r\n\r\n        var I, lab0, lab1, lab2;\r\n        colors = colors.map(function (c) { return new Color$5(c); });\r\n        if (colors.length === 2) {\r\n            // linear interpolation\r\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\r\n            I = function(t) {\r\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\r\n                return new Color$5(lab, 'lab');\r\n            };\r\n        } else if (colors.length === 3) {\r\n            // quadratic bezier interpolation\r\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\r\n            I = function(t) {\r\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\r\n                return new Color$5(lab, 'lab');\r\n            };\r\n        } else if (colors.length === 4) {\r\n            // cubic bezier interpolation\r\n            var lab3;\r\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\r\n            I = function(t) {\r\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\r\n                return new Color$5(lab, 'lab');\r\n            };\r\n        } else if (colors.length >= 5) {\r\n            // general case (degree n bezier)\r\n            var labs, row, n;\r\n            labs = colors.map(function (c) { return c.lab(); });\r\n            n = colors.length - 1;\r\n            row = binom_row(n);\r\n            I = function (t) {\r\n                var u = 1 - t;\r\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\r\n                return new Color$5(lab, 'lab');\r\n            };\r\n        } else {\r\n            throw new RangeError(\"No point in running bezier with only one color.\")\r\n        }\r\n        return I;\r\n    };\r\n\r\n    var bezier_1 = function (colors) {\r\n        var f = bezier(colors);\r\n        f.scale = function () { return scale$1(f); };\r\n        return f;\r\n    };\r\n\r\n    /*\r\n     * interpolates between a set of colors uzing a bezier spline\r\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\r\n     */\r\n\r\n    var chroma$3 = chroma_1;\r\n\r\n    var blend = function (bottom, top, mode) {\r\n        if (!blend[mode]) {\r\n            throw new Error('unknown blend mode ' + mode);\r\n        }\r\n        return blend[mode](bottom, top);\r\n    };\r\n\r\n    var blend_f = function (f) { return function (bottom,top) {\r\n            var c0 = chroma$3(top).rgb();\r\n            var c1 = chroma$3(bottom).rgb();\r\n            return chroma$3.rgb(f(c0, c1));\r\n        }; };\r\n\r\n    var each = function (f) { return function (c0, c1) {\r\n            var out = [];\r\n            out[0] = f(c0[0], c1[0]);\r\n            out[1] = f(c0[1], c1[1]);\r\n            out[2] = f(c0[2], c1[2]);\r\n            return out;\r\n        }; };\r\n\r\n    var normal = function (a) { return a; };\r\n    var multiply = function (a,b) { return a * b / 255; };\r\n    var darken = function (a,b) { return a > b ? b : a; };\r\n    var lighten = function (a,b) { return a > b ? a : b; };\r\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\r\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\r\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\r\n    var dodge = function (a,b) {\r\n        if (a === 255) { return 255; }\r\n        a = 255 * (b / 255) / (1 - a / 255);\r\n        return a > 255 ? 255 : a\r\n    };\r\n\r\n    // # add = (a,b) ->\r\n    // #     if (a + b > 255) then 255 else a + b\r\n\r\n    blend.normal = blend_f(each(normal));\r\n    blend.multiply = blend_f(each(multiply));\r\n    blend.screen = blend_f(each(screen));\r\n    blend.overlay = blend_f(each(overlay));\r\n    blend.darken = blend_f(each(darken));\r\n    blend.lighten = blend_f(each(lighten));\r\n    blend.dodge = blend_f(each(dodge));\r\n    blend.burn = blend_f(each(burn));\r\n    // blend.add = blend_f(each(add));\r\n\r\n    var blend_1 = blend;\r\n\r\n    // cubehelix interpolation\r\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\r\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\r\n\r\n    var type$1 = utils.type;\r\n    var clip_rgb = utils.clip_rgb;\r\n    var TWOPI = utils.TWOPI;\r\n    var pow$2 = Math.pow;\r\n    var sin$1 = Math.sin;\r\n    var cos$1 = Math.cos;\r\n    var chroma$2 = chroma_1;\r\n\r\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\r\n        if ( start === void 0 ) start=300;\r\n        if ( rotations === void 0 ) rotations=-1.5;\r\n        if ( hue === void 0 ) hue=1;\r\n        if ( gamma === void 0 ) gamma=1;\r\n        if ( lightness === void 0 ) lightness=[0,1];\r\n\r\n        var dh = 0, dl;\r\n        if (type$1(lightness) === 'array') {\r\n            dl = lightness[1] - lightness[0];\r\n        } else {\r\n            dl = 0;\r\n            lightness = [lightness, lightness];\r\n        }\r\n\r\n        var f = function(fract) {\r\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\r\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\r\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\r\n            var amp = (h * l * (1-l)) / 2;\r\n            var cos_a = cos$1(a);\r\n            var sin_a = sin$1(a);\r\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\r\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\r\n            var b = l + (amp * (+1.97294 * cos_a));\r\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\r\n        };\r\n\r\n        f.start = function(s) {\r\n            if ((s == null)) { return start; }\r\n            start = s;\r\n            return f;\r\n        };\r\n\r\n        f.rotations = function(r) {\r\n            if ((r == null)) { return rotations; }\r\n            rotations = r;\r\n            return f;\r\n        };\r\n\r\n        f.gamma = function(g) {\r\n            if ((g == null)) { return gamma; }\r\n            gamma = g;\r\n            return f;\r\n        };\r\n\r\n        f.hue = function(h) {\r\n            if ((h == null)) { return hue; }\r\n            hue = h;\r\n            if (type$1(hue) === 'array') {\r\n                dh = hue[1] - hue[0];\r\n                if (dh === 0) { hue = hue[1]; }\r\n            } else {\r\n                dh = 0;\r\n            }\r\n            return f;\r\n        };\r\n\r\n        f.lightness = function(h) {\r\n            if ((h == null)) { return lightness; }\r\n            if (type$1(h) === 'array') {\r\n                lightness = h;\r\n                dl = h[1] - h[0];\r\n            } else {\r\n                lightness = [h,h];\r\n                dl = 0;\r\n            }\r\n            return f;\r\n        };\r\n\r\n        f.scale = function () { return chroma$2.scale(f); };\r\n\r\n        f.hue(hue);\r\n\r\n        return f;\r\n    };\r\n\r\n    var Color$4 = Color_1;\r\n    var digits = '0123456789abcdef';\r\n\r\n    var floor$1 = Math.floor;\r\n    var random = Math.random;\r\n\r\n    var random_1 = function () {\r\n        var code = '#';\r\n        for (var i=0; i<6; i++) {\r\n            code += digits.charAt(floor$1(random() * 16));\r\n        }\r\n        return new Color$4(code, 'hex');\r\n    };\r\n\r\n    var type = type$p;\r\n    var log = Math.log;\r\n    var pow$1 = Math.pow;\r\n    var floor = Math.floor;\r\n    var abs$1 = Math.abs;\r\n\r\n\r\n    var analyze = function (data, key) {\r\n        if ( key === void 0 ) key=null;\r\n\r\n        var r = {\r\n            min: Number.MAX_VALUE,\r\n            max: Number.MAX_VALUE*-1,\r\n            sum: 0,\r\n            values: [],\r\n            count: 0\r\n        };\r\n        if (type(data) === 'object') {\r\n            data = Object.values(data);\r\n        }\r\n        data.forEach(function (val) {\r\n            if (key && type(val) === 'object') { val = val[key]; }\r\n            if (val !== undefined && val !== null && !isNaN(val)) {\r\n                r.values.push(val);\r\n                r.sum += val;\r\n                if (val < r.min) { r.min = val; }\r\n                if (val > r.max) { r.max = val; }\r\n                r.count += 1;\r\n            }\r\n        });\r\n\r\n        r.domain = [r.min, r.max];\r\n\r\n        r.limits = function (mode, num) { return limits(r, mode, num); };\r\n\r\n        return r;\r\n    };\r\n\r\n\r\n    var limits = function (data, mode, num) {\r\n        if ( mode === void 0 ) mode='equal';\r\n        if ( num === void 0 ) num=7;\r\n\r\n        if (type(data) == 'array') {\r\n            data = analyze(data);\r\n        }\r\n        var min = data.min;\r\n        var max = data.max;\r\n        var values = data.values.sort(function (a,b) { return a-b; });\r\n\r\n        if (num === 1) { return [min,max]; }\r\n\r\n        var limits = [];\r\n\r\n        if (mode.substr(0,1) === 'c') { // continuous\r\n            limits.push(min);\r\n            limits.push(max);\r\n        }\r\n\r\n        if (mode.substr(0,1) === 'e') { // equal interval\r\n            limits.push(min);\r\n            for (var i=1; i<num; i++) {\r\n                limits.push(min+((i/num)*(max-min)));\r\n            }\r\n            limits.push(max);\r\n        }\r\n\r\n        else if (mode.substr(0,1) === 'l') { // log scale\r\n            if (min <= 0) {\r\n                throw new Error('Logarithmic scales are only possible for values > 0');\r\n            }\r\n            var min_log = Math.LOG10E * log(min);\r\n            var max_log = Math.LOG10E * log(max);\r\n            limits.push(min);\r\n            for (var i$1=1; i$1<num; i$1++) {\r\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\r\n            }\r\n            limits.push(max);\r\n        }\r\n\r\n        else if (mode.substr(0,1) === 'q') { // quantile scale\r\n            limits.push(min);\r\n            for (var i$2=1; i$2<num; i$2++) {\r\n                var p = ((values.length-1) * i$2)/num;\r\n                var pb = floor(p);\r\n                if (pb === p) {\r\n                    limits.push(values[pb]);\r\n                } else { // p > pb\r\n                    var pr = p - pb;\r\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\r\n                }\r\n            }\r\n            limits.push(max);\r\n\r\n        }\r\n\r\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\r\n            /*\r\n            implementation based on\r\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\r\n            simplified for 1-d input values\r\n            */\r\n            var cluster;\r\n            var n = values.length;\r\n            var assignments = new Array(n);\r\n            var clusterSizes = new Array(num);\r\n            var repeat = true;\r\n            var nb_iters = 0;\r\n            var centroids = null;\r\n\r\n            // get seed values\r\n            centroids = [];\r\n            centroids.push(min);\r\n            for (var i$3=1; i$3<num; i$3++) {\r\n                centroids.push(min + ((i$3/num) * (max-min)));\r\n            }\r\n            centroids.push(max);\r\n\r\n            while (repeat) {\r\n                // assignment step\r\n                for (var j=0; j<num; j++) {\r\n                    clusterSizes[j] = 0;\r\n                }\r\n                for (var i$4=0; i$4<n; i$4++) {\r\n                    var value = values[i$4];\r\n                    var mindist = Number.MAX_VALUE;\r\n                    var best = (void 0);\r\n                    for (var j$1=0; j$1<num; j$1++) {\r\n                        var dist = abs$1(centroids[j$1]-value);\r\n                        if (dist < mindist) {\r\n                            mindist = dist;\r\n                            best = j$1;\r\n                        }\r\n                        clusterSizes[best]++;\r\n                        assignments[i$4] = best;\r\n                    }\r\n                }\r\n\r\n                // update centroids step\r\n                var newCentroids = new Array(num);\r\n                for (var j$2=0; j$2<num; j$2++) {\r\n                    newCentroids[j$2] = null;\r\n                }\r\n                for (var i$5=0; i$5<n; i$5++) {\r\n                    cluster = assignments[i$5];\r\n                    if (newCentroids[cluster] === null) {\r\n                        newCentroids[cluster] = values[i$5];\r\n                    } else {\r\n                        newCentroids[cluster] += values[i$5];\r\n                    }\r\n                }\r\n                for (var j$3=0; j$3<num; j$3++) {\r\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\r\n                }\r\n\r\n                // check convergence\r\n                repeat = false;\r\n                for (var j$4=0; j$4<num; j$4++) {\r\n                    if (newCentroids[j$4] !== centroids[j$4]) {\r\n                        repeat = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                centroids = newCentroids;\r\n                nb_iters++;\r\n\r\n                if (nb_iters > 200) {\r\n                    repeat = false;\r\n                }\r\n            }\r\n\r\n            // finished k-means clustering\r\n            // the next part is borrowed from gabrielflor.it\r\n            var kClusters = {};\r\n            for (var j$5=0; j$5<num; j$5++) {\r\n                kClusters[j$5] = [];\r\n            }\r\n            for (var i$6=0; i$6<n; i$6++) {\r\n                cluster = assignments[i$6];\r\n                kClusters[cluster].push(values[i$6]);\r\n            }\r\n            var tmpKMeansBreaks = [];\r\n            for (var j$6=0; j$6<num; j$6++) {\r\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\r\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\r\n            }\r\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\r\n            limits.push(tmpKMeansBreaks[0]);\r\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\r\n                var v = tmpKMeansBreaks[i$7];\r\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\r\n                    limits.push(v);\r\n                }\r\n            }\r\n        }\r\n        return limits;\r\n    };\r\n\r\n    var analyze_1 = {analyze: analyze, limits: limits};\r\n\r\n    var Color$3 = Color_1;\r\n\r\n\r\n    var contrast = function (a, b) {\r\n        // WCAG contrast ratio\r\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\r\n        a = new Color$3(a);\r\n        b = new Color$3(b);\r\n        var l1 = a.luminance();\r\n        var l2 = b.luminance();\r\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\r\n    };\r\n\r\n    var Color$2 = Color_1;\r\n    var sqrt = Math.sqrt;\r\n    var pow = Math.pow;\r\n    var min = Math.min;\r\n    var max = Math.max;\r\n    var atan2 = Math.atan2;\r\n    var abs = Math.abs;\r\n    var cos = Math.cos;\r\n    var sin = Math.sin;\r\n    var exp = Math.exp;\r\n    var PI = Math.PI;\r\n\r\n    var deltaE = function(a, b, Kl, Kc, Kh) {\r\n        if ( Kl === void 0 ) Kl=1;\r\n        if ( Kc === void 0 ) Kc=1;\r\n        if ( Kh === void 0 ) Kh=1;\r\n\r\n        // Delta E (CIE 2000)\r\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\r\n        var rad2deg = function(rad) {\r\n            return 360 * rad / (2 * PI);\r\n        };\r\n        var deg2rad = function(deg) {\r\n            return (2 * PI * deg) / 360;\r\n        };\r\n        a = new Color$2(a);\r\n        b = new Color$2(b);\r\n        var ref = Array.from(a.lab());\r\n        var L1 = ref[0];\r\n        var a1 = ref[1];\r\n        var b1 = ref[2];\r\n        var ref$1 = Array.from(b.lab());\r\n        var L2 = ref$1[0];\r\n        var a2 = ref$1[1];\r\n        var b2 = ref$1[2];\r\n        var avgL = (L1 + L2)/2;\r\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\r\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\r\n        var avgC = (C1 + C2)/2;\r\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\r\n        var a1p = a1*(1+G);\r\n        var a2p = a2*(1+G);\r\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\r\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\r\n        var avgCp = (C1p + C2p)/2;\r\n        var arctan1 = rad2deg(atan2(b1, a1p));\r\n        var arctan2 = rad2deg(atan2(b2, a2p));\r\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\r\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\r\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\r\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\r\n        var deltaHp = h2p - h1p;\r\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\r\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\r\n        var deltaL = L2 - L1;\r\n        var deltaCp = C2p - C1p;    \r\n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\r\n        var sc = 1 + 0.045*avgCp;\r\n        var sh = 1 + 0.015*avgCp*T;\r\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\r\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\r\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\r\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\r\n        return max(0, min(100, result));\r\n    };\r\n\r\n    var Color$1 = Color_1;\r\n\r\n    // simple Euclidean distance\r\n    var distance = function(a, b, mode) {\r\n        if ( mode === void 0 ) mode='lab';\r\n\r\n        // Delta E (CIE 1976)\r\n        // see http://www.brucelindbloom.com/index.html?Equations.html\r\n        a = new Color$1(a);\r\n        b = new Color$1(b);\r\n        var l1 = a.get(mode);\r\n        var l2 = b.get(mode);\r\n        var sum_sq = 0;\r\n        for (var i in l1) {\r\n            var d = (l1[i] || 0) - (l2[i] || 0);\r\n            sum_sq += d*d;\r\n        }\r\n        return Math.sqrt(sum_sq);\r\n    };\r\n\r\n    var Color = Color_1;\r\n\r\n    var valid = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        try {\r\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    // some pre-defined color scales:\r\n    var chroma$1 = chroma_1;\r\n\r\n    var scale = scale$2;\r\n\r\n    var scales = {\r\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\r\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\r\n    };\r\n\r\n    /**\r\n        ColorBrewer colors for chroma.js\r\n\r\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\r\n        Pennsylvania State University.\r\n\r\n        Licensed under the Apache License, Version 2.0 (the \"License\");\r\n        you may not use this file except in compliance with the License.\r\n        You may obtain a copy of the License at\r\n        http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n        Unless required by applicable law or agreed to in writing, software distributed\r\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\r\n        specific language governing permissions and limitations under the License.\r\n    */\r\n\r\n    var colorbrewer = {\r\n        // sequential\r\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\r\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\r\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\r\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\r\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\r\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\r\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\r\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\r\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\r\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\r\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\r\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\r\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\r\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\r\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\r\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\r\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\r\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\r\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\r\n\r\n        // diverging\r\n\r\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\r\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\r\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\r\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\r\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\r\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\r\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\r\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\r\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\r\n\r\n        // qualitative\r\n\r\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\r\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\r\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\r\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\r\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\r\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\r\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\r\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\r\n    };\r\n\r\n    // add lowercase aliases for case-insensitive matches\r\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\r\n        var key = list[i];\r\n\r\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\r\n    }\r\n\r\n    var colorbrewer_1 = colorbrewer;\r\n\r\n    var chroma = chroma_1;\r\n\r\n    // feel free to comment out anything to rollup\r\n    // a smaller chroma.js built\r\n\r\n    // io --> convert colors\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // operators --> modify existing Colors\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // interpolators\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // generators -- > create new colors\r\n    chroma.average = average;\r\n    chroma.bezier = bezier_1;\r\n    chroma.blend = blend_1;\r\n    chroma.cubehelix = cubehelix;\r\n    chroma.mix = chroma.interpolate = mix$1;\r\n    chroma.random = random_1;\r\n    chroma.scale = scale$2;\r\n\r\n    // other utility methods\r\n    chroma.analyze = analyze_1.analyze;\r\n    chroma.contrast = contrast;\r\n    chroma.deltaE = deltaE;\r\n    chroma.distance = distance;\r\n    chroma.limits = analyze_1.limits;\r\n    chroma.valid = valid;\r\n\r\n    // scale\r\n    chroma.scales = scales;\r\n\r\n    // colors\r\n    chroma.colors = w3cx11_1;\r\n    chroma.brewer = colorbrewer_1;\r\n\r\n    var chroma_js = chroma;\r\n\r\n    return chroma_js;\r\n\r\n}));\r\n"],
  "mappings": ";;;;;AAAA;AAAA;AAyDA,KAAC,SAAU,QAAQ,SAAS;AACxB,aAAO,YAAY,YAAY,OAAO,WAAW,cAAc,OAAO,UAAU,QAAQ,IACxF,OAAO,WAAW,cAAc,OAAO,MAAM,OAAO,OAAO,KAC1D,SAAS,OAAO,eAAe,cAAc,aAAa,UAAU,MAAM,OAAO,SAAS,QAAQ;AAAA,IACvG,GAAG,SAAO,WAAY;AAAE;AAEpB,UAAI,UAAU,SAAU,GAAGA,MAAKC,MAAK;AACjC,YAAKD,SAAQ;AAAS,UAAAA,OAAI;AAC1B,YAAKC,SAAQ;AAAS,UAAAA,OAAI;AAE1B,eAAO,IAAID,OAAMA,OAAM,IAAIC,OAAMA,OAAM;AAAA,MAC3C;AAEA,UAAI,UAAU;AAEd,UAAI,aAAa,SAAUC,MAAK;AAC5B,QAAAA,KAAI,WAAW;AACf,QAAAA,KAAI,aAAaA,KAAI,MAAM,CAAC;AAC5B,iBAASC,KAAE,GAAGA,MAAG,GAAGA,MAAK;AACrB,cAAIA,KAAI,GAAG;AACP,gBAAID,KAAIC,EAAC,IAAI,KAAKD,KAAIC,EAAC,IAAI,KAAK;AAAE,cAAAD,KAAI,WAAW;AAAA,YAAM;AACvD,YAAAA,KAAIC,EAAC,IAAI,QAAQD,KAAIC,EAAC,GAAG,GAAG,GAAG;AAAA,UACnC,WAAWA,OAAM,GAAG;AAChB,YAAAD,KAAIC,EAAC,IAAI,QAAQD,KAAIC,EAAC,GAAG,GAAG,CAAC;AAAA,UACjC;AAAA,QACJ;AACA,eAAOD;AAAA,MACX;AAGA,UAAI,cAAc,CAAC;AACnB,eAAS,MAAM,GAAG,SAAS,CAAC,WAAW,UAAU,UAAU,YAAY,SAAS,QAAQ,UAAU,aAAa,MAAM,GAAG,MAAM,OAAO,QAAQ,OAAO,GAAG;AACnJ,YAAI,OAAO,OAAO,GAAG;AAErB,oBAAa,aAAa,OAAO,GAAI,IAAI,KAAK,YAAY;AAAA,MAC9D;AACA,UAAI,SAAS,SAAS,KAAK;AACvB,eAAO,YAAY,OAAO,UAAU,SAAS,KAAK,GAAG,CAAC,KAAK;AAAA,MAC/D;AAEA,UAAI,SAAS;AAEb,UAAI,WAAW,SAAU,MAAM,UAAU;AACrC,YAAK,aAAa;AAAS,qBAAS;AAGpC,YAAI,KAAK,UAAU,GAAG;AAAE,iBAAO,MAAM,UAAU,MAAM,KAAK,IAAI;AAAA,QAAG;AAGpE,YAAI,OAAO,KAAK,CAAC,CAAC,KAAK,YAAY,UAAU;AAC5C,iBAAO,SAAS,MAAM,EAAE,EACtB,OAAO,SAAU,GAAG;AAAE,mBAAO,KAAK,CAAC,EAAE,CAAC,MAAM;AAAA,UAAW,CAAC,EACxD,IAAI,SAAU,GAAG;AAAE,mBAAO,KAAK,CAAC,EAAE,CAAC;AAAA,UAAG,CAAC;AAAA,QAC1C;AAGG,eAAO,KAAK,CAAC;AAAA,MACjB;AAEA,UAAI,SAAS;AAEb,UAAI,SAAS,SAAU,MAAM;AACzB,YAAI,KAAK,SAAS,GAAG;AAAE,iBAAO;AAAA,QAAM;AACpC,YAAI,IAAI,KAAK,SAAO;AACpB,YAAI,OAAO,KAAK,CAAC,CAAC,KAAK,UAAU;AAAE,iBAAO,KAAK,CAAC,EAAE,YAAY;AAAA,QAAG;AACjE,eAAO;AAAA,MACX;AAEA,UAAI,OAAO,KAAK;AAEhB,UAAI,QAAQ;AAAA,QACX,UAAU;AAAA,QACV,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,OAAO,OAAK;AAAA,QACZ,SAAS,OAAK;AAAA,QACd,SAAS,OAAO;AAAA,QAChB,SAAS,MAAM;AAAA,MAChB;AAEA,UAAI,UAAU;AAAA,QACb,QAAQ,CAAC;AAAA,QACT,YAAY,CAAC;AAAA,MACd;AAEA,UAAI,SAAS,MAAM;AACnB,UAAI,aAAa,MAAM;AACvB,UAAI,SAAS,MAAM;AACnB,UAAI,SAAS;AAEb,UAAI,UAAU,SAASE,SAAQ;AAC3B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,KAAK;AACT,YAAI,OAAO,KAAK,CAAC,CAAC,MAAM,YACpB,KAAK,CAAC,EAAE,eACR,KAAK,CAAC,EAAE,gBAAgB,KAAK,aAAa;AAE1C,iBAAO,KAAK,CAAC;AAAA,QACjB;AAGA,YAAI,OAAO,OAAO,IAAI;AACtB,YAAI,aAAa;AAEjB,YAAI,CAAC,MAAM;AACP,uBAAa;AACb,cAAI,CAAC,OAAO,QAAQ;AAChB,mBAAO,aAAa,OAAO,WAAW,KAAK,SAAU,GAAE,GAAG;AAAE,qBAAO,EAAE,IAAI,EAAE;AAAA,YAAG,CAAC;AAC/E,mBAAO,SAAS;AAAA,UACpB;AAEA,mBAASD,KAAI,GAAGE,QAAO,OAAO,YAAYF,KAAIE,MAAK,QAAQF,MAAK,GAAG;AAC/D,gBAAI,MAAME,MAAKF,EAAC;AAEhB,mBAAO,IAAI,KAAK,MAAM,KAAK,IAAI;AAC/B,gBAAI,MAAM;AAAE;AAAA,YAAO;AAAA,UACvB;AAAA,QACJ;AAEA,YAAI,OAAO,OAAO,IAAI,GAAG;AACrB,cAAID,OAAM,OAAO,OAAO,IAAI,EAAE,MAAM,MAAM,aAAa,OAAO,KAAK,MAAM,GAAE,EAAE,CAAC;AAC9E,aAAG,OAAO,WAAWA,IAAG;AAAA,QAC5B,OAAO;AACH,gBAAM,IAAI,MAAM,qBAAmB,IAAI;AAAA,QAC3C;AAGA,YAAI,GAAG,KAAK,WAAW,GAAG;AAAE,aAAG,KAAK,KAAK,CAAC;AAAA,QAAG;AAAA,MACjD;AAEA,cAAQ,UAAU,WAAW,SAAS,WAAY;AAC9C,YAAI,OAAO,KAAK,GAAG,KAAK,YAAY;AAAE,iBAAO,KAAK,IAAI;AAAA,QAAG;AACzD,eAAQ,MAAO,KAAK,KAAK,KAAK,GAAG,IAAK;AAAA,MAC1C;AAEA,UAAI,UAAU;AAEd,UAAI,WAAW,WAAY;AAC1B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,OAAO,CAAE,IAAK,EAAE,OAAQ,IAAI,CAAE;AAAA,MACnF;AAEA,eAAS,QAAQ;AACjB,eAAS,UAAU;AAEnB,UAAI,WAAW;AAEf,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,KAAK;AAEjB,UAAI,aAAa,WAAY;AACzB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAI,IAAI;AACR,YAAI,IAAI,IAAI,MAAM,GAAE,MAAM,GAAE,CAAC,CAAC;AAC9B,YAAI,IAAI,IAAI,IAAI,KAAK,IAAE,KAAK;AAC5B,YAAI,KAAK,IAAE,IAAE,KAAK;AAClB,YAAI,KAAK,IAAE,IAAE,KAAK;AAClB,YAAI,KAAK,IAAE,IAAE,KAAK;AAClB,eAAO,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,MACnB;AAEA,UAAI,aAAa;AAEjB,UAAI,WAAW,MAAM;AAErB,UAAI,WAAW,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,SAAS,MAAM,MAAM;AAC5B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI;AACxC,YAAI,MAAM,GAAG;AAAE,iBAAO,CAAC,GAAE,GAAE,GAAE,KAAK;AAAA,QAAG;AACrC,eAAO;AAAA,UACH,KAAK,IAAI,IAAI,OAAO,IAAE,MAAM,IAAE;AAAA;AAAA,UAC9B,KAAK,IAAI,IAAI,OAAO,IAAE,MAAM,IAAE;AAAA;AAAA,UAC9B,KAAK,IAAI,IAAI,OAAO,IAAE,MAAM,IAAE;AAAA;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,aAAa;AAEjB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AACd,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AAEnB,UAAI,WAAW;AAEf,cAAQ,UAAU,OAAO,WAAW;AAChC,eAAO,SAAS,KAAK,IAAI;AAAA,MAC7B;AAEA,eAAS,OAAO,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,MAAM,CAAC,CAAE;AAAA,MACzF;AAEA,cAAQ,OAAO,OAAO;AAEtB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,MAAM;AAC5B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,MAAM,SAAU,GAAG;AAAE,eAAO,KAAK,MAAM,IAAE,GAAG,IAAE;AAAA,MAAK;AAUvD,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,OAAO,SAAS,MAAM,MAAM;AAChC,YAAI,OAAO,OAAO,IAAI,KAAK;AAC3B,aAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC;AAC1B,aAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAE,GAAG,IAAI;AAC7B,aAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAE,GAAG,IAAI;AAC7B,YAAI,SAAS,UAAW,KAAK,SAAS,KAAK,KAAK,CAAC,IAAE,GAAI;AACnD,eAAK,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI;AACtC,iBAAO;AAAA,QACX,OAAO;AACH,eAAK,SAAS;AAAA,QAClB;AACA,eAAQ,OAAO,MAAO,KAAK,KAAK,GAAG,IAAK;AAAA,MAC5C;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AAUrB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,SAAS,MAAM,MAAM;AAC5B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AAEd,aAAK;AACL,aAAK;AACL,aAAK;AAEL,YAAIF,OAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,YAAIC,OAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAE1B,YAAI,KAAKA,OAAMD,QAAO;AACtB,YAAI,GAAG;AAEP,YAAIC,SAAQD,MAAI;AACZ,cAAI;AACJ,cAAI,OAAO;AAAA,QACf,OAAO;AACH,cAAI,IAAI,OAAOC,OAAMD,SAAQC,OAAMD,SAAQC,OAAMD,SAAQ,IAAIC,OAAMD;AAAA,QACvE;AAEA,YAAI,KAAKC,MAAK;AAAE,eAAK,IAAI,MAAMA,OAAMD;AAAA,QAAM,WAClC,KAAKC,MAAK;AAAE,cAAI,KAAK,IAAI,MAAMA,OAAMD;AAAA,QAAM,WAC3C,KAAKC,MAAK;AAAE,cAAI,KAAK,IAAI,MAAMA,OAAMD;AAAA,QAAM;AAEpD,aAAK;AACL,YAAI,IAAI,GAAG;AAAE,eAAK;AAAA,QAAK;AACvB,YAAI,KAAK,SAAO,KAAK,KAAK,CAAC,MAAI,QAAW;AAAE,iBAAO,CAAC,GAAE,GAAE,GAAE,KAAK,CAAC,CAAC;AAAA,QAAG;AACpE,eAAO,CAAC,GAAE,GAAE,CAAC;AAAA,MACjB;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,UAAU;AACd,UAAI,YAAY;AAChB,UAAI,UAAU,KAAK;AAUnB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,OAAO,SAAS,MAAM,MAAM;AAChC,YAAI,OAAO,OAAO,IAAI,KAAK;AAC3B,YAAI,KAAK,OAAO,GAAE,CAAC,KAAK,OAAO;AAC3B,iBAAO,QAAQ,UAAU,IAAI,GAAG,IAAI;AAAA,QACxC;AACA,aAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,CAAC;AACzB,aAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,CAAC;AACzB,aAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,CAAC;AACzB,YAAI,SAAS,UAAW,KAAK,SAAS,KAAK,KAAK,CAAC,IAAE,GAAI;AACnD,eAAK,CAAC,IAAI,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI;AACtC,iBAAO;AAAA,QACX;AACA,eAAQ,OAAO,MAAO,KAAK,MAAM,GAAE,SAAO,QAAM,IAAE,CAAC,EAAE,KAAK,GAAG,IAAK;AAAA,MACtE;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU,KAAK;AAEnB,UAAI,YAAY,WAAY;AACxB,YAAI;AAEJ,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAC7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,GAAE,GAAE;AACR,YAAI,MAAM,GAAG;AACT,cAAI,IAAI,IAAI,IAAE;AAAA,QAClB,OAAO;AACH,cAAI,KAAK,CAAC,GAAE,GAAE,CAAC;AACf,cAAI,IAAI,CAAC,GAAE,GAAE,CAAC;AACd,cAAI,KAAK,IAAI,MAAM,KAAK,IAAE,KAAK,IAAE,IAAE,IAAE;AACrC,cAAI,KAAK,IAAI,IAAI;AACjB,cAAI,KAAK,IAAI;AACb,aAAG,CAAC,IAAI,KAAK,IAAE;AACf,aAAG,CAAC,IAAI;AACR,aAAG,CAAC,IAAI,KAAK,IAAE;AACf,mBAASG,KAAE,GAAGA,KAAE,GAAGA,MAAK;AACpB,gBAAI,GAAGA,EAAC,IAAI,GAAG;AAAE,iBAAGA,EAAC,KAAK;AAAA,YAAG;AAC7B,gBAAI,GAAGA,EAAC,IAAI,GAAG;AAAE,iBAAGA,EAAC,KAAK;AAAA,YAAG;AAC7B,gBAAI,IAAI,GAAGA,EAAC,IAAI,GACZ;AAAE,gBAAEA,EAAC,IAAI,MAAM,KAAK,MAAM,IAAI,GAAGA,EAAC;AAAA,YAAG,WAChC,IAAI,GAAGA,EAAC,IAAI,GACjB;AAAE,gBAAEA,EAAC,IAAI;AAAA,YAAI,WACR,IAAI,GAAGA,EAAC,IAAI,GACjB;AAAE,gBAAEA,EAAC,IAAI,MAAM,KAAK,OAAQ,IAAI,IAAK,GAAGA,EAAC,KAAK;AAAA,YAAG,OAEjD;AAAE,gBAAEA,EAAC,IAAI;AAAA,YAAI;AAAA,UACrB;AACA,UAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAE,GAAG,GAAE,QAAQ,EAAE,CAAC,IAAE,GAAG,GAAE,QAAQ,EAAE,CAAC,IAAE,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC;AAAA,QACjH;AACA,YAAI,KAAK,SAAS,GAAG;AAEjB,iBAAO,CAAC,GAAE,GAAE,GAAE,KAAK,CAAC,CAAC;AAAA,QACzB;AACA,eAAO,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,MACnB;AAEA,UAAI,YAAY;AAEhB,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,SAAS;AACb,UAAI,UAAU;AACd,UAAI,aAAa;AACjB,UAAI,cAAc;AAClB,UAAI,SAAS;AACb,UAAI,UAAU;AAEd,UAAI,UAAU,KAAK;AAEnB,UAAI,YAAY,SAAU,KAAK;AAC3B,cAAM,IAAI,YAAY,EAAE,KAAK;AAC7B,YAAI;AAEJ,YAAI,QAAQ,OAAO,OAAO;AACtB,cAAI;AACA,mBAAO,QAAQ,OAAO,MAAM,GAAG;AAAA,UACnC,SAAS,GAAG;AAAA,UAEZ;AAAA,QACJ;AAGA,YAAK,IAAI,IAAI,MAAM,MAAM,GAAI;AACzB,cAAID,OAAM,EAAE,MAAM,GAAE,CAAC;AACrB,mBAASC,KAAE,GAAGA,KAAE,GAAGA,MAAK;AACpB,YAAAD,KAAIC,EAAC,IAAI,CAACD,KAAIC,EAAC;AAAA,UACnB;AACA,UAAAD,KAAI,CAAC,IAAI;AACT,iBAAOA;AAAA,QACX;AAGA,YAAK,IAAI,IAAI,MAAM,OAAO,GAAI;AAC1B,cAAI,QAAQ,EAAE,MAAM,GAAE,CAAC;AACvB,mBAASI,OAAI,GAAGA,OAAI,GAAGA,QAAO;AAC1B,kBAAMA,IAAG,IAAI,CAAC,MAAMA,IAAG;AAAA,UAC3B;AACA,iBAAO;AAAA,QACX;AAGA,YAAK,IAAI,IAAI,MAAM,UAAU,GAAI;AAC7B,cAAI,QAAQ,EAAE,MAAM,GAAE,CAAC;AACvB,mBAAS,MAAI,GAAG,MAAI,GAAG,OAAO;AAC1B,kBAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,IAAI;AAAA,UAC1C;AACA,gBAAM,CAAC,IAAI;AACX,iBAAO;AAAA,QACX;AAGA,YAAK,IAAI,IAAI,MAAM,WAAW,GAAI;AAC9B,cAAI,QAAQ,EAAE,MAAM,GAAE,CAAC;AACvB,mBAAS,MAAI,GAAG,MAAI,GAAG,OAAO;AAC1B,kBAAM,GAAG,IAAI,QAAQ,MAAM,GAAG,IAAI,IAAI;AAAA,UAC1C;AACA,gBAAM,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,iBAAO;AAAA,QACX;AAGA,YAAK,IAAI,IAAI,MAAM,MAAM,GAAI;AACzB,cAAIC,OAAM,EAAE,MAAM,GAAE,CAAC;AACrB,UAAAA,KAAI,CAAC,KAAK;AACV,UAAAA,KAAI,CAAC,KAAK;AACV,cAAI,QAAQ,QAAQA,IAAG;AACvB,gBAAM,CAAC,IAAI;AACX,iBAAO;AAAA,QACX;AAGA,YAAK,IAAI,IAAI,MAAM,OAAO,GAAI;AAC1B,cAAI,QAAQ,EAAE,MAAM,GAAE,CAAC;AACvB,gBAAM,CAAC,KAAK;AACZ,gBAAM,CAAC,KAAK;AACZ,cAAI,QAAQ,QAAQ,KAAK;AACzB,gBAAM,CAAC,IAAI,CAAC,EAAE,CAAC;AACf,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,gBAAU,OAAO,SAAU,GAAG;AAC1B,eAAO,OAAO,KAAK,CAAC,KAChB,QAAQ,KAAK,CAAC,KACd,WAAW,KAAK,CAAC,KACjB,YAAY,KAAK,CAAC,KAClB,OAAO,KAAK,CAAC,KACb,QAAQ,KAAK,CAAC;AAAA,MACtB;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AAEnB,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,cAAQ,UAAU,MAAM,SAAS,MAAM;AACnC,eAAO,QAAQ,KAAK,MAAM,IAAI;AAAA,MAClC;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AAErB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,SAAU,GAAG;AACf,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU,SAAS;AACxC,iBAAQ,QAAQ;AAAI,iBAAM,GAAI,IAAI,UAAW,MAAM,CAAE;AAErD,cAAI,CAAC,KAAK,UAAU,OAAO,CAAC,MAAM,YAAY,QAAQ,KAAK,CAAC,GAAG;AAC3D,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,UAAU;AACd,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,WAAW,MAAM;AAErB,cAAQ,OAAO,KAAK,WAAY;AAC5B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAIL,OAAM,SAAS,MAAM,MAAM;AAC/B,QAAAA,KAAI,CAAC,KAAK;AACV,QAAAA,KAAI,CAAC,KAAK;AACV,QAAAA,KAAI,CAAC,KAAK;AACV,eAAOA;AAAA,MACX;AAEA,eAAS,KAAK,WAAY;AACtB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,IAAI,CAAC,CAAE;AAAA,MACvF;AAEA,cAAQ,UAAU,KAAK,WAAW;AAC9B,YAAIA,OAAM,KAAK;AACf,eAAO,CAACA,KAAI,CAAC,IAAE,KAAKA,KAAI,CAAC,IAAE,KAAKA,KAAI,CAAC,IAAE,KAAKA,KAAI,CAAC,CAAC;AAAA,MACtD;AAEA,UAAI,WAAW,MAAM;AAErB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAIF,OAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,YAAIC,OAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,YAAI,QAAQA,OAAMD;AAClB,YAAI,IAAI,QAAQ,MAAM;AACtB,YAAI,KAAKA,QAAO,MAAM,SAAS;AAC/B,YAAI;AACJ,YAAI,UAAU,GAAG;AACb,cAAI,OAAO;AAAA,QACf,OAAO;AACH,cAAI,MAAMC,MAAK;AAAE,iBAAK,IAAI,KAAK;AAAA,UAAO;AACtC,cAAI,MAAMA,MAAK;AAAE,gBAAI,KAAG,IAAI,KAAK;AAAA,UAAO;AACxC,cAAI,MAAMA,MAAK;AAAE,gBAAI,KAAG,IAAI,KAAK;AAAA,UAAO;AACxC,eAAK;AACL,cAAI,IAAI,GAAG;AAAE,iBAAK;AAAA,UAAK;AAAA,QAC3B;AACA,eAAO,CAAC,GAAG,GAAG,EAAE;AAAA,MACpB;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU,KAAK;AAUnB,UAAI,UAAU,WAAY;AACtB,YAAI,QAAQ,UAAU,UAAU,UAAU,UAAU;AAEpD,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAC7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,KAAK,KAAK,CAAC;AACf,YAAI,GAAE,GAAE;AACR,aAAK,KAAK;AACV,YAAI,KAAK,IAAI;AACb,YAAI,MAAM,GAAG;AACT,cAAI,IAAI,IAAI;AAAA,QAChB,OAAO;AACH,cAAI,MAAM,KAAK;AAAE,gBAAI;AAAA,UAAG;AACxB,cAAI,IAAI,KAAK;AAAE,iBAAK;AAAA,UAAK;AACzB,cAAI,IAAI,GAAG;AAAE,iBAAK;AAAA,UAAK;AACvB,eAAK;AACL,cAAIE,KAAI,QAAQ,CAAC;AACjB,cAAI,IAAI,IAAIA;AACZ,cAAI,IAAI,MAAM,IAAI;AAClB,cAAI,IAAI,IAAI,MAAM,IAAI;AACtB,cAAI,IAAI,IAAI,KAAK;AACjB,cAAI,IAAI,IAAI;AACZ,kBAAQA,IAAG;AAAA,YACP,KAAK;AAAG,cAAC,SAAS,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC;AAAI;AAAA,YAC3E,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,UACvF;AAAA,QACJ;AACA,eAAO,CAAC,GAAG,GAAG,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,MAClD;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,UAAU;AAEd,cAAQ,UAAU,MAAM,WAAW;AAC/B,eAAO,QAAQ,KAAK,IAAI;AAAA,MAC5B;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AAErB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,KAAK;AAC3B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AACrB,UAAI,OAAO,MAAM;AACjB,UAAI,UAAU,KAAK;AAEnB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,MAAM;AAC/B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,OAAO,KAAK,IAAI,KAAK;AACzB,YAAI,MAAM,QAAW;AAAE,cAAI;AAAA,QAAG;AAC9B,YAAI,SAAS,QAAQ;AACjB,iBAAO,IAAI,IAAI,SAAS;AAAA,QAC5B;AACA,YAAI,QAAQ,CAAC;AACb,YAAI,QAAQ,CAAC;AACb,YAAI,QAAQ,CAAC;AACb,YAAI,IAAI,KAAK,KAAK,KAAK,IAAI;AAC3B,YAAI,MAAM,WAAW,EAAE,SAAS,EAAE;AAClC,cAAM,IAAI,OAAO,IAAI,SAAS,CAAC;AAC/B,YAAI,MAAM,MAAM,QAAQ,IAAI,GAAG,EAAE,SAAS,EAAE;AAC5C,cAAM,IAAI,OAAO,IAAI,SAAS,CAAC;AAC/B,gBAAQ,KAAK,YAAY,GAAG;AAAA,UACxB,KAAK;AAAQ,mBAAQ,MAAM,MAAM;AAAA,UACjC,KAAK;AAAQ,mBAAQ,MAAM,MAAM;AAAA,UACjC;AAAS,mBAAQ,MAAM;AAAA,QAC3B;AAAA,MACJ;AAEA,UAAI,YAAY;AAEhB,UAAI,SAAS;AACb,UAAI,UAAU;AAEd,UAAI,YAAY,SAAU,KAAK;AAC3B,YAAI,IAAI,MAAM,MAAM,GAAG;AAEnB,cAAI,IAAI,WAAW,KAAK,IAAI,WAAW,GAAG;AACtC,kBAAM,IAAI,OAAO,CAAC;AAAA,UACtB;AAEA,cAAI,IAAI,WAAW,GAAG;AAClB,kBAAM,IAAI,MAAM,EAAE;AAClB,kBAAM,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC;AAAA,UAClD;AACA,cAAI,IAAI,SAAS,KAAK,EAAE;AACxB,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK,IAAI;AACjB,cAAI,IAAI,IAAI;AACZ,iBAAO,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,QACnB;AAGA,YAAI,IAAI,MAAM,OAAO,GAAG;AACpB,cAAI,IAAI,WAAW,KAAK,IAAI,WAAW,GAAG;AAEtC,kBAAM,IAAI,OAAO,CAAC;AAAA,UACtB;AAEA,cAAI,IAAI,WAAW,GAAG;AAClB,kBAAM,IAAI,MAAM,EAAE;AAClB,kBAAM,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC,IAAE,IAAI,CAAC;AAAA,UAChE;AACA,cAAI,MAAM,SAAS,KAAK,EAAE;AAC1B,cAAI,MAAM,OAAO,KAAK;AACtB,cAAI,MAAM,OAAO,KAAK;AACtB,cAAI,MAAM,OAAO,IAAI;AACrB,cAAI,IAAI,KAAK,OAAO,MAAM,OAAQ,MAAO,GAAG,IAAI;AAChD,iBAAO,CAAC,KAAI,KAAI,KAAI,CAAC;AAAA,QACzB;AAMA,cAAM,IAAI,MAAO,wBAAwB,GAAI;AAAA,MACjD;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AACnB,UAAI,UAAU;AAEd,UAAI,YAAY;AAEhB,cAAQ,UAAU,MAAM,SAAS,MAAM;AACnC,eAAO,UAAU,KAAK,MAAM,IAAI;AAAA,MACpC;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AACrB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,SAAU,GAAG;AACf,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU,SAAS;AACxC,iBAAQ,QAAQ;AAAI,iBAAM,GAAI,IAAI,UAAW,MAAM,CAAE;AAErD,cAAI,CAAC,KAAK,UAAU,OAAO,CAAC,MAAM,YAAY,CAAC,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,KAAK,GAAG;AAClF,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU,MAAM;AACpB,UAAI,QAAQ,KAAK;AACjB,UAAI,SAAS,KAAK;AAClB,UAAI,OAAO,KAAK;AAEhB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAM7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,aAAK;AACL,aAAK;AACL,aAAK;AACL,YAAI;AACJ,YAAI,OAAO,MAAM,GAAE,GAAE,CAAC;AACtB,YAAIA,MAAK,IAAE,IAAE,KAAK;AAClB,YAAI,IAAIA,KAAI,IAAI,IAAI,OAAKA,KAAI;AAC7B,YAAI,MAAM,GAAG;AACT,cAAI;AAAA,QACR,OAAO;AACH,eAAM,IAAE,KAAI,IAAE,MAAM;AACpB,eAAK,QAAQ,IAAE,MAAI,IAAE,MAAM,IAAE,MAAI,IAAE,EAAE;AACrC,cAAI,KAAK,CAAC;AACV,cAAI,IAAI,GAAG;AACP,gBAAI,UAAU;AAAA,UAClB;AACA,eAAK;AAAA,QACT;AACA,eAAO,CAAC,IAAE,KAAI,GAAEA,EAAC;AAAA,MACrB;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,MAAM;AAClB,UAAI,UAAU,MAAM;AACpB,UAAI,UAAU,MAAM;AACpB,UAAI,QAAQ,KAAK;AAOjB,UAAI,UAAU,WAAY;AACtB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAM7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAIA,KAAI,KAAK,CAAC;AACd,YAAI,GAAE,GAAE;AAER,YAAI,MAAM,CAAC,GAAG;AAAE,cAAI;AAAA,QAAG;AACvB,YAAI,MAAM,CAAC,GAAG;AAAE,cAAI;AAAA,QAAG;AAEvB,YAAI,IAAI,KAAK;AAAE,eAAK;AAAA,QAAK;AACzB,YAAI,IAAI,GAAG;AAAE,eAAK;AAAA,QAAK;AACvB,aAAK;AACL,YAAI,IAAI,IAAE,GAAG;AACT,eAAK,IAAE,KAAG;AACV,eAAK,IAAE,IAAE,MAAM,UAAQ,CAAC,IAAE,MAAM,UAAQ,UAAQ,CAAC,KAAG;AACpD,cAAI,KAAK,IAAE;AAAA,QACf,WAAW,IAAI,IAAE,GAAG;AAChB,eAAK,IAAE;AACP,eAAK,IAAE,KAAG;AACV,eAAK,IAAE,IAAE,MAAM,UAAQ,CAAC,IAAE,MAAM,UAAQ,UAAQ,CAAC,KAAG;AACpD,cAAI,KAAK,IAAE;AAAA,QACf,OAAO;AACH,eAAK,IAAE;AACP,eAAK,IAAE,KAAG;AACV,eAAK,IAAE,IAAE,MAAM,UAAQ,CAAC,IAAE,MAAM,UAAQ,UAAQ,CAAC,KAAG;AACpD,cAAI,KAAK,IAAE;AAAA,QACf;AACA,YAAI,MAAMA,KAAE,IAAE,CAAC;AACf,YAAI,MAAMA,KAAE,IAAE,CAAC;AACf,YAAI,MAAMA,KAAE,IAAE,CAAC;AACf,eAAO,CAAC,IAAE,KAAK,IAAE,KAAK,IAAE,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,MAC9D;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,UAAU;AAEd,cAAQ,UAAU,MAAM,WAAW;AAC/B,eAAO,QAAQ,KAAK,IAAI;AAAA,MAC5B;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AAErB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,KAAK;AAC3B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,YAAY;AAEhB,cAAQ,UAAU,MAAM,WAAW;AAC/B,eAAO,UAAU,KAAK,IAAI;AAAA,MAC9B;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AAErB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,KAAK;AAC3B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK;AAQjB,UAAI,UAAU,WAAY;AACtB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,OAAO,MAAM,GAAG,GAAG,CAAC;AACxB,YAAI,OAAO,MAAM,GAAG,GAAG,CAAC;AACxB,YAAI,QAAQ,OAAO;AACnB,YAAI,GAAE,GAAE;AACR,YAAI,OAAO;AACX,YAAI,SAAS,GAAG;AACZ,cAAI,OAAO;AACX,cAAI;AAAA,QACR,OAAO;AACH,cAAI,QAAQ;AACZ,cAAI,MAAM,MAAM;AAAE,iBAAK,IAAI,KAAK;AAAA,UAAO;AACvC,cAAI,MAAM,MAAM;AAAE,gBAAI,KAAG,IAAI,KAAK;AAAA,UAAO;AACzC,cAAI,MAAM,MAAM;AAAE,gBAAI,KAAG,IAAI,KAAK;AAAA,UAAO;AACzC,eAAK;AACL,cAAI,IAAI,GAAG;AAAE,iBAAK;AAAA,UAAK;AAAA,QAC3B;AACA,eAAO,CAAC,GAAG,GAAG,CAAC;AAAA,MACnB;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU,KAAK;AAEnB,UAAI,UAAU,WAAY;AACtB,YAAI,QAAQ,UAAU,UAAU,UAAU,UAAU;AAEpD,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAC7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,GAAE,GAAE;AACR,aAAK;AACL,YAAI,MAAM,GAAG;AACT,cAAI,IAAI,IAAI;AAAA,QAChB,OAAO;AACH,cAAI,MAAM,KAAK;AAAE,gBAAI;AAAA,UAAG;AACxB,cAAI,IAAI,KAAK;AAAE,iBAAK;AAAA,UAAK;AACzB,cAAI,IAAI,GAAG;AAAE,iBAAK;AAAA,UAAK;AACvB,eAAK;AAEL,cAAIA,KAAI,QAAQ,CAAC;AACjB,cAAI,IAAI,IAAIA;AACZ,cAAI,IAAI,KAAK,IAAI;AACjB,cAAI,IAAI,KAAK,IAAI,IAAI;AACrB,cAAI,IAAI,KAAK,IAAI,KAAK,IAAI;AAE1B,kBAAQA,IAAG;AAAA,YACP,KAAK;AAAG,cAAC,SAAS,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC;AAAI;AAAA,YAC3E,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,YACnF,KAAK;AAAG,cAAC,WAAW,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC;AAAI;AAAA,UACvF;AAAA,QACJ;AACA,eAAO,CAAC,GAAE,GAAE,GAAE,KAAK,SAAS,IAAE,KAAK,CAAC,IAAE,CAAC;AAAA,MAC3C;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,UAAU;AAEd,cAAQ,UAAU,MAAM,WAAW;AAC/B,eAAO,QAAQ,KAAK,IAAI;AAAA,MAC5B;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AAErB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,KAAK;AAC3B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,eAAe;AAAA;AAAA,QAEf,IAAI;AAAA;AAAA,QAGJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QAEJ,IAAI;AAAA;AAAA,QACJ,IAAI;AAAA;AAAA,QACJ,IAAI;AAAA;AAAA,QACJ,IAAI;AAAA;AAAA,MACR;AAEA,UAAI,kBAAkB;AACtB,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,KAAK;AAEjB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,QAAQ,QAAQ,GAAE,GAAE,CAAC;AACzB,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,IAAI;AAClB,eAAO,CAAC,IAAI,IAAI,IAAI,GAAG,OAAO,IAAI,IAAI,OAAO,IAAI,EAAE;AAAA,MACvD;AAEA,UAAI,UAAU,SAAU,GAAG;AACvB,aAAK,KAAK,QAAQ,SAAS;AAAE,iBAAO,IAAI;AAAA,QAAO;AAC/C,eAAO,OAAO,IAAI,SAAS,OAAO,GAAG;AAAA,MACzC;AAEA,UAAI,UAAU,SAAU,GAAG;AACvB,YAAI,IAAI,gBAAgB,IAAI;AAAE,iBAAO,MAAM,GAAG,IAAI,CAAC;AAAA,QAAG;AACtD,eAAO,IAAI,gBAAgB,KAAK,gBAAgB;AAAA,MACpD;AAEA,UAAI,UAAU,SAAU,GAAE,GAAE,GAAG;AAC3B,YAAI,QAAQ,CAAC;AACb,YAAI,QAAQ,CAAC;AACb,YAAI,QAAQ,CAAC;AACb,YAAI,IAAI,SAAS,YAAY,IAAI,YAAY,IAAI,YAAY,KAAK,gBAAgB,EAAE;AACpF,YAAI,IAAI,SAAS,YAAY,IAAI,YAAY,IAAI,WAAY,KAAK,gBAAgB,EAAE;AACpF,YAAI,IAAI,SAAS,YAAY,IAAI,WAAY,IAAI,YAAY,KAAK,gBAAgB,EAAE;AACpF,eAAO,CAAC,GAAE,GAAE,CAAC;AAAA,MACjB;AAEA,UAAI,YAAY;AAEhB,UAAI,kBAAkB;AACtB,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,KAAK;AAOjB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,GAAE,GAAE,GAAG,GAAE,GAAE;AAEf,aAAK,IAAI,MAAM;AACf,YAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI;AAC3B,YAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI;AAE3B,YAAI,gBAAgB,KAAK,QAAQ,CAAC;AAClC,YAAI,gBAAgB,KAAK,QAAQ,CAAC;AAClC,YAAI,gBAAgB,KAAK,QAAQ,CAAC;AAElC,YAAI,QAAQ,YAAY,IAAI,YAAY,IAAI,YAAY,CAAC;AACzD,YAAI,QAAQ,YAAa,IAAI,YAAY,IAAI,WAAY,CAAC;AAC1D,aAAK,QAAQ,YAAY,IAAI,YAAY,IAAI,YAAY,CAAC;AAE1D,eAAO,CAAC,GAAE,GAAE,IAAG,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,MAChD;AAEA,UAAI,UAAU,SAAU,GAAG;AACvB,eAAO,OAAO,KAAK,SAAU,QAAQ,IAAI,QAAQ,MAAM,GAAG,IAAI,GAAG,IAAI;AAAA,MACzE;AAEA,UAAI,UAAU,SAAU,GAAG;AACvB,eAAO,IAAI,gBAAgB,KAAK,IAAI,IAAI,IAAI,gBAAgB,MAAM,IAAI,gBAAgB;AAAA,MAC1F;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,YAAY;AAEhB,cAAQ,UAAU,MAAM,WAAW;AAC/B,eAAO,UAAU,KAAK,IAAI;AAAA,MAC9B;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AAErB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,KAAK;AAC3B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU,MAAM;AACpB,UAAI,SAAS,KAAK;AAClB,UAAI,UAAU,KAAK;AACnB,UAAI,UAAU,KAAK;AAEnB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,OAAO,IAAI,IAAI,IAAI,CAAC;AAC5B,YAAI,KAAK,QAAQ,GAAG,CAAC,IAAI,UAAU,OAAO;AAC1C,YAAI,QAAQ,IAAE,GAAK,MAAM,GAAG;AAAE,cAAI,OAAO;AAAA,QAAK;AAC9C,eAAO,CAAC,GAAG,GAAG,CAAC;AAAA,MACnB;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU;AACd,UAAI,YAAY;AAEhB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,QAAQ,QAAQ,GAAE,GAAE,CAAC;AACzB,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,KAAK,MAAM,CAAC;AAChB,eAAO,UAAU,GAAE,GAAE,EAAE;AAAA,MAC3B;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU,MAAM;AACpB,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK;AAEjB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAS7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,MAAM,CAAC,GAAG;AAAE,cAAI;AAAA,QAAG;AACvB,YAAI,IAAI;AACR,eAAO,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAAA,MACzC;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,YAAY;AAChB,UAAI,UAAU;AAEd,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,MAAM,UAAW,GAAE,GAAE,CAAC;AAC1B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,QAAQ,QAAS,GAAE,GAAE,EAAE;AAC3B,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,eAAO,CAAC,GAAG,GAAG,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,MAClD;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU;AAEd,UAAI,UAAU,WAAY;AACtB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK,EAAE,QAAQ;AACxC,eAAO,QAAQ,MAAM,QAAQ,GAAG;AAAA,MACpC;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,UAAU;AAEd,cAAQ,UAAU,MAAM,WAAW;AAAE,eAAO,QAAQ,KAAK,IAAI;AAAA,MAAG;AAChE,cAAQ,UAAU,MAAM,WAAW;AAAE,eAAO,QAAQ,KAAK,IAAI,EAAE,QAAQ;AAAA,MAAG;AAE1E,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AACA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AACrB,cAAQ,OAAO,MAAM;AAErB,OAAC,OAAM,KAAK,EAAE,QAAQ,SAAU,GAAG;AAAE,eAAO,QAAQ,WAAW,KAAK;AAAA,UAChE,GAAG;AAAA,UACH,MAAM,WAAY;AACd,gBAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,mBAAQ;AAAQ,mBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,mBAAO,SAAS,MAAM,CAAC;AACvB,gBAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ,CAAC;AAAA,MAAG,CAAC;AAQL,UAAI,WAAW;AAAA,QACX,WAAW;AAAA,QACX,cAAc;AAAA,QACd,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,gBAAgB;AAAA,QAChB,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,WAAW;AAAA,QACX,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,SAAS;AAAA,QACT,MAAM;AAAA,QACN,UAAU;AAAA,QACV,UAAU;AAAA,QACV,eAAe;AAAA,QACf,UAAU;AAAA,QACV,WAAW;AAAA,QACX,UAAU;AAAA,QACV,WAAW;AAAA,QACX,aAAa;AAAA,QACb,gBAAgB;AAAA,QAChB,YAAY;AAAA,QACZ,YAAY;AAAA,QACZ,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,aAAa;AAAA,QACb,SAAS;AAAA,QACT,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,aAAa;AAAA,QACb,aAAa;AAAA,QACb,SAAS;AAAA,QACT,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,MAAM;AAAA,QACN,WAAW;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,QACV,SAAS;AAAA,QACT,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,eAAe;AAAA,QACf,WAAW;AAAA,QACX,cAAc;AAAA,QACd,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,gBAAgB;AAAA,QAChB,sBAAsB;AAAA,QACtB,WAAW;AAAA,QACX,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,WAAW;AAAA,QACX,aAAa;AAAA,QACb,eAAe;AAAA,QACf,cAAc;AAAA,QACd,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,gBAAgB;AAAA,QAChB,aAAa;AAAA,QACb,MAAM;AAAA,QACN,WAAW;AAAA,QACX,OAAO;AAAA,QACP,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,kBAAkB;AAAA,QAClB,YAAY;AAAA,QACZ,cAAc;AAAA,QACd,cAAc;AAAA,QACd,gBAAgB;AAAA,QAChB,iBAAiB;AAAA,QACjB,mBAAmB;AAAA,QACnB,iBAAiB;AAAA,QACjB,iBAAiB;AAAA,QACjB,cAAc;AAAA,QACd,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,aAAa;AAAA,QACb,MAAM;AAAA,QACN,SAAS;AAAA,QACT,OAAO;AAAA,QACP,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,eAAe;AAAA,QACf,WAAW;AAAA,QACX,eAAe;AAAA,QACf,eAAe;AAAA,QACf,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,SAAS;AAAA,QACT,eAAe;AAAA,QACf,KAAK;AAAA,QACL,WAAW;AAAA,QACX,WAAW;AAAA,QACX,aAAa;AAAA,QACb,QAAQ;AAAA,QACR,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,UAAU;AAAA,QACV,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS;AAAA,QACT,WAAW;AAAA,QACX,WAAW;AAAA,QACX,WAAW;AAAA,QACX,MAAM;AAAA,QACN,aAAa;AAAA,QACb,WAAW;AAAA,QACX,KAAK;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT,QAAQ;AAAA,QACR,WAAW;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,QAAQ;AAAA,QACR,aAAa;AAAA,MACjB;AAEA,UAAI,WAAW;AAEf,UAAI,UAAU;AACd,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AAEnB,UAAI,SAAS;AACb,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,cAAQ,UAAU,OAAO,WAAW;AAChC,YAAI,MAAM,QAAQ,KAAK,MAAM,KAAK;AAClC,iBAASA,KAAI,GAAGE,QAAO,OAAO,KAAK,MAAM,GAAGF,KAAIE,MAAK,QAAQF,MAAK,GAAG;AACjE,cAAI,IAAIE,MAAKF,EAAC;AAEd,cAAI,OAAO,CAAC,MAAM,KAAK;AAAE,mBAAO,EAAE,YAAY;AAAA,UAAG;AAAA,QACrD;AACA,eAAO;AAAA,MACX;AAEA,cAAQ,OAAO,QAAQ,SAAUK,OAAM;AACnC,QAAAA,QAAOA,MAAK,YAAY;AACxB,YAAI,OAAOA,KAAI,GAAG;AAAE,iBAAO,QAAQ,OAAOA,KAAI,CAAC;AAAA,QAAG;AAClD,cAAM,IAAI,MAAM,yBAAuBA,KAAI;AAAA,MAC/C;AAEA,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,SAAU,GAAG;AACf,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU,SAAS;AACxC,iBAAQ,QAAQ;AAAI,iBAAM,GAAI,IAAI,UAAW,MAAM,CAAE;AAErD,cAAI,CAAC,KAAK,UAAU,OAAO,CAAC,MAAM,YAAY,OAAO,EAAE,YAAY,CAAC,GAAG;AACnE,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AAErB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,gBAAQ,KAAK,OAAO,KAAK,KAAK;AAAA,MAClC;AAEA,UAAI,YAAY;AAEhB,UAAI,SAAS,MAAM;AAEnB,UAAI,UAAU,SAAUC,MAAK;AACzB,YAAI,OAAOA,IAAG,KAAK,YAAYA,QAAO,KAAKA,QAAO,UAAU;AACxD,cAAI,IAAIA,QAAO;AACf,cAAI,IAAKA,QAAO,IAAK;AACrB,cAAI,IAAIA,OAAM;AACd,iBAAO,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,QACnB;AACA,cAAM,IAAI,MAAM,wBAAsBA,IAAG;AAAA,MAC7C;AAEA,UAAI,YAAY;AAEhB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AAEnB,UAAI,UAAU;AAEd,cAAQ,UAAU,MAAM,WAAW;AAC/B,eAAO,QAAQ,KAAK,IAAI;AAAA,MAC5B;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM;AAErB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,cAAI,KAAK,WAAW,KAAK,OAAO,KAAK,CAAC,CAAC,MAAM,YAAY,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,UAAU;AAC1F,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AACd,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,UAAU,KAAK;AAEnB,cAAQ,UAAU,MAAM,SAASC,MAAK;AAClC,YAAKA,SAAQ;AAAS,UAAAA,OAAI;AAE1B,YAAIA,SAAQ,OAAO;AAAE,iBAAO,KAAK,KAAK,MAAM,GAAE,CAAC;AAAA,QAAG;AAClD,eAAO,KAAK,KAAK,MAAM,GAAE,CAAC,EAAE,IAAI,OAAO;AAAA,MAC3C;AAEA,cAAQ,UAAU,OAAO,SAASA,MAAK;AACnC,YAAKA,SAAQ;AAAS,UAAAA,OAAI;AAE1B,eAAO,KAAK,KAAK,MAAM,GAAE,CAAC,EAAE,IAAI,SAAU,GAAEP,IAAG;AAC3C,iBAAOA,KAAE,IAAKO,SAAQ,QAAQ,IAAI,QAAQ,CAAC,IAAK;AAAA,QACpD,CAAC;AAAA,MACL;AAEA,eAAS,MAAM,WAAY;AACvB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,KAAK,CAAC,CAAE;AAAA,MACxF;AAEA,cAAQ,OAAO,MAAM,WAAY;AAC7B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,OAAO,SAAS,MAAM,MAAM;AAChC,YAAI,KAAK,CAAC,MAAM,QAAW;AAAE,eAAK,CAAC,IAAI;AAAA,QAAG;AAC1C,eAAO;AAAA,MACX;AAEA,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,MAAM;AAC5B,cAAI,OAAO,IAAI,MAAM,YAAY,KAAK,WAAW,KAC7C,KAAK,WAAW,KAAK,OAAO,KAAK,CAAC,CAAC,KAAK,YAAY,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,IAAI;AACnF,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAOD,UAAI,QAAQ,KAAK;AAEjB,UAAI,oBAAoB,SAAU,QAAQ;AACtC,YAAI,OAAO,SAAS;AACpB,YAAI,GAAE,GAAE;AACR,YAAI,OAAO,IAAI;AACX,cAAI;AACJ,cAAI,OAAO,IAAI,IAAI,sBAAsB,uBAAuB,IAAI,OAAK,KAAK,qBAAqB,MAAM,CAAC;AAC1G,cAAI,OAAO,KAAK,IAAI,sBAAsB,sBAAsB,IAAI,OAAK,MAAM,qBAAqB,MAAM,CAAC;AAAA,QAC/G,OAAO;AACH,cAAI,qBAAqB,qBAAqB,IAAI,OAAK,MAAM,oBAAoB,MAAM,CAAC;AACxF,cAAI,oBAAoB,uBAAuB,IAAI,OAAK,MAAM,mBAAmB,MAAM,CAAC;AACxF,cAAI;AAAA,QACR;AACA,eAAO,CAAC,GAAE,GAAE,GAAE,CAAC;AAAA,MACnB;AAEA,UAAI,oBAAoB;AAOxB,UAAI,kBAAkB;AACtB,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,KAAK;AAEjB,UAAI,oBAAoB,WAAY;AAChC,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAIR,OAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAIA,KAAI,CAAC,GAAG,IAAIA,KAAI,CAAC;AACzB,YAAI,UAAU;AACd,YAAI,UAAU;AACd,YAAI,MAAM;AACV,YAAI;AACJ,eAAO,UAAU,UAAU,KAAK;AAC5B,kBAAQ,UAAU,WAAW;AAC7B,cAAI,QAAQ,gBAAgB,IAAI;AAChC,cAAK,MAAM,CAAC,IAAI,MAAM,CAAC,KAAO,IAAI,GAAI;AAClC,sBAAU;AAAA,UACd,OAAO;AACH,sBAAU;AAAA,UACd;AAAA,QACJ;AACA,eAAO,MAAM,IAAI;AAAA,MACrB;AAEA,UAAI,oBAAoB;AAExB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,kBAAkB;AAEtB,cAAQ,UAAU,OAClB,QAAQ,UAAU,SAClB,QAAQ,UAAU,cAAc,WAAW;AACvC,eAAO,gBAAgB,KAAK,IAAI;AAAA,MACpC;AAEA,eAAS,OACT,SAAS,SACT,SAAS,cAAc,WAAY;AAC/B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,MAAM,CAAC,CAAE;AAAA,MACzF;AAEA,cAAQ,OAAO,OACf,QAAQ,OAAO,SACf,QAAQ,OAAO,cAAc;AAE7B,UAAI,WAAW,MAAM;AACrB,UAAI,OAAO,KAAK;AAChB,UAAI,QAAQ,KAAK;AACjB,UAAI,SAAS,KAAK;AAElB,UAAI,cAAc,WAAY;AAC1B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAI7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,QAAQ,CAAC,SAAS,IAAI,GAAG,GAAG,SAAS,IAAI,GAAG,GAAG,SAAS,IAAI,GAAG,CAAC;AACpE,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,IAAI,KAAK,eAAe,KAAK,eAAe,KAAK,eAAe,EAAE;AACtE,YAAI,IAAI,KAAK,eAAe,KAAK,eAAe,KAAK,eAAe,EAAE;AACtE,YAAI,IAAI,KAAK,eAAe,KAAK,eAAe,KAAK,eAAe,EAAE;AAEtE,eAAO;AAAA,UACH,eAAe,IAAI,cAAc,IAAI,eAAe;AAAA,UACpD,eAAe,IAAI,cAAc,IAAI,eAAe;AAAA,UACpD,eAAe,IAAI,eAAe,IAAI,cAAc;AAAA,QACxD;AAAA,MACJ;AAEA,UAAI,cAAc;AAElB,eAAS,SAAS,GAAG;AACjB,YAAIS,OAAM,KAAK,IAAI,CAAC;AACpB,YAAIA,OAAM,SAAS;AACf,iBAAO,IAAI;AAAA,QACf;AACA,gBAAQ,OAAO,CAAC,KAAK,KAAK,OAAOA,OAAM,SAAS,OAAO,GAAG;AAAA,MAC9D;AAEA,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,KAAK;AACjB,UAAI,OAAO,KAAK;AAOhB,UAAI,cAAc,WAAY;AAC1B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AAEd,YAAI,IAAI,MAAM,IAAI,eAAe,IAAI,eAAe,GAAG,CAAC;AACxD,YAAI,IAAI,MAAM,IAAI,eAAe,IAAI,eAAe,GAAG,CAAC;AACxD,YAAI,IAAI,MAAM,IAAI,eAAe,IAAI,cAAc,GAAG,CAAC;AAEvD,eAAO;AAAA,UACH,MAAM,SAAS,eAAgB,IAAI,eAAe,IAAI,eAAe,CAAC;AAAA,UACtE,MAAM,SAAS,gBAAgB,IAAI,eAAe,IAAI,eAAe,CAAC;AAAA,UACtE,MAAM,SAAS,gBAAgB,IAAI,eAAe,IAAI,cAAc,CAAC;AAAA,UACrE,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI;AAAA,QAChC;AAAA,MACJ;AAEA,UAAI,cAAc;AAElB,eAAS,SAAS,GAAG;AACjB,YAAIA,OAAM,KAAK,IAAI,CAAC;AACpB,YAAIA,OAAM,UAAW;AACjB,kBAAQ,KAAK,CAAC,KAAK,MAAM,QAAQ,MAAMA,MAAK,IAAI,GAAG,IAAI;AAAA,QAC3D;AACA,eAAO,IAAI;AAAA,MACf;AAEA,UAAI,WAAW,MAAM;AACrB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,UAAU;AAEd,UAAI,cAAc;AAElB,cAAQ,UAAU,QAAQ,WAAY;AAClC,eAAO,YAAY,KAAK,IAAI;AAAA,MAChC;AAEA,eAAS,QAAQ,WAAY;AACzB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,OAAO,CAAC,CAAE;AAAA,MAC1F;AAEA,cAAQ,OAAO,QAAQ;AAEvB,cAAQ,WAAW,KAAK;AAAA,QACpB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,SAAS,MAAM,OAAO;AAC7B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,WAAW,MAAM;AACrB,UAAI,YAAY;AAChB,UAAI,UAAU;AAEd,UAAI,cAAc,WAAY;AAC1B,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI,MAAM,SAAS,MAAM,KAAK;AAC9B,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,QAAQ,UAAU,GAAG,GAAG,CAAC;AAC7B,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,KAAK,MAAM,CAAC;AAChB,eAAO,QAAQ,GAAG,GAAG,EAAE;AAAA,MAC3B;AAEA,UAAI,cAAc;AAElB,UAAI,WAAW,MAAM;AACrB,UAAI,UAAU;AACd,UAAI,YAAY;AAEhB,UAAI,YAAY,WAAY;AACxB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,SAAS,MAAM,KAAK;AAC3B,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,MAAM,QAAQ,GAAG,GAAG,CAAC;AACzB,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,IAAI,IAAI,CAAC;AACb,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,QAAQ,UAAU,GAAG,GAAG,EAAE;AAC9B,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,YAAI,IAAI,MAAM,CAAC;AACf,eAAO,CAAC,GAAG,GAAG,GAAG,KAAK,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC;AAAA,MAClD;AAEA,UAAI,cAAc;AAElB,UAAI,SAAS,MAAM;AACnB,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW;AACf,UAAI,UAAU;AACd,UAAI,QAAQ;AAEZ,UAAI,YAAY;AAEhB,cAAQ,UAAU,QAAQ,WAAY;AAClC,eAAO,UAAU,KAAK,IAAI;AAAA,MAC9B;AAEA,eAAS,QAAQ,WAAY;AACzB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,eAAO,KAAK,SAAS,UAAU,KAAK,MAAO,SAAS,CAAE,IAAK,EAAE,OAAQ,MAAM,CAAC,OAAO,CAAC,CAAE;AAAA,MAC1F;AAEA,YAAM,OAAO,QAAQ;AAErB,YAAM,WAAW,KAAK;AAAA,QAClB,GAAG;AAAA,QACH,MAAM,WAAY;AACd,cAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,iBAAQ;AAAQ,iBAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,iBAAO,OAAO,MAAM,OAAO;AAC3B,cAAI,OAAO,IAAI,MAAM,WAAW,KAAK,WAAW,GAAG;AAC/C,mBAAO;AAAA,UACX;AAAA,QACJ;AAAA,MACJ,CAAC;AAED,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AAEnB,cAAQ,UAAU,QAAQ,SAAS,GAAG,QAAQ;AAC1C,YAAK,WAAW;AAAS,mBAAO;AAEhC,YAAI,MAAM,UAAa,OAAO,CAAC,MAAM,UAAU;AAC3C,cAAI,QAAQ;AACR,iBAAK,KAAK,CAAC,IAAI;AACf,mBAAO;AAAA,UACX;AACA,iBAAO,IAAI,QAAQ,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK;AAAA,QAC3E;AACA,eAAO,KAAK,KAAK,CAAC;AAAA,MACtB;AAEA,UAAI,UAAU;AAEd,cAAQ,UAAU,UAAU,WAAW;AACnC,eAAO,KAAK,KAAK,YAAY;AAAA,MACjC;AAEA,UAAI,UAAU;AACd,UAAI,kBAAkB;AAEtB,cAAQ,UAAU,SAAS,SAAS,QAAQ;AAC3C,YAAK,WAAW;AAAS,mBAAO;AAEhC,YAAI,KAAK;AACT,YAAIC,OAAM,GAAG,IAAI;AACjB,QAAAA,KAAI,CAAC,KAAK,gBAAgB,KAAK;AAC/B,eAAO,IAAI,QAAQA,MAAK,KAAK,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI;AAAA,MACtD;AAEA,cAAQ,UAAU,WAAW,SAAS,QAAQ;AAC7C,YAAK,WAAW;AAAS,mBAAO;AAEhC,eAAO,KAAK,OAAO,CAAC,MAAM;AAAA,MAC3B;AAEA,cAAQ,UAAU,SAAS,QAAQ,UAAU;AAC7C,cAAQ,UAAU,WAAW,QAAQ,UAAU;AAE/C,UAAI,UAAU;AAEd,cAAQ,UAAU,MAAM,SAAU,IAAI;AAClC,YAAI,MAAM,GAAG,MAAM,GAAG;AACtB,YAAI,OAAO,IAAI,CAAC;AAChB,YAAI,UAAU,IAAI,CAAC;AACnB,YAAI,MAAM,KAAK,IAAI,EAAE;AACrB,YAAI,SAAS;AACT,cAAIT,KAAI,KAAK,QAAQ,OAAO,KAAK,KAAK,OAAO,GAAG,CAAC,MAAM,OAAO,IAAI;AAClE,cAAIA,KAAI,IAAI;AAAE,mBAAO,IAAIA,EAAC;AAAA,UAAG;AAC7B,gBAAM,IAAI,MAAO,qBAAqB,UAAU,cAAc,IAAK;AAAA,QACvE,OAAO;AACH,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AACnB,UAAI,QAAQ,KAAK;AAEjB,UAAI,MAAM;AACV,UAAI,WAAW;AAEf,cAAQ,UAAU,YAAY,SAAS,KAAK;AACxC,YAAI,QAAQ,UAAa,OAAO,GAAG,MAAM,UAAU;AAC/C,cAAI,QAAQ,GAAG;AAEX,mBAAO,IAAI,QAAQ,CAAC,GAAE,GAAE,GAAE,KAAK,KAAK,CAAC,CAAC,GAAG,KAAK;AAAA,UAClD;AACA,cAAI,QAAQ,GAAG;AAEX,mBAAO,IAAI,QAAQ,CAAC,KAAI,KAAI,KAAI,KAAK,KAAK,CAAC,CAAC,GAAG,KAAK;AAAA,UACxD;AAEA,cAAI,UAAU,KAAK,UAAU;AAC7B,cAAI,OAAO;AACX,cAAI,WAAW;AAEf,cAAI,OAAO,SAAU,KAAK,MAAM;AAC5B,gBAAI,MAAM,IAAI,YAAY,MAAM,KAAK,IAAI;AACzC,gBAAI,KAAK,IAAI,UAAU;AACvB,gBAAI,KAAK,IAAI,MAAM,EAAE,IAAI,OAAO,CAAC,YAAY;AAEzC,qBAAO;AAAA,YACX;AACA,mBAAO,KAAK,MAAM,KAAK,KAAK,GAAG,IAAI,KAAK,KAAK,IAAI;AAAA,UACrD;AAEA,cAAID,QAAO,UAAU,MAAM,KAAK,IAAI,QAAQ,CAAC,GAAE,GAAE,CAAC,CAAC,GAAG,IAAI,IAAI,KAAK,MAAM,IAAI,QAAQ,CAAC,KAAI,KAAI,GAAG,CAAC,CAAC,GAAG,IAAI;AAC1G,iBAAO,IAAI,QAAQA,KAAI,OAAQ,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;AAAA,QAClD;AACA,eAAO,cAAc,MAAM,QAAS,KAAK,KAAM,MAAM,GAAE,CAAC,CAAC;AAAA,MAC7D;AAGA,UAAI,gBAAgB,SAAU,GAAE,GAAE,GAAG;AAGjC,YAAI,YAAY,CAAC;AACjB,YAAI,YAAY,CAAC;AACjB,YAAI,YAAY,CAAC;AACjB,eAAO,SAAS,IAAI,SAAS,IAAI,SAAS;AAAA,MAC9C;AAEA,UAAI,cAAc,SAAU,GAAG;AAC3B,aAAK;AACL,eAAO,KAAK,UAAU,IAAE,QAAQ,OAAO,IAAE,SAAO,OAAO,GAAG;AAAA,MAC9D;AAEA,UAAI,iBAAiB,CAAC;AAEtB,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AACnB,UAAI,eAAe;AAEnB,UAAI,QAAQ,SAAU,MAAM,MAAM,GAAG;AACjC,YAAK,MAAM;AAAS,cAAE;AACtB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU,SAAS;AACxC,eAAQ,QAAQ;AAAI,eAAM,GAAI,IAAI,UAAW,MAAM,CAAE;AAErD,YAAI,OAAO,KAAK,CAAC,KAAK;AACtB,YAAI,CAAC,aAAa,IAAI,KAAK,CAAC,KAAK,QAAQ;AAErC,iBAAO,OAAO,KAAK,YAAY,EAAE,CAAC;AAAA,QACtC;AACA,YAAI,CAAC,aAAa,IAAI,GAAG;AACrB,gBAAM,IAAI,MAAO,wBAAwB,OAAO,iBAAkB;AAAA,QACtE;AACA,YAAI,OAAO,IAAI,MAAM,UAAU;AAAE,iBAAO,IAAI,QAAQ,IAAI;AAAA,QAAG;AAC3D,YAAI,OAAO,IAAI,MAAM,UAAU;AAAE,iBAAO,IAAI,QAAQ,IAAI;AAAA,QAAG;AAC3D,eAAO,aAAa,IAAI,EAAE,MAAM,MAAM,CAAC,EAClC,MAAM,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,MAAM,EAAE;AAAA,MAC/D;AAEA,UAAI,UAAU;AACd,UAAI,MAAM;AAEV,cAAQ,UAAU,MAClB,QAAQ,UAAU,cAAc,SAAS,MAAM,GAAG;AACjD,YAAK,MAAM;AAAS,cAAE;AACtB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU,SAAS;AACxC,eAAQ,QAAQ;AAAI,eAAM,GAAI,IAAI,UAAW,MAAM,CAAE;AAErD,eAAO,IAAI,MAAM,QAAQ,CAAE,MAAM,MAAM,CAAE,EAAE,OAAQ,IAAK,CAAC;AAAA,MAC1D;AAEA,UAAI,UAAU;AAEd,cAAQ,UAAU,cAAc,SAAS,QAAQ;AAChD,YAAK,WAAW;AAAS,mBAAO;AAEhC,YAAIA,OAAM,KAAK;AACf,YAAI,IAAIA,KAAI,CAAC;AACb,YAAI,QAAQ;AACX,eAAK,OAAO,CAACA,KAAI,CAAC,IAAE,GAAGA,KAAI,CAAC,IAAE,GAAGA,KAAI,CAAC,IAAE,GAAG,CAAC;AAC5C,iBAAO;AAAA,QACR,OAAO;AACN,iBAAO,IAAI,QAAQ,CAACA,KAAI,CAAC,IAAE,GAAGA,KAAI,CAAC,IAAE,GAAGA,KAAI,CAAC,IAAE,GAAG,CAAC,GAAG,KAAK;AAAA,QAC5D;AAAA,MACD;AAEA,UAAI,UAAU;AACd,UAAI,gBAAgB;AAEpB,cAAQ,UAAU,WAAW,SAAS,QAAQ;AAC7C,YAAK,WAAW;AAAS,mBAAO;AAEhC,YAAI,KAAK;AACT,YAAIW,OAAM,GAAG,IAAI;AACjB,QAAAA,KAAI,CAAC,KAAK,cAAc,KAAK;AAC7B,YAAIA,KAAI,CAAC,IAAI,GAAG;AAAE,UAAAA,KAAI,CAAC,IAAI;AAAA,QAAG;AAC9B,eAAO,IAAI,QAAQA,MAAK,KAAK,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI;AAAA,MACtD;AAEA,cAAQ,UAAU,aAAa,SAAS,QAAQ;AAC/C,YAAK,WAAW;AAAS,mBAAO;AAEhC,eAAO,KAAK,SAAS,CAAC,MAAM;AAAA,MAC7B;AAEA,UAAI,UAAU;AACd,UAAI,SAAS,MAAM;AAEnB,cAAQ,UAAU,MAAM,SAAU,IAAI,OAAO,QAAQ;AACjD,YAAK,WAAW;AAAS,mBAAS;AAElC,YAAI,MAAM,GAAG,MAAM,GAAG;AACtB,YAAI,OAAO,IAAI,CAAC;AAChB,YAAI,UAAU,IAAI,CAAC;AACnB,YAAI,MAAM,KAAK,IAAI,EAAE;AACrB,YAAI,SAAS;AACT,cAAIV,KAAI,KAAK,QAAQ,OAAO,KAAK,KAAK,OAAO,GAAG,CAAC,MAAM,OAAO,IAAI;AAClE,cAAIA,KAAI,IAAI;AACR,gBAAI,OAAO,KAAK,KAAK,UAAU;AAC3B,sBAAQ,MAAM,OAAO,CAAC,GAAG;AAAA,gBACrB,KAAK;AACD,sBAAIA,EAAC,KAAK,CAAC;AACX;AAAA,gBACJ,KAAK;AACD,sBAAIA,EAAC,KAAK,CAAC;AACX;AAAA,gBACJ,KAAK;AACD,sBAAIA,EAAC,KAAK,CAAC,MAAM,OAAO,CAAC;AACzB;AAAA,gBACJ,KAAK;AACD,sBAAIA,EAAC,KAAK,CAAC,MAAM,OAAO,CAAC;AACzB;AAAA,gBACJ;AACI,sBAAIA,EAAC,IAAI,CAAC;AAAA,cAClB;AAAA,YACJ,WAAW,OAAO,KAAK,MAAM,UAAU;AACnC,kBAAIA,EAAC,IAAI;AAAA,YACb,OAAO;AACH,oBAAM,IAAI,MAAM,iCAAiC;AAAA,YACrD;AACA,gBAAI,MAAM,IAAI,QAAQ,KAAK,IAAI;AAC/B,gBAAI,QAAQ;AACR,mBAAK,OAAO,IAAI;AAChB,qBAAO;AAAA,YACX;AACA,mBAAO;AAAA,UACX;AACA,gBAAM,IAAI,MAAO,qBAAqB,UAAU,cAAc,IAAK;AAAA,QACvE,OAAO;AACH,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,UAAI,UAAU;AAEd,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAC/B,YAAI,OAAO,KAAK;AAChB,YAAI,OAAO,KAAK;AAChB,eAAO,IAAI;AAAA,UACP,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAE,KAAK,CAAC;AAAA,UAC7B,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAE,KAAK,CAAC;AAAA,UAC7B,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAE,KAAK,CAAC;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAGA,qBAAe,MAAM;AAErB,UAAI,UAAU;AACd,UAAI,SAAS,KAAK;AAClB,UAAI,QAAQ,KAAK;AAEjB,UAAI,OAAO,SAAU,MAAM,MAAM,GAAG;AAChC,YAAI,MAAM,KAAK;AACf,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,QAAQ,KAAK;AACjB,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,KAAK,MAAM,CAAC;AAChB,eAAO,IAAI;AAAA,UACP,OAAO,MAAM,IAAG,CAAC,KAAK,IAAE,KAAK,MAAM,IAAG,CAAC,IAAI,CAAC;AAAA,UAC5C,OAAO,MAAM,IAAG,CAAC,KAAK,IAAE,KAAK,MAAM,IAAG,CAAC,IAAI,CAAC;AAAA,UAC5C,OAAO,MAAM,IAAG,CAAC,KAAK,IAAE,KAAK,MAAM,IAAG,CAAC,IAAI,CAAC;AAAA,UAC5C;AAAA,QACJ;AAAA,MACJ;AAGA,qBAAe,OAAO;AAEtB,UAAI,UAAU;AAEd,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAC/B,YAAI,OAAO,KAAK,IAAI;AACpB,YAAI,OAAO,KAAK,IAAI;AACpB,eAAO,IAAI;AAAA,UACP,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAE,KAAK,CAAC;AAAA,UAC7B,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAE,KAAK,CAAC;AAAA,UAC7B,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAE,KAAK,CAAC;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAGA,qBAAe,MAAM;AAErB,UAAI,UAAU;AAEd,UAAI,OAAO,SAAU,MAAM,MAAM,GAAG,GAAG;AACnC,YAAI,QAAQ;AAEZ,YAAI,MAAM;AACV,YAAI,MAAM,OAAO;AACb,iBAAO,KAAK,IAAI;AAChB,iBAAO,KAAK,IAAI;AAAA,QACpB,WAAW,MAAM,OAAO;AACpB,iBAAO,KAAK,IAAI;AAChB,iBAAO,KAAK,IAAI;AAAA,QACpB,WAAW,MAAM,OAAO;AACpB,iBAAO,KAAK,IAAI;AAChB,iBAAO,KAAK,IAAI;AAAA,QACpB,WAAW,MAAM,OAAO;AACpB,iBAAO,KAAK,IAAI;AAChB,iBAAO,KAAK,IAAI;AAAA,QACpB,WAAW,MAAM,SAAS,MAAM,OAAO;AACnC,cAAI;AACJ,iBAAO,KAAK,IAAI;AAChB,iBAAO,KAAK,IAAI;AAAA,QACpB,WAAW,MAAM,SAAS;AACtB,iBAAO,KAAK,MAAM,EAAE,QAAQ;AAC5B,iBAAO,KAAK,MAAM,EAAE,QAAQ;AAAA,QAChC;AAEA,YAAI,MAAM,MAAM,MAAM,MAAM,MAAM;AAClC,YAAI,EAAE,OAAO,GAAG,CAAC,MAAM,OAAO,MAAM,SAAS;AACzC,UAAC,SAAS,MAAM,OAAO,OAAO,CAAC,GAAG,OAAO,OAAO,CAAC,GAAG,OAAO,OAAO,CAAC;AACnE,UAAC,WAAW,MAAM,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC;AAAA,QAC/E;AAEA,YAAI,KAAK,KAAK,KAAK;AAEnB,YAAI,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG;AAE9B,cAAI,OAAO,QAAQ,OAAO,OAAO,KAAK;AAClC,iBAAK,QAAQ,OAAO;AAAA,UACxB,WAAW,OAAO,QAAQ,OAAO,OAAO,KAAK;AACzC,iBAAK,OAAO,MAAM;AAAA,UACtB,OAAO;AACH,iBAAK,OAAO;AAAA,UAChB;AACA,gBAAM,OAAO,IAAI;AAAA,QACrB,WAAW,CAAC,MAAM,IAAI,GAAG;AACrB,gBAAM;AACN,eAAK,QAAQ,KAAK,QAAQ,MAAM,KAAK,OAAO;AAAE,kBAAM;AAAA,UAAM;AAAA,QAC9D,WAAW,CAAC,MAAM,IAAI,GAAG;AACrB,gBAAM;AACN,eAAK,QAAQ,KAAK,QAAQ,MAAM,KAAK,OAAO;AAAE,kBAAM;AAAA,UAAM;AAAA,QAC9D,OAAO;AACH,gBAAM,OAAO;AAAA,QACjB;AAEA,YAAI,QAAQ,QAAW;AAAE,gBAAM,OAAO,KAAK,OAAO;AAAA,QAAO;AACzD,cAAM,OAAO,KAAK,OAAO;AACzB,eAAO,MAAM,UAAU,IAAI,QAAQ,CAAC,KAAK,KAAK,GAAG,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,KAAK,GAAG,GAAG,CAAC;AAAA,MAC3F;AAEA,UAAI,oBAAoB;AAExB,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAClC,eAAO,kBAAkB,MAAM,MAAM,GAAG,KAAK;AAAA,MAC9C;AAGA,qBAAe,MAAM;AACrB,qBAAe,MAAM;AAErB,UAAI,UAAU;AAEd,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAC/B,YAAI,KAAK,KAAK,IAAI;AAClB,YAAI,KAAK,KAAK,IAAI;AAClB,eAAO,IAAI,QAAQ,KAAK,KAAK,KAAG,KAAK,KAAK;AAAA,MAC9C;AAGA,qBAAe,MAAM;AAErB,UAAI,oBAAoB;AAExB,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAClC,eAAO,kBAAkB,MAAM,MAAM,GAAG,KAAK;AAAA,MAC9C;AAGA,qBAAe,MAAM;AAErB,UAAI,oBAAoB;AAExB,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAClC,eAAO,kBAAkB,MAAM,MAAM,GAAG,KAAK;AAAA,MAC9C;AAGA,qBAAe,MAAM;AAErB,UAAI,oBAAoB;AAExB,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAClC,eAAO,kBAAkB,MAAM,MAAM,GAAG,KAAK;AAAA,MAC9C;AAGA,qBAAe,MAAM;AAErB,UAAI,oBAAoB;AAExB,UAAI,MAAM,SAAU,MAAM,MAAM,GAAG;AAClC,eAAO,kBAAkB,MAAM,MAAM,GAAG,KAAK;AAAA,MAC9C;AAGA,qBAAe,MAAM;AAErB,UAAI,UAAU;AAEd,UAAI,QAAQ,SAAU,MAAM,MAAM,GAAG;AACjC,YAAI,OAAO,KAAK,MAAM;AACtB,YAAI,OAAO,KAAK,MAAM;AACtB,eAAO,IAAI;AAAA,UACP,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC;AAAA,UAC/B,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC;AAAA,UAC/B,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC;AAAA,UAC/B;AAAA,QACJ;AAAA,MACJ;AAGA,qBAAe,QAAQ;AAEvB,UAAI,kBAAkB;AAEtB,UAAI,QAAQ,SAAU,MAAM,MAAM,GAAG;AACjC,eAAO,gBAAgB,MAAM,MAAM,GAAG,OAAO;AAAA,MACjD;AAGA,qBAAe,QAAQ;AAEvB,UAAI,UAAU;AACd,UAAI,aAAa,MAAM;AACvB,UAAI,QAAQ,KAAK;AACjB,UAAI,SAAS,KAAK;AAClB,UAAI,OAAO,KAAK;AAChB,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK;AACjB,UAAI,UAAU,KAAK;AAEnB,UAAI,UAAU,SAAU,QAAQ,MAAM,SAAS;AAC3C,YAAK,SAAS;AAAS,iBAAK;AAC5B,YAAK,YAAY;AAAS,oBAAQ;AAElC,YAAI,IAAI,OAAO;AACf,YAAI,CAAC,SAAS;AAAE,oBAAU,MAAM,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,WAAY;AAAE,mBAAO;AAAA,UAAG,CAAC;AAAA,QAAG;AAEnF,YAAI,IAAI,IAAI,QAAQ,OAAO,SAAS,GAAG,GAAG;AAAE,iBAAO,IAAI;AAAA,QAAG,CAAC;AAC3D,gBAAQ,QAAQ,SAAU,GAAEA,IAAG;AAAE,kBAAQA,EAAC,KAAK;AAAA,QAAG,CAAC;AAEnD,iBAAS,OAAO,IAAI,SAAU,GAAG;AAAE,iBAAO,IAAI,QAAQ,CAAC;AAAA,QAAG,CAAC;AAC3D,YAAI,SAAS,QAAQ;AACjB,iBAAO,cAAc,QAAQ,OAAO;AAAA,QACxC;AACA,YAAI,QAAQ,OAAO,MAAM;AACzB,YAAI,MAAM,MAAM,IAAI,IAAI;AACxB,YAAI,MAAM,CAAC;AACX,YAAI,KAAK;AACT,YAAI,KAAK;AAET,iBAASA,KAAE,GAAGA,KAAE,IAAI,QAAQA,MAAK;AAC7B,cAAIA,EAAC,KAAK,IAAIA,EAAC,KAAK,KAAK,QAAQ,CAAC;AAClC,cAAI,KAAK,MAAM,IAAIA,EAAC,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC;AACvC,cAAI,KAAK,OAAOA,EAAC,MAAM,OAAO,CAAC,MAAM,IAAIA,EAAC,CAAC,GAAG;AAC1C,gBAAI,IAAI,IAAIA,EAAC,IAAI,MAAM;AACvB,kBAAM,MAAM,CAAC,IAAI,QAAQ,CAAC;AAC1B,kBAAM,MAAM,CAAC,IAAI,QAAQ,CAAC;AAAA,UAC9B;AAAA,QACJ;AAEA,YAAI,QAAQ,MAAM,MAAM,IAAI,QAAQ,CAAC;AACrC,eAAO,QAAQ,SAAU,GAAE,IAAI;AAC3B,cAAI,OAAO,EAAE,IAAI,IAAI;AACrB,mBAAS,EAAE,MAAM,IAAI,QAAQ,KAAG,CAAC;AACjC,mBAASA,KAAE,GAAGA,KAAE,IAAI,QAAQA,MAAK;AAC7B,gBAAI,CAAC,MAAM,KAAKA,EAAC,CAAC,GAAG;AACjB,kBAAIA,EAAC,KAAK,QAAQ,KAAG,CAAC;AACtB,kBAAI,KAAK,OAAOA,EAAC,MAAM,KAAK;AACxB,oBAAIW,KAAI,KAAKX,EAAC,IAAI,MAAM;AACxB,sBAAM,MAAMW,EAAC,IAAI,QAAQ,KAAG,CAAC;AAC7B,sBAAM,MAAMA,EAAC,IAAI,QAAQ,KAAG,CAAC;AAAA,cACjC,OAAO;AACH,oBAAIX,EAAC,KAAK,KAAKA,EAAC,IAAI,QAAQ,KAAG,CAAC;AAAA,cACpC;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ,CAAC;AAED,iBAASG,OAAI,GAAGA,OAAI,IAAI,QAAQA,QAAO;AACnC,cAAI,KAAK,OAAOA,IAAG,MAAM,KAAK;AAC1B,gBAAI,MAAM,QAAQ,KAAK,IAAIA,IAAG,GAAG,KAAK,IAAIA,IAAG,CAAC,IAAI,OAAO;AACzD,mBAAO,MAAM,GAAG;AAAE,qBAAO;AAAA,YAAK;AAC9B,mBAAO,OAAO,KAAK;AAAE,qBAAO;AAAA,YAAK;AACjC,gBAAIA,IAAG,IAAI;AAAA,UACf,OAAO;AACH,gBAAIA,IAAG,IAAI,IAAIA,IAAG,IAAE,IAAIA,IAAG;AAAA,UAC/B;AAAA,QACJ;AACA,iBAAS;AACT,eAAQ,IAAI,QAAQ,KAAK,IAAI,EAAG,MAAM,QAAQ,UAAU,IAAI,OAAO,IAAI;AAAA,MAC3E;AAGA,UAAI,gBAAgB,SAAU,QAAQ,SAAS;AAC3C,YAAI,IAAI,OAAO;AACf,YAAI,MAAM,CAAC,GAAE,GAAE,GAAE,CAAC;AAClB,iBAASH,KAAE,GAAGA,KAAI,OAAO,QAAQA,MAAK;AAClC,cAAI,MAAM,OAAOA,EAAC;AAClB,cAAI,IAAI,QAAQA,EAAC,IAAI;AACrB,cAAID,OAAM,IAAI;AACd,cAAI,CAAC,KAAK,MAAMA,KAAI,CAAC,GAAE,CAAC,IAAI;AAC5B,cAAI,CAAC,KAAK,MAAMA,KAAI,CAAC,GAAE,CAAC,IAAI;AAC5B,cAAI,CAAC,KAAK,MAAMA,KAAI,CAAC,GAAE,CAAC,IAAI;AAC5B,cAAI,CAAC,KAAKA,KAAI,CAAC,IAAI;AAAA,QACvB;AACA,YAAI,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC;AACtB,YAAI,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC;AACtB,YAAI,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC;AACtB,YAAI,IAAI,CAAC,IAAI,WAAW;AAAE,cAAI,CAAC,IAAI;AAAA,QAAG;AACtC,eAAO,IAAI,QAAQ,WAAW,GAAG,CAAC;AAAA,MACtC;AAMA,UAAI,WAAW;AACf,UAAI,SAAS,MAAM;AAEnB,UAAI,QAAQ,KAAK;AAEjB,UAAI,UAAU,SAAS,QAAQ;AAG3B,YAAI,QAAQ;AACZ,YAAI,SAAS,SAAS,MAAM;AAC5B,YAAI,UAAU;AAEd,YAAI,UAAU,CAAC,GAAG,CAAC;AACnB,YAAI,OAAO,CAAC;AACZ,YAAI,WAAW,CAAC,GAAE,CAAC;AACnB,YAAI,WAAW;AACf,YAAI,UAAU,CAAC;AACf,YAAI,OAAO;AACX,YAAI,OAAO;AACX,YAAI,OAAO;AACX,YAAI,oBAAoB;AACxB,YAAI,cAAc,CAAC;AACnB,YAAI,YAAY;AAChB,YAAI,SAAS;AAIb,YAAI,YAAY,SAASa,SAAQ;AAC7B,UAAAA,UAASA,WAAU,CAAC,QAAQ,MAAM;AAClC,cAAIA,WAAU,OAAOA,OAAM,MAAM,YAAY,SAAS,UAClD,SAAS,OAAOA,QAAO,YAAY,CAAC,GAAG;AACvC,YAAAA,UAAS,SAAS,OAAOA,QAAO,YAAY,CAAC;AAAA,UACjD;AACA,cAAI,OAAOA,OAAM,MAAM,SAAS;AAE5B,gBAAIA,QAAO,WAAW,GAAG;AACrB,cAAAA,UAAS,CAACA,QAAO,CAAC,GAAGA,QAAO,CAAC,CAAC;AAAA,YAClC;AAEA,YAAAA,UAASA,QAAO,MAAM,CAAC;AAEvB,qBAAS,IAAE,GAAG,IAAEA,QAAO,QAAQ,KAAK;AAChC,cAAAA,QAAO,CAAC,IAAI,SAASA,QAAO,CAAC,CAAC;AAAA,YAClC;AAEA,iBAAK,SAAS;AACd,qBAAS,MAAI,GAAG,MAAIA,QAAO,QAAQ,OAAO;AACtC,mBAAK,KAAK,OAAKA,QAAO,SAAO,EAAE;AAAA,YACnC;AAAA,UACJ;AACA,qBAAW;AACX,iBAAO,UAAUA;AAAA,QACrB;AAEA,YAAI,WAAW,SAAS,OAAO;AAC3B,cAAI,YAAY,MAAM;AAClB,gBAAI,IAAI,SAAS,SAAO;AACxB,gBAAIZ,KAAI;AACR,mBAAOA,KAAI,KAAK,SAAS,SAASA,EAAC,GAAG;AAClC,cAAAA;AAAA,YACJ;AACA,mBAAOA,KAAE;AAAA,UACb;AACA,iBAAO;AAAA,QACX;AAEA,YAAI,gBAAgB,SAAU,GAAG;AAAE,iBAAO;AAAA,QAAG;AAC7C,YAAI,aAAa,SAAU,GAAG;AAAE,iBAAO;AAAA,QAAG;AAc1C,YAAI,WAAW,SAAS,KAAK,WAAW;AACpC,cAAI,KAAK;AACT,cAAI,aAAa,MAAM;AAAE,wBAAY;AAAA,UAAO;AAC5C,cAAI,MAAM,GAAG,KAAM,QAAQ,MAAO;AAAE,mBAAO;AAAA,UAAQ;AACnD,cAAI,CAAC,WAAW;AACZ,gBAAI,YAAa,SAAS,SAAS,GAAI;AAEnC,kBAAI,IAAI,SAAS,GAAG;AACpB,kBAAI,KAAK,SAAS,SAAO;AAAA,YAC7B,WAAW,SAAS,MAAM;AAEtB,mBAAK,MAAM,SAAS,OAAO;AAAA,YAC/B,OAAO;AACH,kBAAI;AAAA,YACR;AAAA,UACJ,OAAO;AACH,gBAAI;AAAA,UACR;AAGA,cAAI,WAAW,CAAC;AAEhB,cAAI,CAAC,WAAW;AACZ,gBAAI,cAAc,CAAC;AAAA,UACvB;AAEA,cAAI,WAAW,GAAG;AAAE,gBAAI,MAAM,GAAG,MAAM;AAAA,UAAG;AAE1C,cAAI,SAAS,CAAC,IAAK,KAAK,IAAI,SAAS,CAAC,IAAI,SAAS,CAAC;AAEpD,cAAI,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,CAAC,CAAC;AAE9B,cAAI,IAAI,KAAK,MAAM,IAAI,GAAK;AAE5B,cAAI,aAAa,YAAY,CAAC,GAAG;AAC7B,kBAAM,YAAY,CAAC;AAAA,UACvB,OAAO;AACH,gBAAI,OAAO,OAAO,MAAM,SAAS;AAE7B,uBAASA,KAAE,GAAGA,KAAE,KAAK,QAAQA,MAAK;AAC9B,oBAAI,IAAI,KAAKA,EAAC;AACd,oBAAI,KAAK,GAAG;AACR,wBAAM,QAAQA,EAAC;AACf;AAAA,gBACJ;AACA,oBAAK,KAAK,KAAOA,OAAO,KAAK,SAAO,GAAK;AACrC,wBAAM,QAAQA,EAAC;AACf;AAAA,gBACJ;AACA,oBAAI,IAAI,KAAK,IAAI,KAAKA,KAAE,CAAC,GAAG;AACxB,uBAAK,IAAE,MAAI,KAAKA,KAAE,CAAC,IAAE;AACrB,wBAAM,SAAS,YAAY,QAAQA,EAAC,GAAG,QAAQA,KAAE,CAAC,GAAG,GAAG,KAAK;AAC7D;AAAA,gBACJ;AAAA,cACJ;AAAA,YACJ,WAAW,OAAO,OAAO,MAAM,YAAY;AACvC,oBAAM,QAAQ,CAAC;AAAA,YACnB;AACA,gBAAI,WAAW;AAAE,0BAAY,CAAC,IAAI;AAAA,YAAK;AAAA,UAC3C;AACA,iBAAO;AAAA,QACX;AAEA,YAAI,aAAa,WAAY;AAAE,iBAAO,cAAc,CAAC;AAAA,QAAG;AAExD,kBAAU,MAAM;AAIhB,YAAI,IAAI,SAAS,GAAG;AAChB,cAAI,IAAI,SAAS,SAAS,CAAC,CAAC;AAC5B,cAAI,QAAQ,EAAE,IAAI,GAAG;AAAE,mBAAO,EAAE,IAAI,EAAE;AAAA,UAAG,OAAO;AAAE,mBAAO;AAAA,UAAG;AAAA,QAChE;AAEA,UAAE,UAAU,SAAS,SAAS;AAC1B,cAAI,WAAW,MAAM;AACjB,gBAAI,OAAO,OAAO,MAAM,SAAS;AAC7B,yBAAW;AACX,wBAAU,CAAC,QAAQ,CAAC,GAAG,QAAQ,QAAQ,SAAO,CAAC,CAAC;AAAA,YACpD,OAAO;AACH,kBAAI,IAAI,SAAS,QAAQ,OAAO;AAChC,kBAAI,YAAY,GAAG;AACf,2BAAW,CAAC,EAAE,KAAK,EAAE,GAAG;AAAA,cAC5B,OAAO;AACH,2BAAW,SAAS,OAAO,GAAG,KAAK,OAAO;AAAA,cAC9C;AAAA,YACJ;AACA,mBAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACX;AAGA,UAAE,SAAS,SAAS,QAAQ;AACxB,cAAI,CAAC,UAAU,QAAQ;AACnB,mBAAO;AAAA,UACX;AACA,iBAAO,OAAO,CAAC;AACf,iBAAO,OAAO,OAAO,SAAO,CAAC;AAC7B,iBAAO,CAAC;AACR,cAAI,IAAI,QAAQ;AAChB,cAAK,OAAO,WAAW,KAAO,SAAS,MAAO;AAE1C,qBAASA,KAAI,GAAGE,QAAO,MAAM,KAAK,MAAM,GAAGF,KAAIE,MAAK,QAAQF,MAAK,GAAG;AAChE,kBAAI,IAAIE,MAAKF,EAAC;AAEhB,mBAAK,MAAM,IAAE,SAAS,OAAK,KAAK;AAAA,YAClC;AAAA,UACJ,OAAO;AACH,qBAAS,IAAE,GAAG,IAAE,GAAG,KAAK;AACpB,mBAAK,KAAK,KAAG,IAAE,EAAE;AAAA,YACrB;AACA,gBAAI,OAAO,SAAS,GAAG;AAEnB,kBAAI,OAAO,OAAO,IAAI,SAAUa,IAAEb,IAAG;AAAE,uBAAOA,MAAG,OAAO,SAAO;AAAA,cAAI,CAAC;AACpE,kBAAI,UAAU,OAAO,IAAI,SAAUa,IAAG;AAAE,wBAAQA,KAAI,SAAS,OAAO;AAAA,cAAO,CAAC;AAC5E,kBAAI,CAAC,QAAQ,MAAM,SAAU,KAAKb,IAAG;AAAE,uBAAO,KAAKA,EAAC,MAAM;AAAA,cAAK,CAAC,GAAG;AAC/D,6BAAa,SAAU,GAAG;AACtB,sBAAI,KAAK,KAAK,KAAK,GAAG;AAAE,2BAAO;AAAA,kBAAG;AAClC,sBAAIA,KAAI;AACR,yBAAO,KAAK,QAAQA,KAAE,CAAC,GAAG;AAAE,oBAAAA;AAAA,kBAAK;AACjC,sBAAIc,MAAK,IAAI,QAAQd,EAAC,MAAM,QAAQA,KAAE,CAAC,IAAI,QAAQA,EAAC;AACpD,sBAAI,MAAM,KAAKA,EAAC,IAAIc,MAAK,KAAKd,KAAE,CAAC,IAAI,KAAKA,EAAC;AAC3C,yBAAO;AAAA,gBACX;AAAA,cACJ;AAAA,YAEJ;AAAA,UACJ;AACA,oBAAU,CAAC,MAAM,IAAI;AACrB,iBAAO;AAAA,QACX;AAEA,UAAE,OAAO,SAAS,IAAI;AAClB,cAAI,CAAC,UAAU,QAAQ;AACnB,mBAAO;AAAA,UACX;AACA,kBAAQ;AACR,qBAAW;AACX,iBAAO;AAAA,QACX;AAEA,UAAE,QAAQ,SAASY,SAAQG,OAAM;AAC7B,oBAAUH,OAAM;AAChB,iBAAO;AAAA,QACX;AAEA,UAAE,MAAM,SAAS,IAAI;AACjB,iBAAO;AACP,iBAAO;AAAA,QACX;AAEA,UAAE,SAAS,SAAS,KAAK;AACrB,cAAI,CAAC,UAAU,QAAQ;AACnB,mBAAO;AAAA,UACX;AACA,oBAAU;AACV,iBAAO;AAAA,QACX;AAEA,UAAE,mBAAmB,SAAS,GAAG;AAC7B,cAAI,KAAK,MAAM;AAAE,gBAAI;AAAA,UAAM;AAC3B,8BAAoB;AACpB,qBAAW;AACX,cAAI,mBAAmB;AACnB,4BAAgB,SAAS,GAAG;AACxB,kBAAI,KAAK,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC;AAClC,kBAAI,KAAK,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC;AAClC,kBAAI,MAAM,KAAK;AACf,kBAAI,WAAW,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC;AACxC,kBAAI,UAAU,MAAO,KAAK,MAAM;AAChC,kBAAI,SAAS,WAAW;AACxB,kBAAI,KAAK;AACT,kBAAI,KAAK;AACT,kBAAI,WAAW;AACf,qBAAQ,KAAK,IAAI,MAAM,IAAI,QAAU,aAAa,GAAI;AAClD,iBAAC,WAAW;AACR,sBAAI,KAAK;AAAE,8BAAU;AAAA,kBAAI;AACzB,sBAAI,SAAS,GAAG;AACZ,yBAAK;AACL,0BAAM,KAAK,KAAK;AAAA,kBACpB,OAAO;AACH,yBAAK;AACL,0BAAM,KAAK,KAAK;AAAA,kBACpB;AACA,6BAAW,SAAS,GAAG,IAAI,EAAE,IAAI,EAAE,CAAC;AACpC,yBAAO,SAAS,WAAW;AAAA,gBAC/B,GAAG;AAAA,cACP;AACA,qBAAO;AAAA,YACX;AAAA,UACJ,OAAO;AACH,4BAAgB,SAAU,GAAG;AAAE,qBAAO;AAAA,YAAG;AAAA,UAC7C;AACA,iBAAO;AAAA,QACX;AAEA,UAAE,UAAU,SAAS,GAAG;AACpB,cAAI,KAAK,MAAM;AACX,gBAAI,OAAO,CAAC,MAAM,UAAU;AACxB,kBAAI,CAAC,GAAE,CAAC;AAAA,YACZ;AACA,uBAAW;AACX,mBAAO;AAAA,UACX,OAAO;AACH,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,UAAE,SAAS,SAAS,WAAW,KAAK;AAEhC,cAAI,UAAU,SAAS,GAAG;AAAE,kBAAM;AAAA,UAAO;AACzC,cAAI,SAAS,CAAC;AAEd,cAAI,UAAU,WAAW,GAAG;AACxB,qBAAS,QAAQ,MAAM,CAAC;AAAA,UAE5B,WAAW,cAAc,GAAG;AACxB,qBAAS,CAAC,EAAE,GAAG,CAAC;AAAA,UAEpB,WAAW,YAAY,GAAG;AACtB,gBAAI,KAAK,QAAQ,CAAC;AAClB,gBAAI,KAAK,QAAQ,CAAC,IAAI;AACtB,qBAAS,UAAU,GAAG,WAAW,KAAK,EAAE,IAAI,SAAUZ,IAAG;AAAE,qBAAO,EAAG,KAAOA,MAAG,YAAU,KAAM,EAAI;AAAA,YAAG,CAAC;AAAA,UAE3G,OAAO;AACH,qBAAS,CAAC;AACV,gBAAI,UAAU,CAAC;AACf,gBAAI,YAAa,SAAS,SAAS,GAAI;AACnC,uBAASA,KAAI,GAAG,MAAM,SAAS,QAAQ,MAAM,KAAK,KAAK,MAAMA,KAAI,MAAMA,KAAI,KAAK,MAAMA,OAAMA,MAAK;AAC7F,wBAAQ,MAAM,SAASA,KAAE,CAAC,IAAE,SAASA,EAAC,KAAG,GAAG;AAAA,cAChD;AAAA,YACJ,OAAO;AACH,wBAAU;AAAA,YACd;AACA,qBAAS,QAAQ,IAAI,SAAU,GAAG;AAAE,qBAAO,EAAE,CAAC;AAAA,YAAG,CAAC;AAAA,UACtD;AAEA,cAAI,SAAS,GAAG,GAAG;AACf,qBAAS,OAAO,IAAI,SAAU,GAAG;AAAE,qBAAO,EAAE,GAAG,EAAE;AAAA,YAAG,CAAC;AAAA,UACzD;AACA,iBAAO;AAAA,QACX;AAEA,UAAE,QAAQ,SAAS,GAAG;AAClB,cAAI,KAAK,MAAM;AACX,wBAAY;AACZ,mBAAO;AAAA,UACX,OAAO;AACH,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,UAAE,QAAQ,SAAS,GAAG;AAClB,cAAI,KAAK,MAAM;AACX,qBAAS;AACT,mBAAO;AAAA,UACX,OAAO;AACH,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,UAAE,SAAS,SAAS,GAAG;AACnB,cAAI,KAAK,MAAM;AACX,qBAAS,SAAS,CAAC;AACnB,mBAAO;AAAA,UACX,OAAO;AACH,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAEA,eAAS,UAAU,MAAM,OAAO,WAAW;AACzC,YAAI,QAAQ,CAAC;AACb,YAAI,YAAY,OAAO;AACvB,YAAI,MAAM,CAAC,YAAY,QAAQ,YAAY,QAAQ,IAAI,QAAQ;AAC/D,iBAASA,KAAI,MAAM,YAAYA,KAAI,MAAMA,KAAI,KAAK,YAAYA,OAAMA,MAAK;AACvE,gBAAM,KAAKA,EAAC;AAAA,QACd;AACA,eAAO;AAAA,MACT;AAOA,UAAI,UAAU;AAEd,UAAI,UAAU;AAGd,UAAI,YAAY,SAAS,GAAG;AACxB,YAAI,MAAM,CAAC,GAAG,CAAC;AACf,iBAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AACxB,cAAI,SAAS,CAAC,CAAC;AACf,mBAAS,IAAI,GAAG,KAAK,IAAI,QAAQ,KAAK;AAClC,mBAAO,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC;AAAA,UACzC;AACA,gBAAM;AAAA,QACV;AACA,eAAO;AAAA,MACX;AAEA,UAAI,SAAS,SAAS,QAAQ;AAC1B,YAAI,QAAQ,UAAU;AAEtB,YAAI,GAAG,MAAM,MAAM;AACnB,iBAAS,OAAO,IAAI,SAAU,GAAG;AAAE,iBAAO,IAAI,QAAQ,CAAC;AAAA,QAAG,CAAC;AAC3D,YAAI,OAAO,WAAW,GAAG;AAErB,UAAC,SAAS,OAAO,IAAI,SAAU,GAAG;AAAE,mBAAO,EAAE,IAAI;AAAA,UAAG,CAAC,GAAG,OAAO,OAAO,CAAC,GAAG,OAAO,OAAO,CAAC;AACzF,cAAI,SAAS,GAAG;AACZ,gBAAIS,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,SAAUT,IAAG;AAAE,qBAAO,KAAKA,EAAC,IAAK,KAAK,KAAKA,EAAC,IAAI,KAAKA,EAAC;AAAA,YAAK,CAAC;AACrF,mBAAO,IAAI,QAAQS,MAAK,KAAK;AAAA,UACjC;AAAA,QACJ,WAAW,OAAO,WAAW,GAAG;AAE5B,UAAC,WAAW,OAAO,IAAI,SAAU,GAAG;AAAE,mBAAO,EAAE,IAAI;AAAA,UAAG,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC;AACnH,cAAI,SAAS,GAAG;AACZ,gBAAIA,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,SAAUT,IAAG;AAAE,sBAAS,IAAE,MAAI,IAAE,KAAK,KAAKA,EAAC,IAAM,KAAK,IAAE,KAAK,IAAI,KAAKA,EAAC,IAAM,IAAI,IAAI,KAAKA,EAAC;AAAA,YAAI,CAAC;AACzH,mBAAO,IAAI,QAAQS,MAAK,KAAK;AAAA,UACjC;AAAA,QACJ,WAAW,OAAO,WAAW,GAAG;AAE5B,cAAI;AACJ,UAAC,WAAW,OAAO,IAAI,SAAU,GAAG;AAAE,mBAAO,EAAE,IAAI;AAAA,UAAG,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC,GAAG,OAAO,SAAS,CAAC;AACvI,cAAI,SAAS,GAAG;AACZ,gBAAIA,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,SAAUT,IAAG;AAAE,sBAAS,IAAE,MAAI,IAAE,MAAI,IAAE,KAAK,KAAKA,EAAC,IAAM,KAAK,IAAE,MAAM,IAAE,KAAK,IAAI,KAAKA,EAAC,IAAM,KAAK,IAAE,KAAK,IAAI,IAAI,KAAKA,EAAC,IAAM,IAAE,IAAE,IAAI,KAAKA,EAAC;AAAA,YAAI,CAAC;AACvK,mBAAO,IAAI,QAAQS,MAAK,KAAK;AAAA,UACjC;AAAA,QACJ,WAAW,OAAO,UAAU,GAAG;AAE3B,cAAI,MAAM,KAAK;AACf,iBAAO,OAAO,IAAI,SAAU,GAAG;AAAE,mBAAO,EAAE,IAAI;AAAA,UAAG,CAAC;AAClD,cAAI,OAAO,SAAS;AACpB,gBAAM,UAAU,CAAC;AACjB,cAAI,SAAU,GAAG;AACb,gBAAI,IAAI,IAAI;AACZ,gBAAIA,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,SAAUT,IAAG;AAAE,qBAAO,KAAK,OAAO,SAAU,KAAK,IAAI,GAAG;AAAE,uBAAQ,MAAM,IAAI,CAAC,IAAI,KAAK,IAAK,GAAI,IAAI,CAAG,IAAI,KAAK,IAAK,GAAG,CAAE,IAAI,GAAGA,EAAC;AAAA,cAAI,GAAG,CAAC;AAAA,YAAG,CAAC;AACtK,mBAAO,IAAI,QAAQS,MAAK,KAAK;AAAA,UACjC;AAAA,QACJ,OAAO;AACH,gBAAM,IAAI,WAAW,iDAAiD;AAAA,QAC1E;AACA,eAAO;AAAA,MACX;AAEA,UAAI,WAAW,SAAU,QAAQ;AAC7B,YAAI,IAAI,OAAO,MAAM;AACrB,UAAE,QAAQ,WAAY;AAAE,iBAAO,QAAQ,CAAC;AAAA,QAAG;AAC3C,eAAO;AAAA,MACX;AAOA,UAAI,WAAW;AAEf,UAAI,QAAQ,SAAU,QAAQ,KAAK,MAAM;AACrC,YAAI,CAAC,MAAM,IAAI,GAAG;AACd,gBAAM,IAAI,MAAM,wBAAwB,IAAI;AAAA,QAChD;AACA,eAAO,MAAM,IAAI,EAAE,QAAQ,GAAG;AAAA,MAClC;AAEA,UAAI,UAAU,SAAU,GAAG;AAAE,eAAO,SAAU,QAAO,KAAK;AAClD,cAAI,KAAK,SAAS,GAAG,EAAE,IAAI;AAC3B,cAAI,KAAK,SAAS,MAAM,EAAE,IAAI;AAC9B,iBAAO,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC;AAAA,QACjC;AAAA,MAAG;AAEP,UAAI,OAAO,SAAU,GAAG;AAAE,eAAO,SAAU,IAAI,IAAI;AAC3C,cAAI,MAAM,CAAC;AACX,cAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AACvB,cAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AACvB,cAAI,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AACvB,iBAAO;AAAA,QACX;AAAA,MAAG;AAEP,UAAI,SAAS,SAAU,GAAG;AAAE,eAAO;AAAA,MAAG;AACtC,UAAI,WAAW,SAAU,GAAE,GAAG;AAAE,eAAO,IAAI,IAAI;AAAA,MAAK;AACpD,UAAI,SAAS,SAAU,GAAE,GAAG;AAAE,eAAO,IAAI,IAAI,IAAI;AAAA,MAAG;AACpD,UAAI,UAAU,SAAU,GAAE,GAAG;AAAE,eAAO,IAAI,IAAI,IAAI;AAAA,MAAG;AACrD,UAAI,SAAS,SAAU,GAAE,GAAG;AAAE,eAAO,OAAO,KAAK,IAAE,IAAE,QAAQ,IAAE,IAAE;AAAA,MAAO;AACxE,UAAI,UAAU,SAAU,GAAE,GAAG;AAAE,eAAO,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,OAAO,IAAI,KAAK,IAAI,IAAI,QAAU,IAAI,IAAI;AAAA,MAAQ;AACpH,UAAI,OAAO,SAAU,GAAE,GAAG;AAAE,eAAO,OAAO,KAAK,IAAI,IAAI,QAAQ,IAAE;AAAA,MAAO;AACxE,UAAI,QAAQ,SAAU,GAAE,GAAG;AACvB,YAAI,MAAM,KAAK;AAAE,iBAAO;AAAA,QAAK;AAC7B,YAAI,OAAO,IAAI,QAAQ,IAAI,IAAI;AAC/B,eAAO,IAAI,MAAM,MAAM;AAAA,MAC3B;AAKA,YAAM,SAAS,QAAQ,KAAK,MAAM,CAAC;AACnC,YAAM,WAAW,QAAQ,KAAK,QAAQ,CAAC;AACvC,YAAM,SAAS,QAAQ,KAAK,MAAM,CAAC;AACnC,YAAM,UAAU,QAAQ,KAAK,OAAO,CAAC;AACrC,YAAM,SAAS,QAAQ,KAAK,MAAM,CAAC;AACnC,YAAM,UAAU,QAAQ,KAAK,OAAO,CAAC;AACrC,YAAM,QAAQ,QAAQ,KAAK,KAAK,CAAC;AACjC,YAAM,OAAO,QAAQ,KAAK,IAAI,CAAC;AAG/B,UAAI,UAAU;AAMd,UAAI,SAAS,MAAM;AACnB,UAAI,WAAW,MAAM;AACrB,UAAI,QAAQ,MAAM;AAClB,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK;AACjB,UAAI,WAAW;AAEf,UAAI,YAAY,SAAS,OAAO,WAAW,KAAK,OAAO,WAAW;AAC9D,YAAK,UAAU;AAAS,kBAAM;AAC9B,YAAK,cAAc;AAAS,sBAAU;AACtC,YAAK,QAAQ;AAAS,gBAAI;AAC1B,YAAK,UAAU;AAAS,kBAAM;AAC9B,YAAK,cAAc;AAAS,sBAAU,CAAC,GAAE,CAAC;AAE1C,YAAI,KAAK,GAAG;AACZ,YAAI,OAAO,SAAS,MAAM,SAAS;AAC/B,eAAK,UAAU,CAAC,IAAI,UAAU,CAAC;AAAA,QACnC,OAAO;AACH,eAAK;AACL,sBAAY,CAAC,WAAW,SAAS;AAAA,QACrC;AAEA,YAAI,IAAI,SAAS,OAAO;AACpB,cAAI,IAAI,UAAW,QAAM,OAAK,MAAQ,YAAY;AAClD,cAAI,IAAI,MAAM,UAAU,CAAC,IAAK,KAAK,OAAQ,KAAK;AAChD,cAAI,IAAI,OAAO,IAAI,IAAI,CAAC,IAAK,QAAQ,KAAM;AAC3C,cAAI,MAAO,IAAI,KAAK,IAAE,KAAM;AAC5B,cAAI,QAAQ,MAAM,CAAC;AACnB,cAAI,QAAQ,MAAM,CAAC;AACnB,cAAI,IAAI,IAAK,OAAQ,WAAW,QAAU,UAAS;AACnD,cAAI,IAAI,IAAK,OAAQ,WAAW,QAAU,UAAS;AACnD,cAAI,IAAI,IAAK,OAAO,UAAW;AAC/B,iBAAO,SAAS,SAAS,CAAC,IAAE,KAAI,IAAE,KAAI,IAAE,KAAI,CAAC,CAAC,CAAC;AAAA,QACnD;AAEA,UAAE,QAAQ,SAAS,GAAG;AAClB,cAAK,KAAK,MAAO;AAAE,mBAAO;AAAA,UAAO;AACjC,kBAAQ;AACR,iBAAO;AAAA,QACX;AAEA,UAAE,YAAY,SAAS,GAAG;AACtB,cAAK,KAAK,MAAO;AAAE,mBAAO;AAAA,UAAW;AACrC,sBAAY;AACZ,iBAAO;AAAA,QACX;AAEA,UAAE,QAAQ,SAAS,GAAG;AAClB,cAAK,KAAK,MAAO;AAAE,mBAAO;AAAA,UAAO;AACjC,kBAAQ;AACR,iBAAO;AAAA,QACX;AAEA,UAAE,MAAM,SAAS,GAAG;AAChB,cAAK,KAAK,MAAO;AAAE,mBAAO;AAAA,UAAK;AAC/B,gBAAM;AACN,cAAI,OAAO,GAAG,MAAM,SAAS;AACzB,iBAAK,IAAI,CAAC,IAAI,IAAI,CAAC;AACnB,gBAAI,OAAO,GAAG;AAAE,oBAAM,IAAI,CAAC;AAAA,YAAG;AAAA,UAClC,OAAO;AACH,iBAAK;AAAA,UACT;AACA,iBAAO;AAAA,QACX;AAEA,UAAE,YAAY,SAAS,GAAG;AACtB,cAAK,KAAK,MAAO;AAAE,mBAAO;AAAA,UAAW;AACrC,cAAI,OAAO,CAAC,MAAM,SAAS;AACvB,wBAAY;AACZ,iBAAK,EAAE,CAAC,IAAI,EAAE,CAAC;AAAA,UACnB,OAAO;AACH,wBAAY,CAAC,GAAE,CAAC;AAChB,iBAAK;AAAA,UACT;AACA,iBAAO;AAAA,QACX;AAEA,UAAE,QAAQ,WAAY;AAAE,iBAAO,SAAS,MAAM,CAAC;AAAA,QAAG;AAElD,UAAE,IAAI,GAAG;AAET,eAAO;AAAA,MACX;AAEA,UAAI,UAAU;AACd,UAAI,SAAS;AAEb,UAAI,UAAU,KAAK;AACnB,UAAI,SAAS,KAAK;AAElB,UAAI,WAAW,WAAY;AACvB,YAAI,OAAO;AACX,iBAAST,KAAE,GAAGA,KAAE,GAAGA,MAAK;AACpB,kBAAQ,OAAO,OAAO,QAAQ,OAAO,IAAI,EAAE,CAAC;AAAA,QAChD;AACA,eAAO,IAAI,QAAQ,MAAM,KAAK;AAAA,MAClC;AAEA,UAAI,OAAO;AACX,UAAI,MAAM,KAAK;AACf,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK;AACjB,UAAI,QAAQ,KAAK;AAGjB,UAAI,UAAU,SAAU,MAAMgB,MAAK;AAC/B,YAAKA,SAAQ;AAAS,UAAAA,OAAI;AAE1B,YAAI,IAAI;AAAA,UACJ,KAAK,OAAO;AAAA,UACZ,KAAK,OAAO,YAAU;AAAA,UACtB,KAAK;AAAA,UACL,QAAQ,CAAC;AAAA,UACT,OAAO;AAAA,QACX;AACA,YAAI,KAAK,IAAI,MAAM,UAAU;AACzB,iBAAO,OAAO,OAAO,IAAI;AAAA,QAC7B;AACA,aAAK,QAAQ,SAAU,KAAK;AACxB,cAAIA,QAAO,KAAK,GAAG,MAAM,UAAU;AAAE,kBAAM,IAAIA,IAAG;AAAA,UAAG;AACrD,cAAI,QAAQ,UAAa,QAAQ,QAAQ,CAAC,MAAM,GAAG,GAAG;AAClD,cAAE,OAAO,KAAK,GAAG;AACjB,cAAE,OAAO;AACT,gBAAI,MAAM,EAAE,KAAK;AAAE,gBAAE,MAAM;AAAA,YAAK;AAChC,gBAAI,MAAM,EAAE,KAAK;AAAE,gBAAE,MAAM;AAAA,YAAK;AAChC,cAAE,SAAS;AAAA,UACf;AAAA,QACJ,CAAC;AAED,UAAE,SAAS,CAAC,EAAE,KAAK,EAAE,GAAG;AAExB,UAAE,SAAS,SAAU,MAAMV,MAAK;AAAE,iBAAO,OAAO,GAAG,MAAMA,IAAG;AAAA,QAAG;AAE/D,eAAO;AAAA,MACX;AAGA,UAAI,SAAS,SAAU,MAAM,MAAMA,MAAK;AACpC,YAAK,SAAS;AAAS,iBAAK;AAC5B,YAAKA,SAAQ;AAAS,UAAAA,OAAI;AAE1B,YAAI,KAAK,IAAI,KAAK,SAAS;AACvB,iBAAO,QAAQ,IAAI;AAAA,QACvB;AACA,YAAIT,OAAM,KAAK;AACf,YAAIC,OAAM,KAAK;AACf,YAAI,SAAS,KAAK,OAAO,KAAK,SAAU,GAAE,GAAG;AAAE,iBAAO,IAAE;AAAA,QAAG,CAAC;AAE5D,YAAIQ,SAAQ,GAAG;AAAE,iBAAO,CAACT,MAAIC,IAAG;AAAA,QAAG;AAEnC,YAAImB,UAAS,CAAC;AAEd,YAAI,KAAK,OAAO,GAAE,CAAC,MAAM,KAAK;AAC1B,UAAAA,QAAO,KAAKpB,IAAG;AACf,UAAAoB,QAAO,KAAKnB,IAAG;AAAA,QACnB;AAEA,YAAI,KAAK,OAAO,GAAE,CAAC,MAAM,KAAK;AAC1B,UAAAmB,QAAO,KAAKpB,IAAG;AACf,mBAASG,KAAE,GAAGA,KAAEM,MAAKN,MAAK;AACtB,YAAAiB,QAAO,KAAKpB,OAAMG,KAAEM,QAAMR,OAAID,KAAK;AAAA,UACvC;AACA,UAAAoB,QAAO,KAAKnB,IAAG;AAAA,QACnB,WAES,KAAK,OAAO,GAAE,CAAC,MAAM,KAAK;AAC/B,cAAID,QAAO,GAAG;AACV,kBAAM,IAAI,MAAM,qDAAqD;AAAA,UACzE;AACA,cAAI,UAAU,KAAK,SAAS,IAAIA,IAAG;AACnC,cAAI,UAAU,KAAK,SAAS,IAAIC,IAAG;AACnC,UAAAmB,QAAO,KAAKpB,IAAG;AACf,mBAASM,OAAI,GAAGA,OAAIG,MAAKH,QAAO;AAC5B,YAAAc,QAAO,KAAK,MAAM,IAAI,UAAYd,OAAIG,QAAQ,UAAU,QAAS,CAAC;AAAA,UACtE;AACA,UAAAW,QAAO,KAAKnB,IAAG;AAAA,QACnB,WAES,KAAK,OAAO,GAAE,CAAC,MAAM,KAAK;AAC/B,UAAAmB,QAAO,KAAKpB,IAAG;AACf,mBAAS,MAAI,GAAG,MAAIS,MAAK,OAAO;AAC5B,gBAAI,KAAM,OAAO,SAAO,KAAK,MAAKA;AAClC,gBAAI,KAAK,MAAM,CAAC;AAChB,gBAAI,OAAO,GAAG;AACV,cAAAW,QAAO,KAAK,OAAO,EAAE,CAAC;AAAA,YAC1B,OAAO;AACH,kBAAI,KAAK,IAAI;AACb,cAAAA,QAAO,KAAM,OAAO,EAAE,KAAG,IAAE,MAAQ,OAAO,KAAG,CAAC,IAAE,EAAG;AAAA,YACvD;AAAA,UACJ;AACA,UAAAA,QAAO,KAAKnB,IAAG;AAAA,QAEnB,WAES,KAAK,OAAO,GAAE,CAAC,MAAM,KAAK;AAM/B,cAAI;AACJ,cAAI,IAAI,OAAO;AACf,cAAI,cAAc,IAAI,MAAM,CAAC;AAC7B,cAAI,eAAe,IAAI,MAAMQ,IAAG;AAChC,cAAI,SAAS;AACb,cAAI,WAAW;AACf,cAAI,YAAY;AAGhB,sBAAY,CAAC;AACb,oBAAU,KAAKT,IAAG;AAClB,mBAAS,MAAI,GAAG,MAAIS,MAAK,OAAO;AAC5B,sBAAU,KAAKT,OAAQ,MAAIS,QAAQR,OAAID,KAAK;AAAA,UAChD;AACA,oBAAU,KAAKC,IAAG;AAElB,iBAAO,QAAQ;AAEX,qBAAS,IAAE,GAAG,IAAEQ,MAAK,KAAK;AACtB,2BAAa,CAAC,IAAI;AAAA,YACtB;AACA,qBAAS,MAAI,GAAG,MAAI,GAAG,OAAO;AAC1B,kBAAI,QAAQ,OAAO,GAAG;AACtB,kBAAI,UAAU,OAAO;AACrB,kBAAI,OAAQ;AACZ,uBAAS,MAAI,GAAG,MAAIA,MAAK,OAAO;AAC5B,oBAAI,OAAO,MAAM,UAAU,GAAG,IAAE,KAAK;AACrC,oBAAI,OAAO,SAAS;AAChB,4BAAU;AACV,yBAAO;AAAA,gBACX;AACA,6BAAa,IAAI;AACjB,4BAAY,GAAG,IAAI;AAAA,cACvB;AAAA,YACJ;AAGA,gBAAI,eAAe,IAAI,MAAMA,IAAG;AAChC,qBAAS,MAAI,GAAG,MAAIA,MAAK,OAAO;AAC5B,2BAAa,GAAG,IAAI;AAAA,YACxB;AACA,qBAAS,MAAI,GAAG,MAAI,GAAG,OAAO;AAC1B,wBAAU,YAAY,GAAG;AACzB,kBAAI,aAAa,OAAO,MAAM,MAAM;AAChC,6BAAa,OAAO,IAAI,OAAO,GAAG;AAAA,cACtC,OAAO;AACH,6BAAa,OAAO,KAAK,OAAO,GAAG;AAAA,cACvC;AAAA,YACJ;AACA,qBAAS,MAAI,GAAG,MAAIA,MAAK,OAAO;AAC5B,2BAAa,GAAG,KAAK,IAAE,aAAa,GAAG;AAAA,YAC3C;AAGA,qBAAS;AACT,qBAAS,MAAI,GAAG,MAAIA,MAAK,OAAO;AAC5B,kBAAI,aAAa,GAAG,MAAM,UAAU,GAAG,GAAG;AACtC,yBAAS;AACT;AAAA,cACJ;AAAA,YACJ;AAEA,wBAAY;AACZ;AAEA,gBAAI,WAAW,KAAK;AAChB,uBAAS;AAAA,YACb;AAAA,UACJ;AAIA,cAAI,YAAY,CAAC;AACjB,mBAAS,MAAI,GAAG,MAAIA,MAAK,OAAO;AAC5B,sBAAU,GAAG,IAAI,CAAC;AAAA,UACtB;AACA,mBAAS,MAAI,GAAG,MAAI,GAAG,OAAO;AAC1B,sBAAU,YAAY,GAAG;AACzB,sBAAU,OAAO,EAAE,KAAK,OAAO,GAAG,CAAC;AAAA,UACvC;AACA,cAAI,kBAAkB,CAAC;AACvB,mBAAS,MAAI,GAAG,MAAIA,MAAK,OAAO;AAC5B,4BAAgB,KAAK,UAAU,GAAG,EAAE,CAAC,CAAC;AACtC,4BAAgB,KAAK,UAAU,GAAG,EAAE,UAAU,GAAG,EAAE,SAAO,CAAC,CAAC;AAAA,UAChE;AACA,4BAAkB,gBAAgB,KAAK,SAAU,GAAE,GAAE;AAAE,mBAAO,IAAE;AAAA,UAAG,CAAC;AACpE,UAAAW,QAAO,KAAK,gBAAgB,CAAC,CAAC;AAC9B,mBAAS,MAAI,GAAG,MAAM,gBAAgB,QAAQ,OAAM,GAAG;AACnD,gBAAI,IAAI,gBAAgB,GAAG;AAC3B,gBAAI,CAAC,MAAM,CAAC,KAAMA,QAAO,QAAQ,CAAC,MAAM,IAAK;AACzC,cAAAA,QAAO,KAAK,CAAC;AAAA,YACjB;AAAA,UACJ;AAAA,QACJ;AACA,eAAOA;AAAA,MACX;AAEA,UAAI,YAAY,EAAC,SAAkB,OAAc;AAEjD,UAAI,UAAU;AAGd,UAAI,WAAW,SAAU,GAAG,GAAG;AAG3B,YAAI,IAAI,QAAQ,CAAC;AACjB,YAAI,IAAI,QAAQ,CAAC;AACjB,YAAI,KAAK,EAAE,UAAU;AACrB,YAAI,KAAK,EAAE,UAAU;AACrB,eAAO,KAAK,MAAM,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,KAAK;AAAA,MACrE;AAEA,UAAI,UAAU;AACd,UAAI,OAAO,KAAK;AAChB,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AACf,UAAI,QAAQ,KAAK;AACjB,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AACf,UAAI,MAAM,KAAK;AACf,UAAI,KAAK,KAAK;AAEd,UAAI,SAAS,SAAS,GAAG,GAAG,IAAI,IAAI,IAAI;AACpC,YAAK,OAAO;AAAS,eAAG;AACxB,YAAK,OAAO;AAAS,eAAG;AACxB,YAAK,OAAO;AAAS,eAAG;AAIxB,YAAI,UAAU,SAAS,KAAK;AACxB,iBAAO,MAAM,OAAO,IAAI;AAAA,QAC5B;AACA,YAAI,UAAU,SAAS,KAAK;AACxB,iBAAQ,IAAI,KAAK,MAAO;AAAA,QAC5B;AACA,YAAI,IAAI,QAAQ,CAAC;AACjB,YAAI,IAAI,QAAQ,CAAC;AACjB,YAAI,MAAM,MAAM,KAAK,EAAE,IAAI,CAAC;AAC5B,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,KAAK,IAAI,CAAC;AACd,YAAI,QAAQ,MAAM,KAAK,EAAE,IAAI,CAAC;AAC9B,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,KAAK,MAAM,CAAC;AAChB,YAAI,QAAQ,KAAK,MAAI;AACrB,YAAI,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACrC,YAAI,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACrC,YAAI,QAAQ,KAAK,MAAI;AACrB,YAAI,IAAI,OAAK,IAAE,KAAK,IAAI,MAAM,CAAC,KAAG,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;AAC5D,YAAI,MAAM,MAAI,IAAE;AAChB,YAAI,MAAM,MAAI,IAAE;AAChB,YAAI,MAAM,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACvC,YAAI,MAAM,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACvC,YAAI,SAAS,MAAM,OAAK;AACxB,YAAI,UAAU,QAAQ,MAAM,IAAI,GAAG,CAAC;AACpC,YAAI,UAAU,QAAQ,MAAM,IAAI,GAAG,CAAC;AACpC,YAAI,MAAM,WAAW,IAAI,UAAU,UAAU;AAC7C,YAAI,MAAM,WAAW,IAAI,UAAU,UAAU;AAC7C,YAAI,QAAQ,IAAI,MAAM,GAAG,IAAI,OAAO,MAAM,MAAM,OAAK,KAAK,MAAM,OAAK;AACrE,YAAI,IAAI,IAAI,OAAK,IAAI,QAAQ,QAAQ,EAAE,CAAC,IAAI,OAAK,IAAI,QAAQ,IAAE,KAAK,CAAC,IAAI,OAAK,IAAI,QAAQ,IAAE,QAAQ,CAAC,CAAC,IAAI,MAAI,IAAI,QAAQ,IAAE,QAAQ,EAAE,CAAC;AACvI,YAAI,UAAU,MAAM;AACpB,kBAAU,IAAI,OAAO,KAAK,MAAM,UAAU,OAAO,MAAM,UAAU,MAAM,UAAU;AACjF,kBAAU,IAAE,KAAK,MAAI,GAAG,IAAE,IAAI,QAAQ,OAAO,IAAE,CAAC;AAChD,YAAI,SAAS,KAAK;AAClB,YAAI,UAAU,MAAM;AACpB,YAAI,KAAK,IAAK,QAAM,IAAI,OAAO,IAAI,CAAC,IAAG,KAAK,KAAK,IAAI,OAAO,IAAI,CAAC,CAAC;AAClE,YAAI,KAAK,IAAI,QAAM;AACnB,YAAI,KAAK,IAAI,QAAM,QAAM;AACzB,YAAI,aAAa,KAAG,IAAI,CAAC,KAAK,QAAQ,OAAK,IAAI,CAAC,CAAC;AACjD,YAAI,KAAK,IAAE,KAAK,IAAI,OAAO,CAAC,KAAG,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;AAC1D,YAAI,KAAK,CAAC,KAAG,IAAI,IAAE,QAAQ,UAAU,CAAC;AACtC,YAAI,SAAS,KAAK,IAAI,UAAQ,KAAG,KAAK,CAAC,IAAI,IAAI,WAAS,KAAG,KAAK,CAAC,IAAI,IAAI,WAAS,KAAG,KAAK,CAAC,IAAI,MAAI,WAAS,KAAG,QAAM,WAAS,KAAG,IAAI;AACrI,eAAO,IAAI,GAAG,IAAI,KAAK,MAAM,CAAC;AAAA,MAClC;AAEA,UAAI,UAAU;AAGd,UAAI,WAAW,SAAS,GAAG,GAAG,MAAM;AAChC,YAAK,SAAS;AAAS,iBAAK;AAI5B,YAAI,IAAI,QAAQ,CAAC;AACjB,YAAI,IAAI,QAAQ,CAAC;AACjB,YAAI,KAAK,EAAE,IAAI,IAAI;AACnB,YAAI,KAAK,EAAE,IAAI,IAAI;AACnB,YAAI,SAAS;AACb,iBAASjB,MAAK,IAAI;AACd,cAAI,KAAK,GAAGA,EAAC,KAAK,MAAM,GAAGA,EAAC,KAAK;AACjC,oBAAU,IAAE;AAAA,QAChB;AACA,eAAO,KAAK,KAAK,MAAM;AAAA,MAC3B;AAEA,UAAI,QAAQ;AAEZ,UAAI,QAAQ,WAAY;AACpB,YAAI,OAAO,CAAC,GAAG,MAAM,UAAU;AAC/B,eAAQ;AAAQ,eAAM,GAAI,IAAI,UAAW,GAAI;AAE7C,YAAI;AACA,eAAK,SAAS,UAAU,KAAK,MAAO,OAAO,CAAE,IAAK,EAAE,OAAQ,IAAI,CAAE;AAClE,iBAAO;AAAA,QACX,SAAS,GAAG;AACR,iBAAO;AAAA,QACX;AAAA,MACJ;AAGA,UAAI,WAAW;AAEf,UAAI,QAAQ;AAEZ,UAAI,SAAS;AAAA,QACZ,MAAM,SAAS,OAAO;AAAE,iBAAO,MAAM,CAAC,SAAS,IAAI,KAAI,GAAE,GAAE,GAAG,SAAS,IAAI,KAAI,KAAG,GAAE,CAAC,CAAC;AAAA,QAAE;AAAA,QACxF,KAAK,SAAS,MAAM;AAAE,iBAAO,MAAM,CAAC,QAAO,QAAO,QAAO,MAAM,CAAC,EAAE,KAAK,KAAK;AAAA,QAAE;AAAA,MAC/E;AAmBA,UAAI,cAAc;AAAA;AAAA,QAEd,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,SAAS,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC3G,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC1G,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC1G,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC1G,SAAS,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC3G,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,OAAO,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACzG,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC1G,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,OAAO,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACzG,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC1G,SAAS,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA;AAAA,QAI3G,UAAU,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAClI,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAChI,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC9H,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC9H,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC9H,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAChI,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC9H,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC9H,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA;AAAA,QAI9H,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC7F,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC/F,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACxG,MAAM,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QACzI,OAAO,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC9F,QAAQ,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAC3I,SAAS,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,QAChG,SAAS,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AAAA,MAC/G;AAGA,eAAS,IAAI,GAAG,OAAO,OAAO,KAAK,WAAW,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAG;AACtE,YAAI,MAAM,KAAK,CAAC;AAEhB,oBAAY,IAAI,YAAY,CAAC,IAAI,YAAY,GAAG;AAAA,MACpD;AAEA,UAAI,gBAAgB;AAEpB,UAAI,SAAS;AAgDb,aAAO,UAAU;AACjB,aAAO,SAAS;AAChB,aAAO,QAAQ;AACf,aAAO,YAAY;AACnB,aAAO,MAAM,OAAO,cAAc;AAClC,aAAO,SAAS;AAChB,aAAO,QAAQ;AAGf,aAAO,UAAU,UAAU;AAC3B,aAAO,WAAW;AAClB,aAAO,SAAS;AAChB,aAAO,WAAW;AAClB,aAAO,SAAS,UAAU;AAC1B,aAAO,QAAQ;AAGf,aAAO,SAAS;AAGhB,aAAO,SAAS;AAChB,aAAO,SAAS;AAEhB,UAAI,YAAY;AAEhB,aAAO;AAAA,IAEX,CAAE;AAAA;AAAA;",
  "names": ["min", "max", "rgb", "i", "Color", "list", "i$1", "hsl", "name", "num", "rnd", "abs", "lab", "lch", "A", "colors", "d", "f", "_pos", "key", "limits"]
}
